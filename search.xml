<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>使用python脚本生成iOS的2x、3x png图片</title>
      <link href="/2025/03/24/ios/20250324-python-generate-ios-png/"/>
      <url>/2025/03/24/ios/20250324-python-generate-ios-png/</url>
      
        <content type="html"><![CDATA[<p>如何使用Python脚本生成iOS开发中的二倍图生成一倍图+三倍图。</p><h1 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h1><ol><li>安装Python3。</li><li>安装 PIL，也就是 Pillow，如果没有下载的话，可以通过 pip 进行下载 <code>pip3 install Pillow</code>。</li><li>将原始二倍图片放入指定的文件夹。</li></ol><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"># python3</span><br><span class="line"></span><br><span class="line">from PIL import Image</span><br><span class="line">import glob</span><br><span class="line">import os, sys</span><br><span class="line"></span><br><span class="line"># 扩展图片为1、2、3倍图</span><br><span class="line">def scale_image(file_name,file_type):</span><br><span class="line">ori_img = Image.open(file_name + &#x27;.&#x27; + file_type)</span><br><span class="line"></span><br><span class="line">#一倍图</span><br><span class="line">new_img = ori_img.resize((int(ori_img.width/2),int(ori_img.height/2)),Image.BILINEAR)</span><br><span class="line">new_img.save(file_name + &#x27;@1x.&#x27; + file_type)</span><br><span class="line"></span><br><span class="line">#三倍图</span><br><span class="line">new_img = ori_img.resize((int(ori_img.width*1.5),int(ori_img.height*1.5)),Image.BILINEAR)</span><br><span class="line">new_img.save(file_name + &#x27;@3x.&#x27; + file_type)</span><br><span class="line">        </span><br><span class="line">#二倍图重命名</span><br><span class="line">try:</span><br><span class="line">os.rename(file_name + &#x27;.&#x27; + file_type,file_name + &#x27;@2x.&#x27; + file_type)</span><br><span class="line">except Exception:</span><br><span class="line">print(&#x27;重命名发生错误&#x27;)</span><br><span class="line">else:</span><br><span class="line">pass</span><br><span class="line">finally:</span><br><span class="line">pass</span><br><span class="line"></span><br><span class="line"># 是否是需要扩展的图片</span><br><span class="line">def is_normal_image(file_name):</span><br><span class="line">ignore_string = [&#x27;@1x&#x27;,&#x27;@2x&#x27;,&#x27;@3x&#x27;]</span><br><span class="line"></span><br><span class="line">    # 如果自带@1x,@2x,@3x，则不需要进行扩展</span><br><span class="line">for name in ignore_string:</span><br><span class="line">if name in file_name:</span><br><span class="line">return False</span><br><span class="line"></span><br><span class="line">return True</span><br><span class="line"></span><br><span class="line">current_path = os.path.dirname(__file__)</span><br><span class="line">png_files = glob.glob(current_path + &quot;/*.png&quot;)</span><br><span class="line">for img_file in png_files :</span><br><span class="line">    file_name = img_file[:-4]</span><br><span class="line">    if is_normal_image(file_name):</span><br><span class="line">        scale_image(file_name,&#x27;png&#x27;)</span><br><span class="line">    else :</span><br><span class="line">        print(file_name)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>将此脚本放入二倍图片同级目录的文件夹中，执行此脚本。</p><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><ol><li>主要目的是缩放图片，所以需要使用PIL中的 resize 方法，将图片大小进行缩放，Image.BILINEAR代表用的是哪种算法；</li><li>判断文件夹中的图片是否已经缩放过了，原理是根据缩放过的会含有@1x，@2x，@3x的字样，所以对包含这种名字的图片不进行处理即可；</li><li>遍历文件夹，并获得所有的图片，这里使用glob.glob()方法获取所有符合要求的图片。（在这里就只找.png格式的图片）</li></ol>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> iOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从零开始学习SpringBoot(二)-创建第一个SpringBoot项目</title>
      <link href="/2023/12/08/server/20231208-learn-spring-boot-2/"/>
      <url>/2023/12/08/server/20231208-learn-spring-boot-2/</url>
      
        <content type="html"><![CDATA[<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h2 id="IntelliJ-IDEA"><a href="#IntelliJ-IDEA" class="headerlink" title="IntelliJ IDEA"></a>IntelliJ IDEA</h2><p>IntelliJ IDEA是一种商业化销售的Java集成开发环境（Integrated Development Environment，IDE）工具软件，由<a href="https://www.jetbrains.com/">JetBrains软件公司</a>（前称为IntelliJ）开发，提供Apache 2.0开放式授权的社区版本以及专有软件的商业版本，开发者可选择其所需来下载使用。</p><p>IDEA 全称IntelliJ IDEA，是用于java语言开发的集成环境（也可用于其他语言），IntelliJ在业界被公认为最好的java开发工具之一，尤其在智能代码助手、代码自动提示、重构、J2EE支持、Ant、JUnit、CVS整合、代码审查、 创新的GUI设计等方面的功能可以说是超常的。IDEA是JetBrains公司的产品，这家公司总部位于捷克共和国的首都布拉格，开发人员以严谨著称的东欧程序员为主。</p><h2 id="My-SQL"><a href="#My-SQL" class="headerlink" title="My SQL"></a>My SQL</h2><p>MySQL 是最流行的关系型数据库管理系统，在 WEB 应用方面 MySQL 是最好的 RDBMS(Relational Database Management System：关系数据库管理系统)应用软件之一。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>使用Homebrew安装</p><p>启动mysql服务命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew services start mysql</span><br></pre></td></tr></table></figure><p>停止mysql服务命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew services stop mysql</span><br></pre></td></tr></table></figure><p>首次启动会提示MySql配置选项，根据自身需求设置数据库配置即可。</p><p><strong>需要注意的是：数据库的用户名和密码一定要储存好，不然重置密码相当麻烦。</strong></p><h2 id="Navicat"><a href="#Navicat" class="headerlink" title="Navicat"></a>Navicat</h2><p>Navicat Premium 是一套可创建多个连接的数据库开发工具，让你从单一应用程序中同时连接 MySQL、Redis、MariaDB、MongoDB、SQL Server、Oracle、PostgreSQL 和 SQLite 。它与 GaussDB 、OceanBase 数据库及 Amazon RDS、Amazon Aurora、Amazon Redshift、Amazon ElastiCache、Microsoft Azure、Oracle Cloud、MongoDB Atlas、Redis Enterprise Cloud、阿里云、腾讯云和华为云等云数据库兼容。你可以快速轻松地创建、管理和维护数据库。</p><p>这里介绍这个软件主要是其可以直接查看数据库的表与数据，比较方便，是否安装看自身需求。</p><h2 id="JDK"><a href="#JDK" class="headerlink" title="JDK"></a>JDK</h2><p><a href="https://www.oracle.com/java/technologies/downloads/">官方下载链接</a></p><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><ol><li>官网直接下载安装</li><li>使用 Homebrew 安装</li><li>使用 IDEA 集成JDK</li></ol><p>这几种方式都可以实现JDK的安装。</p><h1 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h1><h2 id="操作路径"><a href="#操作路径" class="headerlink" title="操作路径"></a>操作路径</h2><ol><li>打开IntelliJ IDEA</li><li>点击New Project</li><li>选择Spring Initializr；创建项目名称；根据自己需求选择支持语言与包管理工具；选择java环境，IDEA可以直接管理下载JDK。</li><li>点击下一步，可以在这里选择自己需要的Spring工具，也可以创建项目后手动添加依赖，不过至少要勾选Web-&gt;Spring Web选项。</li><li>点击Create创建完成。</li></ol><h2 id="关于项目目录"><a href="#关于项目目录" class="headerlink" title="关于项目目录"></a>关于项目目录</h2><p>可以参考：<a href="https://zhuanlan.zhihu.com/p/115403195">https://zhuanlan.zhihu.com/p/115403195</a></p>]]></content>
      
      
      <categories>
          
          <category> 服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从零开始学习SpringBoot(一)-关于SpringBoot</title>
      <link href="/2023/12/08/server/20231208-learn-spring-boot-1/"/>
      <url>/2023/12/08/server/20231208-learn-spring-boot-1/</url>
      
        <content type="html"><![CDATA[<p class="note note-info">Spring Boot 是一款基于 Spring 框架的开源应用程序开发工具，它旨在简化 Spring 应用程序的配置和开发过程。Spring Boot 提供了一种简单的方式来创建可独立运行的、生产级别的应用程序，并在需要时进行部署。Spring Boot 在微服务架构和云计算环境下得到了广泛应用，本文将介绍 Spring Boot 的特性、优势以及使用方法。</p><h1 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h1><p>官方网站地址：<a href="https://spring.io/projects/spring-boot">https://spring.io/projects/spring-boot</a></p><h1 id="Spring-Boot-的特性"><a href="#Spring-Boot-的特性" class="headerlink" title="Spring Boot 的特性"></a>Spring Boot 的特性</h1><p>Spring Boot 拥有一系列独特的特性，下面我们将对其中的几个进行详细介绍。</p><h3 id="1、自动配置"><a href="#1、自动配置" class="headerlink" title="1、自动配置"></a>1、自动配置</h3><p>Spring Boot 的自动配置功能让开发人员无需手动配置 Spring 应用程序，减少了配置的时间和工作量。Spring Boot 会自动根据应用程序所需的配置信息进行配置，包括数据源、缓存等。</p><h3 id="2、起步依赖"><a href="#2、起步依赖" class="headerlink" title="2、起步依赖"></a>2、起步依赖</h3><p>Spring Boot 提供了大量的起步依赖，这些依赖包含了大量的类库和框架，可以满足开发人员的需求。开发人员可以根据项目需要选择需要的依赖，以及自定义依赖。</p><h3 id="3、命令行界面"><a href="#3、命令行界面" class="headerlink" title="3、命令行界面"></a>3、命令行界面</h3><p>Spring Boot 提供了命令行界面，可以在命令行上运行 Spring Boot 应用程序。这样可以方便地对应用程序进行测试和调试。</p><h3 id="4、Actuator"><a href="#4、Actuator" class="headerlink" title="4、Actuator"></a>4、Actuator</h3><p>Spring Boot 的 Actuator 提供了一系列监控和管理功能，包括健康检查、配置信息、日志等。开发人员可以通过 Actuator 来监控和管理 Spring Boot 应用程序。</p><h3 id="5、简化的配置"><a href="#5、简化的配置" class="headerlink" title="5、简化的配置"></a>5、简化的配置</h3><p>Spring Boot 简化了应用程序的配置过程，开发人员只需提供应用程序所需的信息，即可完成应用程序的配置。例如，开发人员只需提供数据源的连接信息，即可完成数据库的配置。</p><h1 id="Spring-Boot-的优势"><a href="#Spring-Boot-的优势" class="headerlink" title="Spring Boot 的优势"></a>Spring Boot 的优势</h1><p>Spring Boot 的优势主要表现在以下几个方面：</p><h3 id="1、简化配置"><a href="#1、简化配置" class="headerlink" title="1、简化配置"></a>1、简化配置</h3><p>Spring Boot 简化了应用程序的配置过程，减少了配置的时间和工作量。开发人员可以将更多的精力投入到应用程序的开发和测试上，提高开发效率。</p><h3 id="2、快速开发"><a href="#2、快速开发" class="headerlink" title="2、快速开发"></a>2、快速开发</h3><p>Spring Boot 提供了大量的起步依赖，可以快速地搭建应用程序。开发人员可以根据需要选择需要的依赖，以及自定义依赖，快速搭建应用程序。</p><h3 id="3、微服务架构"><a href="#3、微服务架构" class="headerlink" title="3、微服务架构"></a>3、微服务架构</h3><p>Spring Boot 的特性适合微服务架构的开发。开发人员可以使用 Spring Boot 来构建微服务应用程序，快速部署应用程序。</p><h3 id="4、高度可扩展"><a href="#4、高度可扩展" class="headerlink" title="4、高度可扩展"></a>4、高度可扩展</h3><p>Spring Boot 高度可扩展，开发人员可以根据项目需要选择所需的依赖，同时还可以自定义依赖。这种高度可扩展的特性可以帮助开发人员构建更加灵活的应用程序。</p><h3 id="5、高度集成"><a href="#5、高度集成" class="headerlink" title="5、高度集成"></a>5、高度集成</h3><p>Spring Boot 高度集成了其他 Spring 组件，如 Spring Data、Spring Security、Spring MVC 等，开发人员可以轻松地使用这些组件来构建应用程序。</p><h3 id="6、简化测试"><a href="#6、简化测试" class="headerlink" title="6、简化测试"></a>6、简化测试</h3><p>Spring Boot 简化了应用程序的测试过程。开发人员可以通过命令行界面在命令行上运行 Spring Boot 应用程序，并进行测试和调试。</p><h1 id="Spring-Boot-的使用方法"><a href="#Spring-Boot-的使用方法" class="headerlink" title="Spring Boot 的使用方法"></a>Spring Boot 的使用方法</h1><p>使用 Spring Boot 开发应用程序需要掌握以下几个步骤：</p><h3 id="1、配置环境"><a href="#1、配置环境" class="headerlink" title="1、配置环境"></a>1、配置环境</h3><p>首先需要配置好 Java 开发环境，包括 JDK、Maven 等。</p><h3 id="2、创建-Spring-Boot-项目"><a href="#2、创建-Spring-Boot-项目" class="headerlink" title="2、创建 Spring Boot 项目"></a>2、创建 Spring Boot 项目</h3><p>可以使用 Spring Initializr 来创建 Spring Boot 项目。Spring Initializr 是一个基于 Web 的项目生成器，可以快速地生成 Spring Boot 项目。</p><h3 id="3、添加依赖"><a href="#3、添加依赖" class="headerlink" title="3、添加依赖"></a>3、添加依赖</h3><p>根据项目需要选择所需的依赖，可以在 pom.xml 文件中添加依赖，也可以使用命令行界面添加依赖。</p><h3 id="4、编写代码"><a href="#4、编写代码" class="headerlink" title="4、编写代码"></a>4、编写代码</h3><p>根据项目需求编写代码，使用 Spring Boot 的注解和组件来构建应用程序。</p><h3 id="5、测试应用程序"><a href="#5、测试应用程序" class="headerlink" title="5、测试应用程序"></a>5、测试应用程序</h3><p>可以使用命令行界面在命令行上运行 Spring Boot 应用程序，并进行测试和调试。</p><h3 id="6、打包部署"><a href="#6、打包部署" class="headerlink" title="6、打包部署"></a>6、打包部署</h3><p>可以使用 Maven 打包应用程序，生成 jar 或 war 包。然后将包部署到服务器上即可。</p><h1 id="入门Demo"><a href="#入门Demo" class="headerlink" title="入门Demo"></a>入门Demo</h1><p>要使用Spring Boot，我们只需要添加spring-boot-starter-parent作为父项目，并添加相应的启动器作为依赖。例如，如果我们想要创建一个Web应用，我们可以添加spring-boot-starter-web作为依赖。<br>然后，我们只需要创建一个带有@SpringBootApplication注解的主类，并在其中调用SpringApplication.run方法即可启动应用。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(Application.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后，我们可以创建一个带有@RestController注解的控制器类，并使用@GetMapping注解映射请求路径和方法。当从浏览器或命令行发送请求时，该方法会返回纯文本数据。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">index</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello, Spring Boot!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样，我们就完成了一个简单的Web应用。我们可以使用mvn spring-boot:run命令运行该应用，并在浏览器中访问<a href="http://localhost:8080/%E6%9F%A5%E7%9C%8B%E7%BB%93%E6%9E%9C%E3%80%82">http://localhost:8080/查看结果。</a></p><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>Spring Boot 是一款非常优秀的开源应用程序开发工具，它简化了应用程序的配置和开发过程，提高了开发效率。Spring Boot 的特性适合微服务架构的开发，可以帮助开发人员构建更加灵活、高度可扩展的应用程序。同时，Spring Boot 高度集成了其他 Spring 组件，如 Spring Data、Spring Security、Spring MVC 等，可以帮助开发人员更加方便地构建应用程序。因此，学习和掌握 Spring Boot 是非常有必要的。</p><p>转自：<a href="https://developer.aliyun.com/article/1213775">https://developer.aliyun.com/article/1213775</a></p>]]></content>
      
      
      <categories>
          
          <category> 服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS 12上重写导航控制器init(rootViewController崩溃问题</title>
      <link href="/2023/10/16/ios/231016-ios-navigation-override-bug/"/>
      <url>/2023/10/16/ios/231016-ios-navigation-override-bug/</url>
      
        <content type="html"><![CDATA[<h3 id="崩溃信息"><a href="#崩溃信息" class="headerlink" title="崩溃信息"></a>崩溃信息</h3><p class="note note-info">2023-10-16 16:35:47.833832+0800 DemoFor2C2P[618:27743] DemoFor2C2P/Test2NavViewController.swift: 10: 7: Fatal error: Use of unimplemented initializer 'init(nibName:bundle:)' for class 'DemoFor2C2P.Test2NavViewController'</p><h2 id="如何避免"><a href="#如何避免" class="headerlink" title="如何避免"></a>如何避免</h2><p>代码截图<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/img/tech/20231016165437.png"></p><ol><li>如果继承UINavigationController，并重写方法1，并且没有重写方法2，在iOS12 会崩溃，这两个方法在iOS12上必须是成对出现</li><li>不要重写 init(rootViewController: UIViewController) 方法</li></ol>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大阿尔克那（Arcanes majeurs，又称大秘仪）</title>
      <link href="/2023/09/04/tarot/230904-tarot-arcanes-majeurs/"/>
      <url>/2023/09/04/tarot/230904-tarot-arcanes-majeurs/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>根据神秘学理论，大阿尔克那牌用来解释命运的大致运势。每一张牌都反映着人生的不同际遇，因此，占卜时出现的大牌都会成为分析的重点。它给我们的答案或讯息是关于手上比较大的问题或主要情况。同时，为我们提供高层次的思维教诲。这些教诲为我们揭示面对当前重要问题的答案，让我们更好地选择下一步，而并非给我们一个确切的解决方案。结合大阿尔克那的22张牌蕴含的所有这些品德或经验才能完全认识自身，从而完成个人内心世界的成长，这种成长的过程被称为 “愚人之旅”。</p><p>下列为大阿尔克那22张牌一览，纸牌名称和序号采取韦特体系，星象对应采取公认说法，其他不同体系的命名和对应不再一一列举：</p><table><thead><tr><th align="left">编号</th><th align="left">罗马数字编号</th><th align="left">希伯来字母编号</th><th align="left">中文名称</th><th align="left">英文名称</th><th align="left">星象对应</th></tr></thead><tbody><tr><td align="left">0</td><td align="left">0</td><td align="left">א (‘Aleph)</td><td align="left">愚者</td><td align="left">The Fool</td><td align="left">天王星</td></tr><tr><td align="left">1</td><td align="left">I</td><td align="left">ב (Beth)</td><td align="left">魔术师</td><td align="left">The Magician</td><td align="left">水星</td></tr><tr><td align="left">2</td><td align="left">II</td><td align="left">ג (Gimel)</td><td align="left">女祭司</td><td align="left">The High Priestess</td><td align="left">月亮</td></tr><tr><td align="left">3</td><td align="left">III</td><td align="left">ד (Daleth)</td><td align="left">女皇</td><td align="left">The Empress</td><td align="left">金星</td></tr><tr><td align="left">4</td><td align="left">IV</td><td align="left">ה (He)</td><td align="left">皇帝</td><td align="left">The Emperor</td><td align="left">白羊座</td></tr><tr><td align="left">5</td><td align="left">V</td><td align="left">ו (Waw)</td><td align="left">教皇</td><td align="left">The Hierophant &#x2F; The Pope</td><td align="left">金牛座</td></tr><tr><td align="left">6</td><td align="left">VI</td><td align="left">ז (Zayin)</td><td align="left">恋人</td><td align="left">The Lovers</td><td align="left">双子座</td></tr><tr><td align="left">7</td><td align="left">VII</td><td align="left">ח (Heth)</td><td align="left">战车</td><td align="left">The Chariot</td><td align="left">巨蟹座</td></tr><tr><td align="left">8</td><td align="left">VIII</td><td align="left">ט (Teth)</td><td align="left">力量</td><td align="left">Strength</td><td align="left">狮子座</td></tr><tr><td align="left">9</td><td align="left">IX</td><td align="left">י (Yodh)</td><td align="left">隐者</td><td align="left">The Hermit</td><td align="left">室女座</td></tr><tr><td align="left">10</td><td align="left">X</td><td align="left">כ (Kaph)</td><td align="left">命运之轮</td><td align="left">The Wheel of Fortune</td><td align="left">木星</td></tr><tr><td align="left">11</td><td align="left">XI</td><td align="left">ל (Lamedh)</td><td align="left">正义</td><td align="left">Justice</td><td align="left">天秤座</td></tr><tr><td align="left">12</td><td align="left">XII</td><td align="left">מ (Mem)</td><td align="left">倒吊人</td><td align="left">The Hanged Man</td><td align="left">海王星</td></tr><tr><td align="left">13</td><td align="left">XIII</td><td align="left">נ (Nun)</td><td align="left">死神</td><td align="left">Death</td><td align="left">天蝎座</td></tr><tr><td align="left">14</td><td align="left">XIV</td><td align="left">ס (Samekh)</td><td align="left">节制</td><td align="left">Temperance</td><td align="left">人马座</td></tr><tr><td align="left">15</td><td align="left">XV</td><td align="left">ע (‘Ayin)</td><td align="left">恶魔</td><td align="left">The Devil</td><td align="left">摩羯座</td></tr><tr><td align="left">16</td><td align="left">XVI</td><td align="left">פ (Pe)塔</td><td align="left">The Tower</td><td align="left">火星</td><td align="left"></td></tr><tr><td align="left">17</td><td align="left">XVII</td><td align="left">צ (Tsade)</td><td align="left">星星</td><td align="left">The Star</td><td align="left">宝瓶座</td></tr><tr><td align="left">18</td><td align="left">XVIII</td><td align="left">ק (Qoph)</td><td align="left">月亮</td><td align="left">The Moon</td><td align="left">双鱼座</td></tr><tr><td align="left">19</td><td align="left">XIX</td><td align="left">ר (Resh)</td><td align="left">太阳</td><td align="left">The Sun</td><td align="left">太阳</td></tr><tr><td align="left">20</td><td align="left">XX</td><td align="left">ש (Shin)</td><td align="left">审判</td><td align="left">Judgement</td><td align="left">冥王星</td></tr><tr><td align="left">21</td><td align="left">XXI</td><td align="left">ת (Taw)</td><td align="left">世界</td><td align="left">The World</td><td align="left">土星</td></tr></tbody></table><h1 id="卡片详解"><a href="#卡片详解" class="headerlink" title="卡片详解"></a>卡片详解</h1><h2 id="愚者-The-Fool"><a href="#愚者-The-Fool" class="headerlink" title="愚者 - The Fool"></a>愚者 - The Fool</h2><p>卡片编号：<strong>0</strong></p><h3 id="卡片内容"><a href="#卡片内容" class="headerlink" title="卡片内容"></a>卡片内容</h3><p>愚人穿着色彩斑斓的服装， 无视前方的悬崖， 昂首阔步前行。 他狡辩的小白狗正狂吠着， 似乎是在提醒他要悬崖勒马， 又好像是在跟他一起无忧无虑的嬉戏。 总之， 愚人仍旧保持着欢悦的神色， 网箱遥远的天空， 对于脚下的悬崖视而不见， 就好像悬崖崖边有一座透明的浮桥一样。 一切皆源于本能， 无知无惧，或许就是愚人的写照吧！ 在愚人的左手握着一朵白玫瑰， 象征愚人内心的纯洁和火一般的热情。 而愚人右手系着包袱的木棒正式魔术师（大阿尔卡那 1 号牌） 手中的魔杖， 相传拥有操控世界的魔力， 但此时却成了愚人手中的一个玩物。 或许是因为愚人并不知道他的威力， 又或许是大智若愚无视力量的存在， 除了愚人自己， 恐怕不会有第二个人知道。 愚人包袱里面装满了他的经验， 所以愚人并不愚蠢， 只是不为经验所控， 求一糊涂罢了， 这可能就是我们常说的难得糊涂。 放眼远望， 使连绵起伏的山脉， 那便是愚人位置的旅途， 有太多的故事等着愚人去经历， 有太多的知识等着愚人去感悟， 就像伟特说的那样“愚人是一个追寻经验的灵魂” 。</p><h3 id="正位"><a href="#正位" class="headerlink" title="正位"></a>正位</h3><ul><li>基本含义——好冒险、 寻梦人、 不拘泥于传统的观念、 自由奔放、 一切从基础出发、 四处流浪。</li><li>恋爱婚姻——自由恋爱、 不顾及他人看法、 以独特的方式获得成功、 轻易坠入爱河、 浪漫多彩的爱情、独特的恋人、 等待交往机会。</li><li>工作学业——热衷于事业或学业、 以独特的方式取得意外的收获、 由于好奇心对当前的学业产生浓厚的兴趣、 把握重点、 寻求捷径、 倾向于自由的工作氛围、 适合艺术类工作或从事自由职业。</li><li>人际财富——以轻松的方式交友、 于旅途中结交新的朋友、 因张显个性受他人欢迎、 投资上孤注一掷不计后果。</li><li>健康生活——寻求独特的保健之法、 张显自我的着装方式、 适合休闲装或运动装。</li><li>其它——没有目的的旅行、 憧憬自然的地方、 毫无目的地前行、 喜欢尝试挑战新鲜事物、 四处流浪。</li></ul><h3 id="逆位"><a href="#逆位" class="headerlink" title="逆位"></a>逆位</h3><ul><li>基本含义——情绪低落、 遭受失败、 漫无目的的四处流浪、 行为散漫、 愚昧的行动。</li><li>恋爱婚姻——心情空虚、 轻率的恋情、 无法长久持续的融洽感、 不安的爱情的旅程、 对婚姻感到束缚、彼此忽冷忽热、 不顾众人反对坠入爱河、 为恋人的负心所伤、 感情不专一。</li><li>工作学业——成绩一落千丈、 没有耐心、 行事缺乏计划、 经常迟到、 猜题错误导致考试失利、 考前突击无法为你带来太大的效果。</li><li>人际财富——因过于单纯被他人轻视、 被旁人视为怪胎、 言行怪癖不合常理、 粗心大意、 行事无节制、缺乏理财观念、 愿望难以达成、 收入除渐趋于稳定、 财务操作毫无计划。</li><li>健康生活——不重视自身健康、 生活不规律、 因贪玩影响健康。</li><li>其它——旅途中断、 兴趣广泛、 不脚踏实地、 无视旁人眼光、 冲动行事、 行为不检点。</li></ul><h2 id="魔术师-The-Magician"><a href="#魔术师-The-Magician" class="headerlink" title="魔术师 - The Magician"></a>魔术师 - The Magician</h2><p>卡片编号：<strong>I</strong></p><h3 id="卡片内容-1"><a href="#卡片内容-1" class="headerlink" title="卡片内容"></a>卡片内容</h3><p>魔术师高举紧握权杖的右手直指苍穹， 低垂左手且食指指向地面， 将自身化作天地沟通的桥梁。 在他身前的桌上放着象征西方物质构成的四要素——权杖（火元素） 、 圣杯（水元素） 、 宝剑（风元素） 和钱币（土元素） ， 同时也代表塔罗牌小阿尔卡那的四个牌组。 魔术师身着红袍， 象征着主动与激情， 白色的内衣则展现了其内心的纯净和睿智。 在魔术师的腰间隐约还盘着一条银蛇， 以头吞尾， 预示着循环和启迪。而头上横躺的 8 字光环， 则表明其法力的无边。 魔术师在塔路牌中的编号是 1， 预示着一切的开始， 同时也扮演者大阿尔卡纳与小阿尔卡之间地沟通。</p><h3 id="正位-1"><a href="#正位-1" class="headerlink" title="正位"></a>正位</h3><ul><li>本含义——受好奇心驱使展开调查研究、 具有独创性、 具备发展潜力、 展开新的计划并获得成功、幸福的开始。</li><li>恋爱婚姻——心有灵犀一点通、 新恋情的展开、 备受异性欢迎、 彼此的性格结得以发挥、 彼此配合默契、 品尝爱情的喜悦、 轻率的交往、 变更约会地点和方式可以令彼此保持新鲜感。</li><li>工作学业——以新的方式读书获得好的成绩、 事务处理得当、 高效计划、 注重细节、 能够充分发挥自己所学、 创意得到旁人认同、 适合艺术方面的工作、 喜欢充满创新的工作、 适合从事技术人员、 播音员、大众传媒等相关工作或艺术设计工作。</li><li>人际财富——结交更多的朋友、 寻得良师益友、 寻得彼此互补的合作对象、 能够以合理的代价获得想要的东西。</li><li>健康生活——精神状态稳定、 适合知性的装扮。</li><li>其它——喜欢阅读并从中获得知识和快乐、 可能会有短期的履行、 对语言学习颇有兴趣、 适合郊外野餐、 拥有敏捷的运动神经、 适合参加辩论会、 善于模仿并因此获益、 处事机灵善变、 事事顺利。</li></ul><h3 id="逆位-1"><a href="#逆位-1" class="headerlink" title="逆位"></a>逆位</h3><ul><li>基本含义——犹豫不决、 因学艺不精而败北、 看待事物过于消极、 易受骗上当、 遇事光说不练。</li><li>恋爱婚姻——不善于向对方表白、 缺乏爱情技巧、 易受花言巧语者蒙骗、 对爱情无法专精、 心情过于浮躁、 冷酷无情、 无法向对方表达心意。</li><li>工作学业——预期的成绩没有起色、 努力不足、 谎言被揭穿、 需要改变学习方法、 考试失误、 成绩退步、 工作一成不变。</li><li>人际财富——因态度不明确失信于人、 虚假的表面敷衍、 不够体贴对方、 遭遇欺诈、 容易乱花钱、 因好赌倾家荡产。</li><li>健康生活——精神紧张需要休息、 情绪暴躁容易激动、 呼吸器官或大脑负荷过重、 着装不搭调。</li><li>其它——旅行计划取消、 遭遇交通堵塞、 因懦弱造成竞技失败、 不听他人劝告。</li></ul><h2 id="女祭司-The-High-Priestess"><a href="#女祭司-The-High-Priestess" class="headerlink" title="女祭司 - The High Priestess"></a>女祭司 - The High Priestess</h2><p>卡片编号：<strong>II</strong></p><h3 id="卡片内容-2"><a href="#卡片内容-2" class="headerlink" title="卡片内容"></a>卡片内容</h3><p>女祭司相传是月亮的使者， 虔诚、 静默却又透着十分的警觉和睿智， 是智慧与直觉的象征。 相对于魔术师的激情和主动， 女祭司只是在深夜中手捧经书默默地祈祷着， 就好像中国传统文化中的阴阳。 如果说魔术师散发着阳刚的话， 那么女祭司则是阴柔的代表， 于静寂中凸现沉稳， 与寡言中凸现睿智。 也有人说，女祭司内心是矛盾的， 就像其坐在两根黑白分明的廊柱之间那样， 静默却又波涛汹涌， 在黑与白、 日与夜、正义与邪恶的徘徊中体味生存的意义、 感悟人世沧桑。 或许也是因此让她变得睿智而富有洞察力吧！</p><h3 id="正位-2"><a href="#正位-2" class="headerlink" title="正位"></a>正位</h3><ul><li>基本含义——有良知的、 文静的、 知性的、 具备敏锐的洞察力、 理性的、 富有研究精神、 有正确的时机或人将出现的预感。</li><li>恋爱婚姻——理智的感情生活、 柏拉图式的恋情、 精神方面的结合、 能够消除烦恼的对象、 深藏内心的爱意、 介于友人与恋人之间的关系、 以诗篇或文章来表达爱意。</li><li>工作学业——负有责任感、 目标明确、 苦心钻研、 拥有展现自身潜力的机会、 求知欲旺盛、 考运佳、具备评论才能、 适合从事与教育相关的职业。</li><li>人际财富——能互相谅解的挚友、 良好的商洽对象、 能够较新的朋友、 体贴的好友、 理性消费、 善于理财。</li><li>健康生活——着装朴素简洁、 善待身体、 注重自身卫生、 体力出众且深藏不露。</li><li>其它——制作手工艺品、 知性的娱乐方式、 脑力游戏、 无须外出的活动方式、 出众的理解力、 同冷静的女性商洽可获得新知、 善于洞悉他人。</li></ul><h3 id="逆位-2"><a href="#逆位-2" class="headerlink" title="逆位"></a>逆位</h3><ul><li>基本含义——缺乏理性思维能力、 粗心大意、 因精神压抑以致歇斯底里、 易紧张、 神经质、 意气用事。</li><li>恋爱婚姻——恋情以单相思告终、 面对心仪的对象裹足不前、 因洁癖错过爱情、 憧憬单身生活、 因冷漠而产生误会、 任性妄为、 晚婚、 无趣的女性。</li><li>工作学业——固执、 不能集中全力、 认知肤浅、 不喜用功、 无法学以致用、 因状态低落感到焦虑、 考试失利、 犹豫不决以致错过良机。</li><li>人际财富——受到冷落对待、 应留心被人中伤、 自闭、 易因过于激动而得罪人、 无计划的消费、 浪费成性。</li><li>健康生活——精神紧张、 不孕症、 歇斯底里、 错误的减肥计划、 贫血、 手脚冰凉、 心情不佳、 因任性而倍感孤独、 嘲笑他人、 心胸狭隘。</li><li>其它——无心读书、 吵闹的环境使得身心倍感疲惫。</li></ul><h2 id="女皇-The-Empress"><a href="#女皇-The-Empress" class="headerlink" title="女皇 - The Empress"></a>女皇 - The Empress</h2><p>卡片编号：<strong>III</strong></p><h3 id="卡片内容-3"><a href="#卡片内容-3" class="headerlink" title="卡片内容"></a>卡片内容</h3><p>如果说女祭司给人的感觉是位身具智慧的文静淑女， 那女皇就是热情与高贵的体现， 无论是舒适的坐垫和雍容华贵的服饰无疑都表明了她的富贵与权威。 女皇和魔术师一样， 右手高举权杖， 但不同的是女皇的权杖与魔术师相比少了几分锐气， 却多了几分生机， 因为女皇手中的权杖是天地间掌管生命的法器。 在女皇的法杖下， 脚下金色的麦田和远处茂密的森林都呈现一派生机盎然的景象。 在女皇红色的座椅下还有一个心形标记， 上面刻着金星的符号， 预示着母爱天性， 象征女皇的包容， 以及带给子民的富足。</p><h3 id="正位-3"><a href="#正位-3" class="headerlink" title="正位"></a>正位</h3><ul><li>基本含义——优雅的生活、 有艺术天分、 丰收、 繁荣昌盛、 富足、 善于营造气氛。</li><li>恋爱婚姻——有收获的恋情、 谈婚论嫁、 成为异性瞩目的焦点、 轻松的交往、 令男性钦佩的女强人、富有母性的光辉。</li><li>工作学业——成绩进步、 考试成绩优秀、 在艺术领域颇有收获、 适合服装服饰相关行业、 体面的工作、女强人。</li><li>人际财富——因性格开朗赢得旁人好感、 受人瞩目、 成为聚会或派对的主角、 获得意外之财。</li><li>健康生活——体力充沛、 多产、 气质佳、 风度翩翩、 对时尚服饰颇为偏爱。</li><li>其它——喜爱逛街购物、 喜爱郊游派对等集体活动。</li></ul><h3 id="逆位-3"><a href="#逆位-3" class="headerlink" title="逆位"></a>逆位</h3><ul><li>基本含义——困惑、 缺乏上进心、 轻浮、 损失、 爱慕虚荣。</li><li>恋爱婚姻——优柔寡断、 没有结果的恋情、 因任性妄为令人厌恶、 妒火中烧、 沉迷恋情无法自拔、 缺乏女人味、 婚期遥不可及、 沉溺在♯♯之中、 意外怀孕。</li><li>工作学业——弄丢他人笔记、 浪费时间、 懒惰、 对学科过于好恶分明、 成绩低落、 注意力无法集中。</li><li>人际财富——锋芒毕露、 过于好面逞强、 过于骄纵、 包容力欠缺、 被他人轻视、 爱慕虚荣、 浪费成性、投资过剩、 不必要的花费。</li><li>健康生活——体型过胖、 饮食过度、 不适宜的浓妆艳抹、 多余的装饰。</li><li>其它——处事犹豫不决、 爱好颇多无疑从重、 谈吐轻浮、 金玉其外败絮其中。</li></ul><h2 id="皇帝-The-Emperor"><a href="#皇帝-The-Emperor" class="headerlink" title="皇帝 - The Emperor"></a>皇帝 - The Emperor</h2><p>卡片编号：<strong>IV</strong></p><h3 id="卡片内容-4"><a href="#卡片内容-4" class="headerlink" title="卡片内容"></a>卡片内容</h3><p>一国之尊的皇帝头戴皇冠， 身着红袍， 足蹬象征严格纪律的战靴， 自信满满的端坐在宝座上。 他左手拿着一个水晶球， 象征秩序严谨有条， 右手则握着一个法杖， 象征生命与权力。 在王座上有四个牧羊头浮雕， 强调了皇帝牌所对应的星相——牧羊座（火星） ， 作为十二星座之首， 这里的牧羊头像也象征着勇敢、积极、 野心和自信， 并与全牌呈现的红色的主色调不谋而合。 背景严峻的山峦预示着权力背后的风险， 这与女皇牌中的富饶相比， 难免让观者多了几分担忧。</p><h3 id="正位-4"><a href="#正位-4" class="headerlink" title="正位"></a>正位</h3><ul><li>基本含义——魄力十足、 万众瞩目、 出众的领导才能、 基本功扎实、 男性化、 富有责任感、 充满阳刚之气。</li><li>恋爱婚姻——因锲而不舍的精神获得青睐、 值得信赖的年长对象、 值得依靠的、 心系恋人、 好恶分明的交往、 主动追求爱情、 有主动交往的倾向。</li><li>工作学业——锲而不舍的钻研学业、 保持优良的水准、 目标过高、 信念坚定、 理性的、 考试顺利、 善于管理、 乐于助人、 适合从政。</li><li>人际财富——活跃的领导者、 成为他人商洽的对象、 可信赖的朋友或学长、 结交权贵、 对现有财富感到满足。</li><li>健康生活——身体健康、 对于自身健康充满自信、 适合佩戴一些小饰品以愉悦心情。</li><li>其它——适合和朋友一起外出旅游、 个性坚定永不言败、 坚忍不拔的性格。</li></ul><h3 id="逆位-4"><a href="#逆位-4" class="headerlink" title="逆位"></a>逆位</h3><ul><li>基本含义——幼稚、 缺乏管理能力、 不负责任、 任性妄为、 蛮横霸道、 寡欲。</li><li>恋爱婚姻——强迫的恋情、 不可靠的对象、 无法告白心事、 华而不实的恋情、 痛苦的结局。</li><li>工作学业——不适合久坐工作、 缺乏干劲儿、 缺乏领导能力、 因过于自信而败北、 需要从根本检讨以求反败为胜、 从头再来。</li><li>人际财富——因不负责任被人指责、 固执己见、 蛮横霸道以致被人厌恶、 无法领导他人、 死薪水、 损失金钱、 财务障碍、 预算不足。</li><li>健康生活——过分相信偏方治大病、 不适宜从事过于激烈的运动。</li><li>其它——无法对任何活动感到兴趣、 虚张声势、 自以为是。</li></ul><h2 id="教皇-The-Hierophant-The-Pope"><a href="#教皇-The-Hierophant-The-Pope" class="headerlink" title="教皇 - The Hierophant&#x2F;The Pope"></a>教皇 - The Hierophant&#x2F;The Pope</h2><p>卡片编号：<strong>IV</strong></p><h3 id="卡片内容-5"><a href="#卡片内容-5" class="headerlink" title="卡片内容"></a>卡片内容</h3><p>教皇身着红袍， 端坐在信众面前， 头上戴着象征权力的三层皇冠， 分别代表物质、 精神、 道德三种层次的世界认知， 耳边的白色挂饰， 则代表他聆听的信众心声的使命。 他的右手食指和中指指向苍穹， 象征宗教中的赐福， 而左手的令牌则预示了神圣且至高无上的权力。 在教皇的脚下有一对交叉摆放的钥匙， 一金一银， 分属阴阳， 据说那是日月之匙， 可任意开启智慧与神秘之门。 教皇面前的两名信众， 左边的身着红色的玫瑰袍， 代表热情与爱心， 右边的则穿着一身白百合外衣， 代表内心的圣洁和灵性的成长。 教皇与女祭司都是代表植被有关宗教精神与内心世界的塔罗牌， 然而与女祭司不同的是， 女祭司恪守就有的律法和知识， 将宗教精神中的智慧融入自身的修为， 可谓深藏不露、 独善其身， 而教皇则代表耶稣传教的精神，将智慧视为真理并广为传播。 他关怀世间一切疾苦， 身体力行， 以引导一切事物的智慧帮助愚昧的世人。</p><h3 id="正位-5"><a href="#正位-5" class="headerlink" title="正位"></a>正位</h3><ul><li>基本含义——值得信赖的、 得到援助的、 良好的建言者、 有贡献的、 心胸宽广的、 有宗教情绪的。</li><li>恋爱婚姻——值得信赖的恋人、 对恋情持谨慎态度、 博爱、 婚嫁、 良缘、 有媒人牵线搭桥、 能够安全交往的对象、 年长的异性、 逐渐加深的恋情、 长久持续的交往。</li><li>工作学业——多听他人的劝告、 遇到良师致使成绩进步、 会出现对自己有帮助的人、 与学长或同学一起用功而获益、 耐力十足、 思想保守、 适合顾问或医学工作以及以谈话为主的工作。</li><li>人际财富——获得学长的建言、 获得父母的资助、 事事为朋友着想、 容易遗失钱包。</li><li>健康生活——有遇到好医生的机会、 化妆时偏重于嘴唇会带来好运、 口红适合使用粉色系。</li><li>其它——观赏音乐会或看电影、 前往寺庙上香许愿、 拥抱自然。</li></ul><h3 id="逆位-5"><a href="#逆位-5" class="headerlink" title="逆位"></a>逆位</h3><ul><li>基本含义——失去信赖、 多管闲事、 过于依赖他人、 心胸狭隘、 被强迫推销、 孤立无援。</li><li>恋爱婚姻——缘分浅薄、 步调缓慢、 彼此不够体贴、 占有欲过重、 因固执己见令人反感、 父母反对。</li><li>工作学业——因轻视而品尝苦果、 因厌恶老师对课业失去兴趣、 过分依赖同学的笔记、 得到错误的情报。</li><li>人际财富——干涉他人、 令人困扰的好意、 自以为是、 没有必要的义气、 因助人而损失金钱、 无人援助。</li><li>健康生活——要多运动、 呼吸道疾病、 频咳、 偏食。</li><li>其它——恐高、 喜清静、 不宜乘坐飞机旅行。</li></ul><h2 id="恋人-The-Lovers"><a href="#恋人-The-Lovers" class="headerlink" title="恋人 - The Lovers"></a>恋人 - The Lovers</h2><p>卡片编号：<strong>VI</strong></p><h3 id="卡片内容-6"><a href="#卡片内容-6" class="headerlink" title="卡片内容"></a>卡片内容</h3><p>恋人牌以伊甸园为背景， 依亚当夏娃的爱情故事为背景， 阐述了爱的真谛。 牌图中亚当夏娃分列两边，在天使的祝福声中感受着爱的浪漫与温馨。 天使身着紫袍， 据说代表爱的忠贞， 而为张的双臂则预示了沟通在恋爱中的重要地位。 右侧的亚当目不转睛的注视着夏娃， 而夏娃却仰望天使， 再加上天使俯视亚当与夏娃， 这种视觉上的循环， 象征了潜意识、 意识、 超意识与物质、 精神、 道德之间的层次变化， 也暗示了理性与感性之间的传导。</p><h3 id="正位-6"><a href="#正位-6" class="headerlink" title="正位"></a>正位</h3><ul><li>基本含义——幸福的相遇、 同心协力、 情投意合、 感情丰富、 前途光明、 坠入爱河、 整理思绪。</li><li>恋爱婚姻——在团体活动中结识进而结为连理、 经友人介绍相识相恋、 步入结婚殿堂、 有朋友成为恋人、 自由愉快的交往。</li><li>工作学业——遇到决定前途的大好机会、 以团队协作获得成功、 敏锐的观察力、 出现好帮手， 喜欢的科目成绩优异、 擅长文科或艺术类科目、 因互学互助成绩有所提高。</li><li>人际财富——没有财务烦恼， 出现好的伙伴、 人际关系良好、 社团活动顺利、 朋友增加、 与他人易于亲近、 活泼开朗幽默。</li><li>健康生活——多与好友抒怀畅谈有益缓解压力， 着装缺少时尚元素。</li><li>其他——愉快的短暂旅行、 愉快的郊游会带来好运。</li></ul><h3 id="逆位-6"><a href="#逆位-6" class="headerlink" title="逆位"></a>逆位</h3><ul><li>基本含义——伤离别、 关系结束、 无助益、 遭遇险阻、 转移目标、 兴趣无法持久、 无精打采、 表里不一、 易受诱惑。</li><li>恋爱婚姻——关系冷淡、 移情别恋、 水性杨花、 短暂的恋情、 分手、 无法赢得芳心。</li><li>工作学业——没有计划、 不能持之以恒、 缺乏注意力、 光说不练、 无心用功、 学习效率低下、 成绩不佳。</li><li>人际财富——开销大、 资金短缺、 破财， 意气用事、 朋友不助、 意见不合、 团队解散、 交不到好朋友。</li><li>健康生活——因刺激性食物导致肠胃功能紊乱、 化妆品过敏、 经期不顺。</li><li>其它——见异思迁遇事不能持之以恒、 目标不明确、 易受诱惑、 笨拙、 闷闷不乐、 情绪萎靡不振。</li></ul><h2 id="战车-The-Chariot"><a href="#战车-The-Chariot" class="headerlink" title="战车 - The Chariot"></a>战车 - The Chariot</h2><p>卡片编号：<strong>VII</strong></p><h3 id="卡片内容-7"><a href="#卡片内容-7" class="headerlink" title="卡片内容"></a>卡片内容</h3><p>一位头戴八芒星战盔、 身着盔甲的勇士驾着一辆由两只狮身人面兽拉着的战车， 向着胜利勇往直前，气势无人可挡。 车前左侧的黑色狮身人面兽代表严厉， 而右侧的白色狮身人面兽则代表慈悲， 双手并行，恰恰预示了阴阳调和， 即追求胜利的前提——平衡。 蓝色的车篷和上面的六芒星图案， 象征了天体对战士成功的影响， 也预言了希望对于获得胜利的重要性。 勇士右手紧握长矛， 表明了他内心对胜利的渴求， 胸前的正方形则代表土元素， 象征意志的力量。 战车前方的一对翅膀相传是古埃及图腾， 代表灵感， 而翅膀下面的小盾牌中则相传为古印度预示阴阳结合的图腾。 作为塔罗牌中的第 7 号牌， 站车似乎预示了走过了三分之一旅程的愚人已经变成了一名成熟、 勇敢的战士， 在追求胜利中披荆斩棘、 奋勇向前。</p><h3 id="正位-7"><a href="#正位-7" class="headerlink" title="正位"></a>正位</h3><ul><li>基本含义——高效率、 把握先机、 以积极的心态面对事物、 获得胜利、 取得驾照、 搬家。</li><li>恋爱婚姻——情场得意、 恋情进展迅速、 积极交往、 大胆追求。</li><li>工作学业——独立作业、 自信、 迅速调整情绪以提高效率、 竞争激烈、 适合于娱乐相关的职业、 成绩进步、 考试及格过关。</li><li>人际财富——存款购车， 交友广博、 个性活泼、 善于人际交往、 独立自主。</li><li>健康生活——身体健康、 活力充沛。</li><li>其他——适合户外活动（如滑雪、 兜风、 骑马、 踏青） 、 考上驾照、 对新鲜事物充满兴趣、 写日记。</li></ul><h3 id="逆位-7"><a href="#逆位-7" class="headerlink" title="逆位"></a>逆位</h3><ul><li>基本含义——失控、 发生意外、 胡作非为、 失败、 止步不前、 固执己见、 注意力散漫、 遇突发事件而不知所措。</li><li>恋爱婚姻——过于鲁莽、 被抛弃、 话不投机、 因懦弱致使恋情无法进展、 因话语直白伤人、 遭遇强劲情敌。</li><li>工作学业——对无兴趣之事缺乏责任感、 项目进展遇困、 工作效率低下， 对课业不感兴趣、 成绩不佳、学习效率低下。</li><li>人际财富——损失金钱、 不懂节制的花费、 赌博失利， 争论不断、 因任性妄为引起他人不满、 待人冷淡。</li><li>健康生活——身心疲惫、 运动或意外受伤。</li><li>其它——固执己见、 超速驾驶、 注意力散漫、 得意忘形、 因遭遇突发事件而措手不及。</li></ul><h2 id="力量-Strength"><a href="#力量-Strength" class="headerlink" title="力量 - Strength"></a>力量 - Strength</h2><p>卡片编号：<strong>VIII</strong></p><h3 id="卡片内容-8"><a href="#卡片内容-8" class="headerlink" title="卡片内容"></a>卡片内容</h3><p>与魔术师一样， 力量女神的头顶也有一个无限大符号， 预示其无穷无尽的力量。 但与魔术师不同， 女神的力量似乎没有魔术师得凌厉， 而是透着一丝怜悯和包容。 她带着怜悯的目光， 用看似柔弱的双手轻轻合上雄狮的嘴， 轻而易举的压制了百兽之王狮子的兽性。 女神眼中的怜悯， 似乎是在同情狮子的兽性， 而象征征服的百兽之王在女神冷静慈悲的目光下也变得温顺可亲。 或许， 一颗宽容的心才是力量真正的来源吧！</p><h3 id="正位-8"><a href="#正位-8" class="headerlink" title="正位"></a>正位</h3><ul><li>基本含义——精力充沛、 不屈不挠、 意志坚定、 潜力十足、 胆识过人、 信念坚定。</li><li>恋爱婚姻——过于热情、 获得恋情、 克服障碍延续爱情、 在恋情中起主导地位、 对彼此的恋情坚定不移。</li><li>工作学业——突破难关、 倾全力发挥潜能、 获领导岗位、 喜欢代人办事， 攻克难题、 担任班级或社团管理职务、 全神贯注于学业。</li><li>人际财富——大笔开销、 果断的投资， 待人热情、 以果断言行受到他人赞赏、 因坚持不懈斗志高昂获他人敬畏。</li><li>健康生活——活力充沛、 集体自我修复能力强、 面对疾病有顽强的斗志。</li><li>其他——兼顾工作与兴趣、 向往刺激的人生、 活跃于社团或派对。</li></ul><h3 id="逆位-8"><a href="#逆位-8" class="headerlink" title="逆位"></a>逆位</h3><ul><li>基本含义——精力不足、 急躁不安、 丧失信息、 忍耐力不足、 自私自大。</li><li>恋爱婚姻——对感情失去信心、 面对爱情懦弱而不能坚持、 渴求爱情却无终而返、 经不住诱惑、 彼此感情牵强。</li><li>工作学业——学艺不精、 不能持之以恒、 欲速而不达、 好高骛远、 向困难低头， 学习不求甚解、 欲速而不达、 面对学业不能持之以恒。</li><li>人际财富——赌博输钱、 透支、 不善理财、 因诱惑失财， 因任性妄为受他人排斥、 禁不起他人诱惑、对交友失去信心。</li><li>健康生活——精疲力竭、 因体力透支大病。</li><li>其它——说服他人、 目中无人、 狂妄自私、 不善配合喜独来独往、 禁不住诱惑。</li></ul><h2 id="隐者-The-Hermit"><a href="#隐者-The-Hermit" class="headerlink" title="隐者 - The Hermit"></a>隐者 - The Hermit</h2><p>卡片编号：<strong>IX</strong></p><h3 id="卡片内容-9"><a href="#卡片内容-9" class="headerlink" title="卡片内容"></a>卡片内容</h3><p>一位老者身披灰色斗篷站在冰天雪地的山颠， 手提一盏油灯， 好像是在低头沉思。 那看似微弱的灯光，在渺无人烟的暗淡雪夜中， 显得有些无助， 但对老者而言， 那是真理、 也是希望。 手中的拐杖正是愚人手中戏耍的木棒、 魔术师手中沟通天地的法器和战车手中追求胜利的长矛， 而此时， 经过无知、 热忱、 繁华之后， 变得确实如此的普通， 正应了中国那句“返璞归真” 的老话。 老者人手这独处的孤寂， 反省着自己的过去， 跟随真理之灯的指引， 暗示了寻求真理道路上的艰辛、 朴素， 预示了只有以开阔的胸怀认知世事，以不断反省的态度探知真我， 方能求得正果。</p><h3 id="正位-9"><a href="#正位-9" class="headerlink" title="正位"></a>正位</h3><ul><li>基本含义——自信、 理智、 脚踏实地、 不喜形于色、 中肯的建议、 坚持不懈、 沉着冷静、 闭门静思养精蓄锐。</li><li>恋爱婚姻——暗恋、 追求精神层次的结合、 永久的恋情、 值得信赖的对象、 理性的爱恋。</li><li>工作学业——努力奋斗必将成功、 拟订长期计划、 注重细节、 杰出的分析能力、 追求稳定的工作状态、获得正确的检验、 勤勉、 遵守规则、 一板一眼。</li><li>人际财富——开源节流， 有自知之明、 以礼待人、 因内敛受人信赖、 肯纳忠言。</li><li>健康生活——情绪平和、 天然食物有益健康。</li><li>其他——书法、 对弈、 郊游、 拟定计划、 写日记。</li></ul><h3 id="逆位-9"><a href="#逆位-9" class="headerlink" title="逆位"></a>逆位</h3><ul><li>基本含义——口无遮拦、 俗气、 神经质、 为人刻薄、 行事不够理智、 多疑。</li><li>恋爱婚姻——保守、 多疑、 自闭、 孤寂、 轻浮的恋情、 对爱侣过于刻薄、 缺乏告白的勇气。</li><li>工作学业——多疑焦虑、 因注意力不够集中而错误百出、 实力无法发挥、 自卑、 考试不顺利、 因嫉妒肆意贬低他人。</li><li>人际财富——无畏的开销、 不懂节制， 对旁人缺乏信任、 互相猜疑、 受自卑困扰、 孤僻、 和朋友闹别扭。</li><li>健康生活——神经质、 过于紧张引发肠胃不适、 气色差、 肠胃方面的疾病。</li><li>其它——多愁善感、 独处、 逃避、 自虐、 心胸狭隘、 追逐小利。</li></ul><h2 id="命运之轮-The-Wheel-of-Fortune"><a href="#命运之轮-The-Wheel-of-Fortune" class="headerlink" title="命运之轮 - The Wheel of Fortune"></a>命运之轮 - The Wheel of Fortune</h2><p>卡片编号：<strong>X</strong></p><h3 id="卡片内容-10"><a href="#卡片内容-10" class="headerlink" title="卡片内容"></a>卡片内容</h3><p>蔚蓝的天空中悬挂着命运之轮， 与圣职者的三层投管相通， 命运之轮也是有三层组成。 最里面的圆中没有任何符号， 代表空无， 象征万物的创造； 中间的圆上有四个炼金符号， 对应西方物质构成的四要素，象征了万物的形成； 最外面的圆中上刻着“TAROT” 字样， 象征已经创造的世界。 ♯♯的左侧是埃及神话中的邪恶之神， 蛇头朝下预示着人生中的沉沦； 而背负着命运之轮的阿努比斯， 则预示了背负命运的渴望；至于命运之轮顶部的是狮身人面像， 据说是智慧的象征， 其手中的宝剑则代表思考， 或许实在说面对人生，思索真谛是获取顺境的方法。 牌图的四角分别是狮子、 飞鹰、 天使和神牛恰恰应征了命运之轮中间那个圆上的符号， 即四要素的火、 水、 风、 土。</p><h3 id="正位-10"><a href="#正位-10" class="headerlink" title="正位"></a>正位</h3><ul><li>基本含义——把控时机、 机会降临、 转变期、 意外的收获、 当机立断、 幸运降临、 恢复原状。</li><li>恋爱婚姻——命运的邂逅、 一见钟情、 遇到新的心仪对象、 突然告白。</li><li>工作学业——好运来临、 确定前途、 意外的好消息、 弹性的计划、 会得他人援助， 改变学习方式将会有所收益、 意外的好消息、 弹性的计划、 考运佳、 得他人援助。</li><li>人际财富——临时的收入、 意外之财， 意外得到贵人相助、 面对世事能随机应变、 社交环境有利。</li><li>健康生活——性情转好、 疾病痊愈。</li><li>其他——摄影、 绘画、 受兴趣影响较大、 获得机会、 立即行动。</li></ul><h3 id="逆位-10"><a href="#逆位-10" class="headerlink" title="逆位"></a>逆位</h3><ul><li>基本含义——判断错误、 情绪低落、 运气不佳、 左右为难、 少安毋躁、 一时的幸福、 爽约。</li><li>恋爱婚姻——缺乏要领的交往方式、 不稳定的恋情、 亲事告吹、 短暂的恋情、 激情冷却、 失恋、 错失良机。</li><li>工作学业——竭尽全力却无功而返、 效率低下、 被同事或领导误解、 希望落空、 成绩低落。</li><li>人际财富——超支、 上当受骗， 误解较多、 人际关系不稳定、 竭尽全力却往往白忙一场、 - 与友人意见不和。</li><li>健康生活——情绪储蓄低迷、 病情有恶化的可能。</li><li>其它——暂时的好运， 爽约、 对事物感到乏味、 生活单一无趣。</li></ul><h2 id="正义-Justice"><a href="#正义-Justice" class="headerlink" title="正义 - Justice"></a>正义 - Justice</h2><p>卡片编号：<strong>XI</strong></p><h3 id="卡片内容-11"><a href="#卡片内容-11" class="headerlink" title="卡片内容"></a>卡片内容</h3><p>冥想中的正义女神， 身着红袍、 头戴金冠， 端坐在石凳上。 她左手提着天秤象征能对一切是非做出公正的裁决； 右手高举利剑则寓意矫正世间一切歪曲与虚伪的能力。 女神左脚微微向外踏出， 似乎想要站起，但右脚却还隐匿在袍中， 似乎是在为做出公正裁决而犹豫不决， 预示想要维系公正的判断绝非易事， 只有适当的协调他人与自我的对立， 时时洞察反省自我， 利器与天秤才能发挥其真正的意义。</p><h3 id="正位-11"><a href="#正位-11" class="headerlink" title="正位"></a>正位</h3><ul><li>基本含义——诚实、 公证、 为他人调解争端、 维系平衡、 兼顾事业与家庭（学业与恋情） 、 爱好和平。</li><li>恋爱婚姻——理性交往、 好性情、 和温文有力的对象交往、 恋爱双方彼此平衡、 轻松的交往、 诚实的恋情、 真心的交往、 学业与恋情兼顾。</li><li>工作学业——各科成绩出众、 事业与家庭兼顾、 以合理的计划获得成功、 个人学业与社团活动兼顾、适合法律相关工作。</li><li>人际财富——公平待人、 适合担任解决争端的角色、 重义气、 受到交往对象的照顾、 贷款获准、 财运攀升、 得到应有的回报。</li><li>健康生活——身材匀称、 精神状态稳定、 适合情人装打扮。</li><li>娱乐兴趣——音乐相关的事物能够开拓心情。</li></ul><h3 id="逆位-11"><a href="#逆位-11" class="headerlink" title="逆位"></a>逆位</h3><ul><li>基本含义——不公平、 有始无终、 以自己的意见去断定、 事事不能两全、 不均衡。</li><li>恋爱婚姻——不够主动、 彼此个性不合、 不顾后果的交往、 脚踏两支船、 单相思、 第三者插足、 对待恋情不够诚实、 与异性交往暧昧不清。</li><li>工作学业——偏科现象严重、 墨守成规以致失败、 缺乏能力或自信、 行为不检点、 考试失误。</li><li>人际财富——缺乏道德观念、 懒好人、 左右为难、 对朋友过于挑剔、 财务危机、 财不露白、 遭遇债务纠纷。</li><li>健康生活——身材不匀称、 无法控制体重、 偏食。</li><li>娱乐兴趣——对逛街购物已赶乏味、 对任何事物都无法产生长久兴趣。</li></ul><h2 id="倒吊人-The-Hanged-Man"><a href="#倒吊人-The-Hanged-Man" class="headerlink" title="倒吊人 - The Hanged Man"></a>倒吊人 - The Hanged Man</h2><p>卡片编号：<strong>XII</strong></p><h3 id="卡片内容-12"><a href="#卡片内容-12" class="headerlink" title="卡片内容"></a>卡片内容</h3><p>一名男子双手反绑， 被人倒吊在 T 字型的树干上。 男子反绑的双手呈三角， 双腿交织成十字， 拼在一起恰恰形成了西方炼金术中的一个炼金符号， 预示着伟大事业的完成， 同时也暗含了由低层欲望向道德升华的过程。 由上至下色彩的变幻（红色的外裤、 蓝色的上衣和金色的光环） 与圣职者的三层头冠以及命运之轮中的三个同心圆相呼应， 依次对应身、 心、 灵三层境界， 只是顺序导致的视角， 强调了换位思考的意义。 而脚上金色的鞋子不仅表明了倒吊者崇高的牺牲精神， 也预示了灵（即道德） 的地位， 即便是换位思考， 道德永远是第一位的。</p><h3 id="正位-12"><a href="#正位-12" class="headerlink" title="正位"></a>正位</h3><ul><li>基本含义——进退两难、 牺牲、 因祸得福、 遭遇困难磨练以致心智成熟、 以不同的角度看待事物。</li><li>恋爱婚姻——误解越解释越深、 奉献式的爱情、 爱情换位思考、 禁得起考验的爱情、 为对方的幸福而放弃爱情。</li><li>工作学业——努力就会成功、 适合福利或义务性的工作、 换位思考有助于攻克难题。</li><li>人际财富——花钱消灾、 因助人损失金钱， 经常扮演吃亏的角色、 人际处境较为艰苦。</li><li>健康生活——需要长时间的调养恢复健康、 面对疾病勇敢坚强。</li><li>其他——重新审视自己和周边的事物、 坚持就是胜利。</li></ul><h3 id="逆位-12"><a href="#逆位-12" class="headerlink" title="逆位"></a>逆位</h3><ul><li>基本含义——希望破灭、 因私欲而受罚、 做无用功、 没有必要的付出、 自我毁灭、 缺乏实施能力、 事如泡影。</li><li>恋爱婚姻——得不到回报的恋情、 没有发展的可能、 不值得奉献的对象、 对感情失去耐心、 藕断丝连。</li><li>工作学业——无法忍受苛刻的环境、 工作处境被动、 努力而无获、 物极必反、 言语缺乏条理、 只考虑自己的利益、 成绩退步、 不思进取、 考试失利。</li><li>人际财富——情绪化的话费、 奢靡浪费， 没有代价的付出、 自私、 与人交往畏首畏尾、 杞人忧天。</li><li>健康生活——易骨折、 易因血液不畅导致四肢麻木、 因疏忽造成现有病情恶化。</li><li>其它——白费心机、 脱离现实、 缺乏行动力、 烦人的应酬。</li></ul><h2 id="死神-Death"><a href="#死神-Death" class="headerlink" title="死神 - Death"></a>死神 - Death</h2><p>卡片编号：<strong>XIII</strong></p><h3 id="卡片内容-13"><a href="#卡片内容-13" class="headerlink" title="卡片内容"></a>卡片内容</h3><p>死神坐骑白马， 高高在上， 俯视地上的生灵， 在他的手中高举一面绘有蔷薇十字会图腾的黑色旗帜。有人说这个图腾代表死后获得新生的过程， 也有人说这个图腾与火星相应代表不朽生命力。 在死神的马下，分别是国王、 圣职者、 妇女和儿童， 代表终生对死亡的四种看法。 国王抗拒死亡， 最终被践踏于死神的马蹄之下； 圣职者将令牌置于地上， 崇敬死亡， 并上手合十祈祷主的引领以求步入天堂； 妇女跪在地上， 因对死亡的恐惧而昏厥过去； 只有那个天真可爱的孩子因为无知而满脸稚气好奇地看着死神。 四个人， 四种心态， 无论是抗拒、 崇敬、 恐慌还是无知， 都在阐述这相同的道理——无论是富贵还是贫穷、 无论是男女老少， 死亡都是一种不可抗拒的自然现象， 无法逃避， 也无需逃避。</p><h3 id="正位-13"><a href="#正位-13" class="headerlink" title="正位"></a>正位</h3><ul><li>基本含义——失败、 厄运连连、 走进死胡同、 绝望、 遗失、 无法逃离、 无疾而终、 努力成为泡影、 有苦说不出。</li><li>恋爱婚姻——彼此隔阂加深、 分手、 失恋、 分居、 离异、 对恋人失去感觉。</li><li>工作学业——工作业绩下滑、 项目毫无进展、 面对瓶颈感到后继无力、 一切呈停滞状态、 被炒鱿鱼，成绩跌入低谷、 考试不顺利、 学业停滞不前、 对学业不抱希望。</li><li>人际财富——奢靡成性、 盲目购物、 随性挥霍， 与朋友关系恶化、 友情出现裂痕、 忧郁自毙、 朋友逝世或远行。</li><li>健康生活——遭遇意外灾祸、 无视自身健康。</li><li>其他——对周边事物毫无兴趣、 厌世、 遭遇窘境、 一切化为泡影、 哑巴吃黄连有苦说不出。</li></ul><h3 id="逆位-13"><a href="#逆位-13" class="headerlink" title="逆位"></a>逆位</h3><ul><li>基本含义——改变计划、 变更形象、 东山再起、 走出低谷、 脱胎换骨、 勇于开拓、 精力充沛。</li><li>恋爱婚姻——博得芳心、 感情好转、 破镜重圆、 萌发新的爱情。</li><li>工作学业——业绩回升、 有所转机、 面对瓶颈力挽狂澜、 同事纷纷辞职跳槽、 成绩有所提升、 考试运转好、 开始新的学习计划。</li><li>人际财富——财产失而复得， 与朋友和解、 面对以往的恩怨既往不咎、 往日的朋友倍加亲密、 新友谊的展开。</li><li>健康生活——适量运动有益健康、 凭借自身毅力战胜病魔。</li><li>其它——心情转好、 勇于开拓。</li></ul><h2 id="节制-Temperance"><a href="#节制-Temperance" class="headerlink" title="节制 - Temperance"></a>节制 - Temperance</h2><p>卡片编号：<strong>XIV</strong></p><h3 id="卡片内容-14"><a href="#卡片内容-14" class="headerlink" title="卡片内容"></a>卡片内容</h3><p>一名天使正在将代表灵魂与生命的水从一个圣杯倒向另一个圣杯。 有人说， 右手圣杯中的水代表意识，而左手中的代表无意识， 也有人说它们分别代表物质与精神。 但是无论如何， 至少我们在牌图中看到了一种交互， 无论水从哪里来， 到哪里去， 水都在流， 而流动不正是一种调和与净化吗？ 天使一只脚站在水中，一只脚站在岸上。 按照西方文化水代表内心的精神世界， 土地则代表着外界的物质世界， 那么天使如此站立恰恰预示了我们在物质与精神两个世界徘徊的人生， 而以水中之足为实， 岸地为虚， 则恰扣主题， 暗示人们节制欲望、 净化心灵。</p><h3 id="正位-14"><a href="#正位-14" class="headerlink" title="正位"></a>正位</h3><ul><li>基本含义——进展顺利、 为他人排解争端、 整理思路与情绪、 净化心灵、 反复调研找寻关键所在、 关注自我需求的同时兼顾他人意愿、 勤于节俭、 相互协助。</li><li>恋爱婚姻——爱情弥坚、 心有灵犀一点通、 纯真的恋情、 有节制的交往、 意外的邂逅、 有友谊展开的爱恋、 可以商谈的对象。</li><li>工作学业——直觉敏锐、 成绩顺利进展、 反复温习是成绩显著提高、 稳定的工作状态、 从新修订商品价格、 出众的记忆力、 遭遇人事变动。</li><li>人际财富——在流动的资金中获得收益， 能够与三教九流相处、 在交际场上得获收益、 与朋友结交毫不做作、 对朋友关怀有加体贴入微。</li><li>健康生活——身体处于良好状态、 善于自我调节身体机能、 皮肤保养良好。</li><li>其他——游泳、 前往有水的地方旅游、 于体验中修身养性。</li></ul><h3 id="逆位-14"><a href="#逆位-14" class="headerlink" title="逆位"></a>逆位</h3><ul><li>基本含义——缺乏自我调节的能力、 开销过大、 遗忘初衷、 精力消耗殆尽、 毫无节制、 沉闷的说教。</li><li>恋爱婚姻——面对感情三心二意、 双方都不善于控制情绪、 无法调整恋情中彼此的位置、 发生摩擦无法主动谈和、 彼此没有默契、 让彼此身心疲惫的恋情。</li><li>工作学业——面对繁琐的工作过于情绪化、 事业走入低谷、 要约被单方取消、 精神松懈、 项目进展不顺利、 成绩下滑。</li><li>人际财富——奢靡浪费、 与他人发生财务纠纷、 与人 AA 制消费， 因无法控制自己的情绪而得罪别人、应酬颇多以致身心疲惫、 与朋友关系不和睦。</li><li>健康生活——生活习惯不规律、 精神状态不稳定、 体力消耗殆尽、 食欲不振。</li><li>其它——冗长的说教、 意见不和、 协作失败。</li></ul><h2 id="魔鬼-The-Devil"><a href="#魔鬼-The-Devil" class="headerlink" title="魔鬼 - The Devil"></a>魔鬼 - The Devil</h2><p>卡片编号：<strong>XV</strong></p><h3 id="卡片内容-15"><a href="#卡片内容-15" class="headerlink" title="卡片内容"></a>卡片内容</h3><p>大阿尔卡那的恶魔在沟通和内容上与第 6 张恋人相互辉映， 只是天使变成了恶魔， 浪漫的爱情沦为彼此对欲望的沉迷。 此时亚当和夏娃由于对欲望的沉迷， 再也无法听到天使的祝福， 耳边只有来自地狱恶魔的诅咒， 原有的浪漫与温馨也已变成了彼此的束缚， 就像彼此颈上的枷锁， 将彼此牢牢地拴在恶魔的脚下。亚当一如既往的注视着夏娃， 而夏娃则低垂粉颈， 无奈地看着颈上的铁条。 原有物质、 精神、 道德的循环已被颠覆， 剩下的仅是对物质和欲望的沉迷； 原有感性与理性之间的交流也已被阻断， 变成了彼此的枷锁。</p><h3 id="正位-15"><a href="#正位-15" class="headerlink" title="正位"></a>正位</h3><ul><li>基本含义——受到拘束深感不自在、 卑躬屈膝、 沦为与王的俘虏、 颓废的生活、 隐瞒事实真相、 遭遇诱惑的陷阱、 固执己见、 贪婪成性。</li><li>恋爱婚姻——无法真实的再现自己、 地下恋情、 拖泥带水的孽缘、 占有欲过强、 感情被人玩弄、 沉迷于♯♯。</li><li>工作学业——被同事孤立、 工作受到束缚、 对己对人过于苛刻、 对下属暴力训斥、 对上司感到不满，因诱惑而荒废学业、 成绩低落、 对师长的说教颇感不满、 被迫用功、 秉烛夜读成绩却无法提高。</li><li>人际财富——被骗财、 非法或不道德收入、 背负债务、 股票被套牢、 财运低迷， 受到不良的诱惑、 结交狐朋狗友、 不慎加入秘密团体、 家教甚严以致交际受到束缚。</li><li>健康生活——挥之不去的隐痛。</li><li>其他——身心受到束缚、 计划赶不上变化、 精神压抑、 外部环境恶劣、 隐秘的行动。</li></ul><h3 id="逆位-15"><a href="#逆位-15" class="headerlink" title="逆位"></a>逆位</h3><ul><li>基本含义——摆脱不良诱惑、 与酒肉朋友断交、 抛弃欲望、 有走出困境的机会、 摆脱束缚、 重获自由、解除负担、 能够表达自己的意志。</li><li>恋爱婚姻——分手的时机、 结束拖延已久的恋情、 摆脱感情的困扰、 几乎没有进展的恋情、 脱离对♯♯的沉迷。</li><li>工作学业——团队重担、 闯过事业瓶颈、 摆脱无法忍受的工作环境或工作环境的到改善， 学习环境有所改善、 较弱科目的成绩会有所好转、 父母师长的管束稍事松懈。</li><li>人际财富——脱离财务限制、 扭亏为盈、 投资转型期， 断绝不良关系、 放弃私欲、 恢复理智、 人际关系有所改善。</li><li>健康生活——心情转好、 肤质转好、 青春痘逝去。</li><li>其它——向往轻松的生活方式、 开展新的计划、 重获自由、 告白心声。</li></ul><h2 id="高塔-The-Tower"><a href="#高塔-The-Tower" class="headerlink" title="高塔 - The Tower"></a>高塔 - The Tower</h2><p>卡片编号：<strong>XVI</strong></p><h3 id="卡片内容-16"><a href="#卡片内容-16" class="headerlink" title="卡片内容"></a>卡片内容</h3><p>原本巍然屹立德雄伟高塔， 却被一道突来的闪电击中而崩溃燃烧起来， 而这雷鸣电闪正是神的愤怒与制裁。 塔顶上的金冠也被惊雷击落， 预示着权力、 财富和成就都在这骤变中荡然无存。 高塔代表着毁灭，即突如其来的灾难。 塔中坠落的两名男子似是前面的皇帝和圣职者， 他们搭头向下的姿势和惊恐的表情，预示着面对突入起来的灾难， 无论阶级、 财富， 谁也都很难幸免于难。 如果说这个世界有运气这种东西的话， 那么厄运降临的几率对任何人都是平等的， 同样的，好运亦是如此。</p><h3 id="正位-16"><a href="#正位-16" class="headerlink" title="正位"></a>正位</h3><ul><li>基本含义——麻烦不断、 遭遇逆境、 遭受打击、 原有信念崩溃、 遭遇突发事件、 多管闲事、 与人发生纷争。</li><li>恋爱婚姻——意外的分手、 与爱人发生争执、 失去爱情、 感情不能得到亲朋的祝福。</li><li>工作学业——事态急剧恶化、 对上司不满却苦无应对之法、 遇到灾难、 事业遭遇意外瓶颈、 成绩低落、因意外事故辍学、 因闯祸而被记过、 考试不及格、 落榜。</li><li>人际财富——损失金钱、 财政赤字、 破产， 遭受连累、 与人发生争执、 因口角与人绝交、 暴躁易怒以致伤人。</li><li>健康生活——疾病容易恶化、 易烫伤或刀伤。</li><li>其他——遭遇意外、 多管闲事、 卷入纷争。</li></ul><h3 id="逆位-16"><a href="#逆位-16" class="headerlink" title="逆位"></a>逆位</h3><ul><li>基本含义——悬崖勒马、 遭遇口舌之灾、 发生内部纠纷、 风暴前的寂静。</li><li>恋爱婚姻——直接表达心意、 遭遇感情危机、 重新体验浪漫激情、 预感将要分手、 感情上遭受打击。</li><li>工作学业——面对困难听天由命、 大意失荆州、 因紧张导致最终的失败、 业绩不佳， 考试因紧张致使成绩不佳、 成绩下滑。</li><li>人际财富——从新开始积攒、 表面富有实则捉襟见肘、 濒临破产， 关系陷入僵局的前兆、 与朋友纠纷不断、 逞强好胜不知让步。</li><li>健康生活——遵医嘱可是病痛早日远去、 身体状况开始好转、 平日不注重自身健康。</li><li>其它——后悔的出行或派对、 暴风雨来临之前的压抑、 令人震惊的事情。</li></ul><h2 id="星星-The-Star"><a href="#星星-The-Star" class="headerlink" title="星星 - The Star"></a>星星 - The Star</h2><p>卡片编号：<strong>XVII</strong></p><h3 id="卡片内容-17"><a href="#卡片内容-17" class="headerlink" title="卡片内容"></a>卡片内容</h3><p>夜空中一大七小八颗星星， 其中那颗大的据说是天狼星， 可以为那些寻求帮助的人带去希望和信心。在闪烁的星空下， 是一个全裸的女人。 她左腿单膝着地跪在池边， 右脚则踏入水中， 正在将两壶生命之水倾倒在池中和岸上。 女人到处的水正是节制中圣杯中的水， 只不过这次是将它浇灌于大地和池中， 而非在两个杯子中传递。 在池边不远的枝头， 落着一只不死鸟， 预示着生命的不朽。 大地代表意识， 水代表无意识， 不死鸟则是精神的升华， 而裸女则寓意真实的自我。 可以说， 星星是一张给人们带去希望的牌， 预示着寓言的兑现和灵感与精神的互动， 暗示人们不应放弃希望， 只有自信、 自尊、 自强才能有所成就。</p><h3 id="正位-17"><a href="#正位-17" class="headerlink" title="正位"></a>正位</h3><ul><li>基本含义——愿望得以实现、 充满创造力、 萌发灵感、 理想主义者、 前景光明。</li><li>恋爱婚姻——遇到理想的恋人、 从友人转为恋人、 迸发爱的火花。</li><li>工作学业——有独特的创造性、 前景乐观、 能达到极高的目标、 事业蒸蒸日上， 学业前景乐观、 对课业充满好奇心、 因独特的读书方式受益。</li><li>人际财富——新的财源、 凭直觉或可获得意外的收入， 与兴趣相交的朋友愉快交往、 相辅相成的友谊、遇到理想的朋友。</li><li>健康生活——身体状况绝佳。</li><li>其他——适合前往生态环境良好的地区、 对文化古迹略感兴趣、 偏爱艺术、 获取专利。</li></ul><h3 id="逆位-17"><a href="#逆位-17" class="headerlink" title="逆位"></a>逆位</h3><ul><li>基本含义——缺乏想象力、 幻想破灭、 好高骛远、 错失良机、 固执己见、 理想与现实无法兼顾。</li><li>恋爱婚姻——与对方无法心灵相通、 面对恋情期望过高、 虽有进展却由于身心疲惫终决放弃、 无法对对方产生爱意、 期望落空、 以貌取人、 两人出现难以解决的隔阂。</li><li>工作学业——虽然创意无限到头来却一无所获、 消息来源有误、 得不到同事和上司的信任， 考试受挫、期望过高、 理想不切现实、 需要改进学习方法。</li><li>人际财富——破财、 无法得到预期的收益， 自我意识过高、 苛求他人、 对朋友感到失望、 无意义的攀谈。</li><li>健康生活——身心疲惫。</li><li>其它——适合相对清静的户外场所。</li></ul><h2 id="月亮-The-Moon"><a href="#月亮-The-Moon" class="headerlink" title="月亮 - The Moon"></a>月亮 - The Moon</h2><p>卡片编号：<strong>XVIII</strong></p><h3 id="卡片内容-18"><a href="#卡片内容-18" class="headerlink" title="卡片内容"></a>卡片内容</h3><p>月亮高挂在夜空之中， 圆缺不定。 月中隐约有一张愁苦的面容， 带给人忧郁不安的感觉。 月下有两只狗（也有人说是一只狼、 一只狗） 正在仰望月空低吠， 似乎是体会到月亮的愁苦而报以同情， 诱惑是向像月亮问着什么。 池中的蝎子似乎很向往月宫的样子， 努力爬出水面， 正准备沿着黄色弯曲的小路前往自己向往已久的地方。 整个牌图除了月亮和蝎子外， 基本成对称结构， 有一条蜿蜒的小路分开， 据说代表人生理想与现实两个层面， 而蝎子为了实现自己的梦想， 必须在理想与现实中徘徊前行， 稍有偏差便很难达成目的。 而月亮中那张愁苦不安的面孔， 似乎是对前行中蝎子的内心映照吧！</p><h3 id="正位-18"><a href="#正位-18" class="headerlink" title="正位"></a>正位</h3><ul><li>基本含义——幻想、 谎言、 不安、 动摇、 迷惑、 暧昧不清、 重伤他人或为人中伤、 顾及左右优柔寡断、受人感化、 无法发挥潜能。</li><li>恋爱婚姻——暧昧不清的恋情、 虚伪的恋情、 孽缘、 三角恋、 遭遇背叛、 为流言所困。</li><li>工作学业——被小人中伤、 目标不明、 遭遇欺骗、 适合于夜生活有关的工作、 事业有成却无法满足、成绩低迷、 考试时心神不宁致使失败。</li><li>人际财富——私房钱可暂缓财务危机、 令人不安的经济状况、 因被欺诈失财， 被他人中伤、 易遭欺骗、被恶言中伤、 被人误会。</li><li>健康生活——心烦意乱、 精疲力竭、 面对小疾而心情沉重、 遭遇错误的诊断。</li><li>其他——内心隐隐感到不安、 夜晚独处倍感孤寂。</li></ul><h3 id="逆位-18"><a href="#逆位-18" class="headerlink" title="逆位"></a>逆位</h3><ul><li>基本含义——状况逐渐好转、 时间可以冲淡一切、 疑虑渐消、 幸免遇害。</li><li>恋爱婚姻——时间将使二人的感情越发亲密、 婚期在即、 冰释前嫌、 被动等待爱情。</li><li>工作学业——境遇逐渐好转、 检讨以往的过失、 遭遇瓶颈苦研良策、 默默付出终将获得收益。</li><li>人际财富——财务危机得以解除、 即将度过拮据期， 以往的困惑渐渐逝去、 人际交往顺利、 冰释前嫌。</li><li>健康生活——体力逐渐恢复、 病体几尽痊愈、 心情开朗。</li><li>其它——时间安排过于紧张、 生活节奏过快。</li></ul><h2 id="太阳-The-Sun"><a href="#太阳-The-Sun" class="headerlink" title="太阳 - The Sun"></a>太阳 - The Sun</h2><p>卡片编号：<strong>XIX</strong></p><h3 id="卡片内容-19"><a href="#卡片内容-19" class="headerlink" title="卡片内容"></a>卡片内容</h3><p>一名满脸稚气、 面带笑容的孩子骑在马背上， 从灰色的围墙中一跃而出， 预示着逃脱束缚、 奔向自由。孩子的头上有一个雏菊花环和一根似曾相识的羽毛， 与愚人和死神头上的那根一模一样， 据说象征超越死亡和重获新生。 在灰色的围墙后面种满了金灿灿的向日葵， 似乎是一座人造花园。 但孩子似乎对这些人造的美景并无兴趣， 而是选择了奔向那天然毫无修饰的世界， 就像是他裸露的身体一样， 真实、 自然、 纯真。四朵向日葵都面向孩子而非太阳， 似乎是在告诉我们纯净、 自然、 真实的个体凌驾于太阳之上， 是一种远远超越权力和财富的境界， 同时也是快乐的源泉， 就像孩子脸上洋溢出的喜悦。</p><h3 id="正位-19"><a href="#正位-19" class="headerlink" title="正位"></a>正位</h3><ul><li>基本含义——前景明朗、 活力充沛、 欲望旺盛、 得贵人相助、 阳光普照。</li><li>恋爱婚姻——彼此恩爱有加、 得到亲朋的祝福、 步入婚礼殿堂、 梦中情人出现、 恋情公开、 彼此感情日渐亲密。</li><li>工作学业——目标达成、 积极主动、 得遇名师、 工作环境明朗、 实力得以充分发挥、 竭尽全力终获成功， 面对课业积极上进、 成绩快速进步、 考试顺利。</li><li>人际财富——储蓄增加、 有意外之财、 财运鼎盛， 友谊地久天长、 与朋友关系日渐亲密、 好友增加、积极的交往。</li><li>健康生活——体力充沛、 顽强的生命力、 身体康健。</li><li>其他——适合户外活动、 呼吸新鲜空气可以愉悦心情、 怀孕、 生活充实。</li></ul><h3 id="逆位-19"><a href="#逆位-19" class="headerlink" title="逆位"></a>逆位</h3><ul><li>基本含义——意志消沉、 约会取消、 情绪低落、 事事无法持久、 性格不开朗、 感到无助、 生活不稳定。</li><li>恋爱婚姻——因冲动致使感情破裂、 迟迟不能步入婚礼殿堂、 有分手的危险、 无法破镜重圆、 不被祝福的恋情、 婚约取消。</li><li>工作学业——听不进他人劝诫、 对工作没有耐心、 原定计划无法实施、 后劲不足、 无固定职业或短期内很难找到工作， 厌学、 听不进他人劝诫、 缺乏耐心、 成绩低落。</li><li>人际财富——收入下降、 奢靡浪费、 因爱慕虚荣而增加开支， 被同伴排挤、 与旧友绝交、 给人消极猥亵之感、 让人无法亲近。</li><li>健康生活——体力不足、 生活无规律、 体型发胖。</li><li>其它——对人和事物都无法持久、 被迫外出、 性格孤僻、 生活窘迫。</li></ul><h2 id="审判-Judgement"><a href="#审判-Judgement" class="headerlink" title="审判 - Judgement"></a>审判 - Judgement</h2><p>卡片编号：<strong>XX</strong></p><h3 id="卡片内容-20"><a href="#卡片内容-20" class="headerlink" title="卡片内容"></a>卡片内容</h3><p>天使吹响了号角， 传播着上天的福音。 在声声催人振奋的号角中， 沉睡已久的灵魂一个个走出了自己内心的坟墓， 或者说是内心的困惑， 站立在天使的翅膀下， 满怀感恩的心， 细心聆听着上天的福音。 审判是大阿尔卡那的倒数第二张牌， 可以说是对大阿尔卡那前二十张人生旅程的一个回顾和自省， 在超越自我认知最终的世界之前， 反省自己的过去， 进行自我剖析， 认清并且洗涤自己曾经的错， 坚信曾经的对， 才能最终走向成功之门。</p><h3 id="正位-20"><a href="#正位-20" class="headerlink" title="正位"></a>正位</h3><ul><li>基本含义——复活的喜悦、 命运好转、 作品公开发表、 得到好消息、 信奉宗教、 自信。</li><li>恋爱婚姻——真心的恋情、 感情公开、 即使发生争执仍有和好的希望、 爱的使者出现、 破镜重圆、 深信爱的奇迹。</li><li>工作学业——有复职的可能、 事业脱离窘境、 岗位变更、 升迁、 适合于音乐相关的工作， 考试顺利、学业更上一层楼、 临阵磨枪不快也光、 成绩优异。</li><li>人际财富——财物失而复得、 获得意外之财， 友情的裂痕得以修复、 备受他人赞许、 与多年老友取得联系、 与旧友言归于好、 与他人建立彼此信赖的关系。</li><li>健康生活——借旅行净化身心、 借音乐舒缓心情、 休养生息。</li><li>其他——旅游可以放松最近疲惫的身心、 音乐可以帮你减轻疲劳、 退一步海阔天空、 自信的演讲。</li></ul><h3 id="逆位-20"><a href="#逆位-20" class="headerlink" title="逆位"></a>逆位</h3><ul><li>基本含义——一蹶不振、 尚未开始便已结束、 犹豫不决、 行为不妥、 生活散漫、 良心发现内心颇感罪恶。</li><li>恋爱婚姻——嫉妒心过重、 辜负对方的好意、 无法向对方展开心扉、 无法破镜重圆、 对待恋情不够认真、 旧情难忘。</li><li>工作学业——求知遇阻、 事业受挫、 面对困难一蹶不振、 颇感心有余而力不足、 业绩低迷， 考场受挫、对考试期望过高、 难以靠近期望的学校。</li><li>人际财富——丢失财物、 遗失重要的物品， 夹在朋友之间左右为难、 与旧友无法和好、 对朋友感到失望、 过去被好友背叛致使心里留下阴影、 认人有误。</li><li>健康生活——积劳成疾、 病情延误。</li><li>其它——重返故土、 因贪玩导致身心疲惫、 生活无规律。</li></ul><h2 id="世界-The-World"><a href="#世界-The-World" class="headerlink" title="世界 - The World"></a>世界 - The World</h2><p>卡片编号：<strong>XXI</strong></p><h3 id="卡片内容-21"><a href="#卡片内容-21" class="headerlink" title="卡片内容"></a>卡片内容</h3><p>世界代表宇宙的重点， 与大阿尔卡那得第 10 张命运之轮相呼应， 四方依然是狮子、 飞鹰、 天使和神牛，只是中间不再是命运之轮， 而是一个在月桂花环中跳舞的少女。 她一手拿着一个魔杖， 又好像是一把钥匙，正在为步入重点地人喝彩， 又或是一种召唤， 在引导胜利者走到智慧之门面前， 接过他手中开启幸福的钥匙。 世界是大阿尔卡那人生旅途的重点， 也是一个新的开始， 因为进入智慧之门， 你又会变回愚人， 为找寻新的智慧或是人生目标而奋斗。</p><h3 id="正位-21"><a href="#正位-21" class="headerlink" title="正位"></a>正位</h3><ul><li>基本含义——愿望达成、 精神高昂、 幸福时光、 达到巅峰、 到达目的地、 获得成功。</li><li>恋爱婚姻——得到祝福的婚姻、 最佳伴侣、 婚姻美满、 永恒的爱恋。</li><li>工作学业——事业鼎盛时期、 既定目标得以达成、 适合航空航天相关的工作， 学业有成、 成绩优异、目标达成、 考试顺利。</li><li>人际财富——收入增加、 资金运作合理， 喜相逢、 交友获益、 人际关系稳定、 备受他人信赖。</li><li>健康生活——身体康健、 体力充沛、 精神烁烁。</li><li>其他——梦想成真、 适合前往海洋、 草原等开阔地旅游、 幸福伴随左右。</li></ul><h3 id="逆位-21"><a href="#逆位-21" class="headerlink" title="逆位"></a>逆位</h3><ul><li>基本含义——无法全身心地投入、 杞人忧天、 事事不顺、 不安现状、 情绪低迷、 思维颇显幼稚。</li><li>恋爱婚姻——恋情前景不明朗、 彼此难以结合、 感情容易破裂、 彼此关系暧昧不清、 以往的热情逐渐冷却、 对伴侣失去新鲜感。</li><li>工作学业——面对工作感到力不从心或精神懈怠、 事业前景不被看好、 处于事业低潮期、 项目半途而废、 工作备受他人欺压、 潜能受外界束缚无法发挥、 对当前薪金待遇感到不满， 成绩低落、 处于学业低潮期、 课业半途而废、 面对学科精神懈怠、 因备考不足致使考试失利。</li><li>人际财富——破产、 现金流短缺， 交友遇挫、 朋友关系冷淡、 处世过于幼稚以致事事不顺。</li><li>健康生活——肝火盛气大伤身、 心理压力过重无法宣泄。</li><li>其它——计划不周、 不适宜乔迁动土、 缺乏鲜见之名、 不得要领。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 塔罗牌 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 神秘学 </tag>
            
            <tag> 伟特体系 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>塔罗牌简介</title>
      <link href="/2023/09/01/tarot/230901-tarot-main/"/>
      <url>/2023/09/01/tarot/230901-tarot-main/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/img/tech/k0vbc56vmsnzg9o8hw53w79jy5ymx4.jpg"><br>塔罗牌，由“Tarot”一词音译而来，被称为“大自然奥秘之库”。西方古老的占卜工具，是一套从15世纪中期于欧洲各地流传的占卜卡片。</p><p>塔罗牌里面的各个元素、符号、以及象征意义是源自公元前3世纪～14世纪中发展形成的，集合了多国神秘学、基督教、犹太教、埃及神话、星座、数字符号、象征学等自成一格的严谨占卜体系；在各国广为流传，到了21世纪，全世界都可以找到塔罗牌的踪影。塔罗牌虽有很广泛的占卜和预测事物的用途，但在10～17世纪天主教占多数的欧洲，由于宗教保守气氛和基督教系统禁止占卜，以至于塔罗牌逐渐放弃原本的占卜形式——在很长一段时间内担任了纸牌游戏的功能，直到最后蜕变为现在所常见的扑克牌。</p><p>从18世纪后期开始，塔罗牌不仅使用欧洲的民间解读方式，神秘主义者们把塔罗牌更加“科学化、规范化”，从原始民俗学形态的占卜进化为可以独自发展出一套理论的神秘学占卜止，作为占卜使用的塔罗牌只能龟缩在秘密的团体之中；然而，在19世纪的英语国家中，因为民主制度和言论自由的发展塔罗牌游戏开始逐渐盛行；在进入21世纪后，塔罗牌在非英语系国家的发展迅速（尤其是受到美国的影响），在英语系国家的塔罗牌转变为全部用于占卜为目的，而且这个营销模式迅速反过来传回欧洲，在亚洲的台湾、中国、日本、新加坡等地塔罗牌也成为一门非常受欢迎占卜术。</p><h1 id="塔罗牌占卜"><a href="#塔罗牌占卜" class="headerlink" title="塔罗牌占卜"></a>塔罗牌占卜</h1><p>塔罗牌占卜是利用塔罗牌，针对爱情、人际关系、工作、学业等进行分析、预测和提供建议的神秘学方法。根据荣格的理论，塔罗牌占卜也可以用作心理咨询，用于引导求助者借助这种“思维工具”来辅助联想和心理探索。</p><h1 id="主要体系"><a href="#主要体系" class="headerlink" title="主要体系"></a>主要体系</h1><p>传统上塔罗牌有78张牌，由两种不同的牌组所组成。第一种称为大阿尔克那，由22张没有花色的牌所组成，相当于所谓的“王牌”。第二种称为小阿尔克那（Arcanes mineurs），由56张牌所组成，而这56张牌又可以分成4种花色。每种花色有数字2到数字10的牌，加上一张Ace和四张宫廷牌。阿尔克那arcana是拉丁文arcanum的复数，意思为“隐藏的真理”或“秘密的知识”。其他的称呼有大塔罗／小塔罗、大秘仪／小秘仪、主牌／副牌、大牌／小牌、Arcanes majeurs／Arcanes mineurs等等。小阿尔克那的传统意大利式牌组为宝剑（épées）、权杖（bâtons）、圣杯（coupes）和钱币（deniers）。随着心理学的发展和新时代运动的兴起，现代人更倾向于将塔罗牌作为一种自我探索和发展的工具。世界各地的一些心理医生将塔罗牌作为一种辅助治疗手段加以运用。</p><p>塔罗牌主要分为马赛体系、伟特体系、托特体系，威斯康缇塔罗及其他体系，不同的体系之间，对于每张牌的解释不尽相同，大牌的排列顺序也不完全一致。</p><h2 id="马赛体系"><a href="#马赛体系" class="headerlink" title="马赛体系"></a>马赛体系</h2><p>马赛体系出现的时间比伟特体系和托特体系都来得早。流行于法国南部，常做为塔罗牌游戏用，代表作是马赛塔罗牌，它代表着最流行的古代塔罗体系，不论在牌面结构、释义和牌的编号上都和现在的塔罗牌有较大差异。也有专用于游戏的塔罗牌，如法国塔罗牌。 做为经典塔罗（Classical Tarot）的是被称做威斯康缇塔罗牌仿绘品。威牌被认为中古世纪就已发现和流传。这也是部分占卜师解牌师主要用于收藏。 威斯康缇塔罗牌可做为任何解，而做为继承者的马赛塔罗，当然是以承袭其牌义为主。但主要来说，马赛塔罗和伟特牌又有艺曲同工。也有人认为不该和伟特牌同一而论，但主要还是因着解牌师的解法和说法而有不同。</p><h2 id="伟特体系"><a href="#伟特体系" class="headerlink" title="伟特体系"></a>伟特体系</h2><p>伟特体系，为目前最普遍流行，其代表是由亚瑟·爱德华·伟特（Arthur Edward Waite）所设计的莱德伟特塔罗牌。韦特牌有很多牌本，都是由不同的画家上色的，有Aquatic Tarot和Albano-Waite Tarot等。现在最受欢迎的其中一款是普及版伟特塔罗牌，是美国游戏公司（US Games Systems, Inc.）出版，由美国画家Mary Hanson-Roberts上色，使用的是原牌的构图，但颜色鲜艳，以及运用渐层色彩，令单调的牌面更觉丰富。爱德华·伟特是19世纪末英国著名的神秘学团体黄金黎明协会的会员。爱德华·伟特（A.E.Waite）设计的塔罗牌，最初的牌是黑白的，因为受欢迎，后来由史密斯女士（Pamela Colman Smith）上色。该体系改善了原本小阿尔克那缺乏图像和故事的缺点，加上了丰富的象征和显而易懂的图像，初学者也不难从牌面猜测牌义，成为近代最受欢迎的塔罗牌。韦特牌的图案内藏不少暗示，其中有占星学、数字学、颜色学，且牌中内容更与神话或圣经故事结合，如“6．恋人”里的亚当和夏娃、“20．审判”里上帝的审判与死人之复活。由于牌面已充满了意义，解牌时会令牌师能更流畅及更易引发联想，故出版后即为不少牌师所选用。最初推出韦特牌的是美国的骑士出版社，韦特牌又称“骑士韦特牌”（Rider-Waite），A.E.韦特亦于推出此牌的同时推出了此牌的使用手册（A Pictorial Key to Tarot）。</p><p>近年来发行的众多琳琅满目的塔罗牌，大多遵从伟特体系，虽然稍有差异，但多不离其本。现在，大多数的塔罗书籍和网站也是使用韦特牌来介绍塔罗牌这一来由已久的占卜工具。</p><h2 id="托特体系"><a href="#托特体系" class="headerlink" title="托特体系"></a>托特体系</h2><p>托特体系的代表作是托特塔罗牌，他的设计者亚历斯特·克劳利也来自黄金黎明协会，并且据称是根据托特之书（Book of Thoth）设计的，用上较多的神秘学的象征图案或符号。亚历斯特·克劳利在1920年代曾被称为是世界上最邪恶的男人，他设计的这副塔罗牌也因为其黑魔法师的背景，而添加了神秘的色彩。此牌更加抽象，强调塔罗牌的神秘学意义，运用了众多的符号，适合作为灵修之用。</p><h2 id="其他体系"><a href="#其他体系" class="headerlink" title="其他体系"></a>其他体系</h2><p>另外亦有很多具主题性的塔罗牌，如女神塔罗牌、动物塔罗牌、性爱塔罗牌等，都以各自主题配合一般塔罗牌牌义而成。较特别的还有如奥修禅卡（Osho Zen Tarot），主要是借由牌上特殊的图像，来显示占卜者身心灵的状况，此种塔罗牌则多用于检视自身。另外，大航海时代的水手间往往流行一套黑帆海盗牌 (Black Pirate Tarot) ，此种牌大多为手绘，以不同牌阵占卜水手航行是否顺利。</p><h2 id="直觉塔罗"><a href="#直觉塔罗" class="headerlink" title="直觉塔罗"></a>直觉塔罗</h2><p>直觉塔罗一词通常指托特塔罗，是因其参入了心理学，神秘学，符号学等表现元素和人物。若要实际来说，托特和伟特，马赛解法并无不同。但托特却又多了那么一丝特别感，也少人专研。普遍的来说，如果在不违反由抽牌者依其心智运行抽牌动作，任何塔罗都能做为直觉塔罗。</p><h1 id="塔罗牌牌组的神秘用法"><a href="#塔罗牌牌组的神秘用法" class="headerlink" title="塔罗牌牌组的神秘用法"></a>塔罗牌牌组的神秘用法</h1><p>阿利埃特是第一位于1789年左右发行专门为神秘目而设计塔罗牌库的人。阿利埃特的塔罗牌包含着跟古埃及有关的主题，这些卡片从《透特书》中衍生出来的，然而它带着错位的信念。</p><p>神秘主义者使用的78张塔罗牌有着两个不同的部分：</p><ul><li>大阿尔克那（较大的秘密），或称为王牌的卡片，由22张不带花色的卡片组成：<br>魔术师、女祭司、皇后、皇帝、圣职者 (塔罗牌)、恋人 (塔罗牌)、战车、力量 (塔罗牌)、隐者、命运之轮、正义 (塔罗牌)、倒吊人、死亡 (塔罗牌)、节制 (塔罗牌)、魔鬼 (塔罗牌)、塔、星星、月亮 (塔罗牌)、太阳 (塔罗牌)、审判 (塔罗牌)、世界及愚者。<br>从魔术师到世界的卡牌以罗马数字从I到XXI为编号，而愚者是唯一的未编号的卡牌，有时会置于牌组的开端为0号，又或是结尾编号为XXII。</li><li>小阿尔克那（较小的秘密），由56张卡片，分为四组，每组14张卡片组成：<br>十张数字卡和四张法院卡。法院卡包括套装中四款塔罗牌：国王、王后、骑士和积克（Jack）。传统的意大利塔罗牌有宝剑、权杖、钱币及圣杯；然而，在现代的神秘塔罗牌甲板中，权杖一般会称为“魔杖”或杖或棒，钱币通常会称为五角星或是圆盘。<br>让-巴蒂斯特·阿利埃特（又称保罗·克里斯蒂安）最初首先使用“大阿尔克那”与“小阿尔克那”两个术语，并且从未于塔罗牌游戏使用。某些甲板主要以艺术品的形式存在，而此类艺术性甲板有时仅包含22个大阿尔克那。</li></ul><p>在秘传的塔罗牌中有三种最常见的套牌，分别是：马赛塔罗牌、莱德·伟特塔罗牌及托特塔罗牌。</p><p>跟弗里达·哈里斯夫人一起设计托特塔罗牌甲板的阿莱斯特·克劳利指那塔罗牌说：“这副卡片的来源非常鲜为人知的。一些权威人士试图将其追溯至远古的埃及之谜；其他人则尝试将其发展推迟到15世纪甚至16世纪…（但是）关于塔罗牌的终极 的唯一理论是，根据圣卡巴拉的数据，这是宇宙令人钦佩的象征性图画。”</p><h1 id="塔罗牌牌组的心理学"><a href="#塔罗牌牌组的心理学" class="headerlink" title="塔罗牌牌组的心理学"></a>塔罗牌牌组的心理学</h1><p>卡尔·荣格（Carl Jung）是第一位正视塔罗牌并给予正面评价的心理学家。他将塔罗牌视为有象征性的原型：人的基本类型或境遇都隐含在人类所有的潜意识行为中。比如“皇帝（L’Empereur）”，是最高权威（家长）或父亲的形象的象征。</p><p>这种原型理论引发了很多种心理学方面的应用。一些心理学家让病人选择一张适合他的塔罗牌，协助心理学家辨识该病人如何看待自己。有些心理学家试图利用塔罗牌图像使病人通过想像他的境遇或牌与他的关联以厘清他的想法：是像“宝剑骑士”（le Chevalier d’Épées）那样急性子和冲动呢？还是像在韦特牌中“宝剑二（Deux d’Épées）”那样盲目、逃避？塔罗牌可被视为潜意识的一种表达方式，只要遵循着一定的规范就可以对潜意识的认知进行解读。</p><p>有趣的是，维斯康提塔罗牌和马赛塔罗牌这样以前的牌面比现代塔罗牌更倾于粗糙及少有“代数”表达。这不仅是现代艺术的错觉，它反应出以往几世纪在塔罗牌技艺上重大变革的方向，尤其自1900年起。塔罗牌的象征意义已经非常成功的创立下良好的典范。</p><p>塔罗牌也会因应现代时代趋势而牌面的解释有所改变，并非一成不变的解释，但是在原形的理论基础方向内是一致的，会有所改变的是牌内依照现今社会风潮而解释有所变化。不仅在心理学上可以使用参考，对于很多逻辑性的推敲也有很大的帮助。</p><p>以学术心理学的角度来诠释塔罗牌，不应该用占卜两个字。正确的用语是读牌。以英文的全名为Tarot Reading以当今翻译为占卜确实会误导对于塔罗牌真正的诠释意义。</p><p>塔罗牌之所以有大阿尔克那（Arcanes majeurs，又称大秘仪）与小阿尔克那（Arcanes mineurs，又称小秘仪）的分别，可以追溯至中古欧洲的宗教观及世界观。当时的人们普遍认为这个世界分为“圣”跟“俗”这两种相对而极端的境界。大阿尔克那代表的是圣、天界、抽象而伟大的观念，小阿尔克那代表的则是俗、凡人、芸芸众生、具体而实际的日常处境、心境。</p>]]></content>
      
      
      <categories>
          
          <category> 塔罗牌 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 神秘学 </tag>
            
            <tag> 伟特体系 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS+Android+Flutter源码混编</title>
      <link href="/2023/08/18/flutter/230818-flutter-mix-up/"/>
      <url>/2023/08/18/flutter/230818-flutter-mix-up/</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>目前Flutter的应用越来越多，那么如何在已有的iOS&amp;Android项目中嵌入一个Flutter Module？接下来我们将介绍一下如何完成这个操作。这里先只介绍源码混编的方式(这种方式需要在开发环境配置好Flutter sdk)，至于集成framework和aar的方式后续再讲。</p><h2 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h2><ul><li>Flutter版本: 3.13.0</li><li>Xcode Version 14.3.1 (14E300c)</li><li>Android Studio Giraffe | 2022.3.1    </li><li>macOS 13.4.1 (Apple M2 Pro)</li><li>Gradle版本: 8.1.0</li><li>kotlin版本: 1.8.10</li><li>Apple Swift version 5.8.1 (swiftlang-5.8.0.124.5 clang-1403.0.22.11.100)</li><li>Dart版本: 2.19.6</li></ul><h2 id="Flutter-Module项目"><a href="#Flutter-Module项目" class="headerlink" title="Flutter Module项目"></a>Flutter Module项目</h2><p>首先创建一个空目录，例如：<code>some/path/</code><br>接下来执行以下命令（这里假设你的flutter sdk环境已配置完毕）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 到达指定目录</span><br><span class="line">cd some/path/</span><br><span class="line"></span><br><span class="line">// 创建Flutter Module</span><br><span class="line">flutter create -t module --org com.example flutter_mix_up_demo</span><br></pre></td></tr></table></figure><p>这会创建一个 <code>some/path/my_flutter/</code> 的 Flutter 模块项目，其中包含一些 Dart 代码来帮助你入门以及一个隐藏的子文件夹 <code>.android/</code> 和 <code>.ios/</code>。 <code>.android</code> 文件夹包含一个 Android 项目，该项目不仅可以帮助你通过 <code>flutter run</code> 运行这个 Flutter 模块的独立应用，而且还可以作为封装程序来帮助引导 Flutter 模块作为可嵌入的 Android 库。iOS同理。</p><h2 id="Native项目"><a href="#Native项目" class="headerlink" title="Native项目"></a>Native项目</h2><p><strong>将已有的Android和iOS项目全部放到上面提到的 <code>some/path/</code> 目录下，这一步是必须的。</strong><br>假设已有的Android项目为<code>AndroidFlutterMixUpDemo</code>，iOS项目为：<code>iOSFlutterMixUpDemo</code></p><h3 id="iOS"><a href="#iOS" class="headerlink" title="iOS"></a>iOS</h3><p>打开iOS项目的 Podfile 文件，添加如下代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">platform :ios, &#x27;12.0&#x27;</span><br><span class="line"></span><br><span class="line">target &#x27;iOSFlutterMixUpDemo&#x27; do</span><br><span class="line">  use_frameworks!</span><br><span class="line"></span><br><span class="line">  flutter_application_path = &#x27;../flutter_mix_up_demo&#x27;</span><br><span class="line">  load File.join(flutter_application_path, &#x27;.ios&#x27;, &#x27;Flutter&#x27;, &#x27;podhelper.rb&#x27;)</span><br><span class="line">  install_all_flutter_pods(flutter_application_path)</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">post_install do |installer|</span><br><span class="line">  flutter_post_install(installer) if defined?(flutter_post_install)</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>将上面的<code>flutter_mix_up_demo</code>替换成你的Flutter Module的名称和路径。执行 <code>pod install</code>，编译或者run iOS主项目，编译成功即可</p><h3 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h3><p>进入Android项目根目录，打开<code>AndroidFlutterMixUpDemo/settings.gradle</code>，插入以下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">// Android项目名称，无需修改</span><br><span class="line">rootProject.name = &quot;AndroidFlutterMixUpDemo&quot;</span><br><span class="line">// Include the host app project.一般无需修改</span><br><span class="line">include &#x27;:app&#x27;</span><br><span class="line"></span><br><span class="line">setBinding(new Binding([gradle: this]))                      </span><br><span class="line">evaluate(new File(                                </span><br><span class="line">        settingsDir.parentFile,                                      </span><br><span class="line">        &#x27;flutter_mix_up_demo/.android/include_flutter.groovy&#x27;</span><br><span class="line">))</span><br><span class="line"></span><br><span class="line">// 这个配置可以在Android studio打开安卓主项目时编辑或修改flutter代码.可加可不加，不加的话只是看不到Flutter Module代码，不会影响编译及运行</span><br><span class="line">include &#x27;:flutter_mix_up_demo&#x27;</span><br><span class="line">project(&#x27;:flutter_mix_up_demo&#x27;).projectDir = new File(&quot;../flutter_mix_up_demo&quot;)</span><br></pre></td></tr></table></figure><p>打开Android项目的 <code>AndroidFlutterMixUpDemo/app/build.gradle</code>， 在依赖中插入一下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">  implementation project(&#x27;:flutter&#x27;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行Gradle sync操作。</p><p>如果以后Google官方修改了依赖问题那么应该就可以直接成功，当时目前我用的最新版本还是会出现依赖拉去问题，如果出现依赖问题，那么打开 <code>AndroidFlutterMixUpDemo/settings.gradle</code>，将dependencyResolutionManagement改为如下配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">dependencyResolutionManagement &#123;</span><br><span class="line">    repositoriesMode.set(RepositoriesMode.PREFER_SETTINGS) // 这里要修改为 PREFER_SETTINGS</span><br><span class="line">    repositories &#123;</span><br><span class="line">        google()</span><br><span class="line">        mavenCentral()</span><br><span class="line">        jcenter()</span><br><span class="line">        maven &#123;</span><br><span class="line">            url &#x27;some/path/flutter_module/build/host/outputs/repo&#x27;</span><br><span class="line">            // This is relative to the location of the build.gradle file</span><br><span class="line">            // if using a relative path.</span><br><span class="line">        &#125;</span><br><span class="line">        maven &#123;</span><br><span class="line">            url &#x27;https://storage.googleapis.com/download.flutter.io&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行执行Gradle sync操作，这次不出意外的话就可以成功了，如果还是拉去不到，那么考虑下翻墙等网络原因，如果没有条件，可以替换成国内的下载源，至于国内的下载源可以直接在网上搜索获取。</p><p>到这一步Android+iOS+Flutter源码混编的教程就完毕了，对于后续具体开发的细节就不在这篇文章介绍了。</p><p><strong><a href="https://github.com/houboye/FlutterMixUp">Demo示例</a></strong></p><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul><li><a href="https://flutter.cn/docs/add-to-app/android/project-setup">https://flutter.cn/docs/add-to-app/android/project-setup</a></li><li><a href="https://flutter.cn/docs/add-to-app/ios/project-setup">https://flutter.cn/docs/add-to-app/ios/project-setup</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flutter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift实现弹窗管理-SwiftPopuper</title>
      <link href="/2023/08/07/ios/230807-SwiftPopuper/"/>
      <url>/2023/08/07/ios/230807-SwiftPopuper/</url>
      
        <content type="html"><![CDATA[<h1 id="SwiftPopuper"><a href="#SwiftPopuper" class="headerlink" title="SwiftPopuper"></a>SwiftPopuper</h1><p>源码地址：<a href="https://github.com/houboye/SwiftPopuper">Github链接</a><br>hll-popupsmanager-ios 的swift版本<br><a href="https://github.com/HuolalaTech/hll-popupsmanager-ios">hll-popupsmanager-ios</a><br><a href="https://juejin.cn/post/7243975451181285435">hll-popupsmanager-ios技术文档</a></p><h1 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod &#x27;SwiftPopuper&#x27;</span><br></pre></td></tr></table></figure><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><h2 id="创建自定义View，并且遵循SwiftPopuperProtocol"><a href="#创建自定义View，并且遵循SwiftPopuperProtocol" class="headerlink" title="创建自定义View，并且遵循SwiftPopuperProtocol"></a>创建自定义View，并且遵循<code>SwiftPopuperProtocol</code></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">CustomPopView</span>: <span class="title class_">UIView</span>, <span class="title class_">SwiftPopuperProtocol</span> &#123;</span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">supplyCustomPopupView</span>() -&gt; <span class="type">UIView</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">self</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">layout</span>(<span class="params">with</span> <span class="params">superView</span>: <span class="type">UIView</span>) &#123;</span><br><span class="line">        <span class="comment">// layout</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="配置弹窗并弹出"><a href="#配置弹窗并弹出" class="headerlink" title="配置弹窗并弹出"></a>配置弹窗并弹出</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">func showPopup() &#123;</span><br><span class="line">    var config = PopuperConfig(identifier: &quot;popupName&quot;)</span><br><span class="line">    config.sceneStyle = .center</span><br><span class="line">    config.clickOutsideDismiss = true</span><br><span class="line">    config.cornerRadius = 8</span><br><span class="line">    config.popAnimationStyle = .scale</span><br><span class="line">    config.isAloneMode = true</span><br><span class="line">    let customPopView = CustomPopView()</span><br><span class="line">    SwiftPopuper.addPopup(customPopView, options: config)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>了解Nginx</title>
      <link href="/2023/08/03/server/230803-nginx/"/>
      <url>/2023/08/03/server/230803-nginx/</url>
      
        <content type="html"><![CDATA[<h1 id="Nginx-简介"><a href="#Nginx-简介" class="headerlink" title="Nginx 简介"></a>Nginx 简介</h1><p>Nginx (engine x) 是一款轻量级的 Web 服务器 、反向代理服务器及电子邮件（IMAP&#x2F;POP3）代理服务器。<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/img/tech/20230803143018.png"><br><strong>什么是反向代理？</strong><br>反向代理（Reverse Proxy）方式是指以代理服务器来接受 internet 上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给 internet 上请求连接的客户端，此时代理服务器对外就表现为一个反向代理服务器。<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/img/tech/20230803143106.png"></p><h1 id="Nginx安装"><a href="#Nginx安装" class="headerlink" title="Nginx安装"></a>Nginx安装</h1><h2 id="Linux安装Nginx"><a href="#Linux安装Nginx" class="headerlink" title="Linux安装Nginx"></a>Linux安装Nginx</h2><h3 id="第一种安装方式：rpm包"><a href="#第一种安装方式：rpm包" class="headerlink" title="第一种安装方式：rpm包"></a>第一种安装方式：rpm包</h3><ol><li>进入<a href="http://nginx.org/packages/">下载页面</a>，选择对应版本。</li></ol><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">wget</span> http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm</span><br><span class="line">```nginx</span><br><span class="line"><span class="number">2</span>. 安装nginx rpm包</span><br><span class="line">实际上安装的是 nginx 的 yum 源。</span><br><span class="line">```nginx</span><br><span class="line">rpm -ivh nginx-<span class="regexp">*.rpm</span></span><br></pre></td></tr></table></figure><ol start="3"><li>安装rpm包</li></ol><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">yum</span> install nginx</span><br></pre></td></tr></table></figure><ol start="4"><li>关闭防火墙</li></ol><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">firewall-<span class="attribute">cmd</span> --zone=public --add-port=<span class="number">80</span>/tcp --<span class="literal">permanent</span></span><br><span class="line"></span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><h3 id="第二种安装方式：源码编译"><a href="#第二种安装方式：源码编译" class="headerlink" title="第二种安装方式：源码编译"></a>第二种安装方式：源码编译</h3><h4 id="安装编译工具及库"><a href="#安装编译工具及库" class="headerlink" title="安装编译工具及库"></a>安装编译工具及库</h4><p>Nginx 源码的编译依赖于 gcc 以及一些库文件，所以必须提前安装。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">yum</span> -y install make zlib zlib-devel gcc-c++ libtool  openssl openssl-devel</span><br></pre></td></tr></table></figure><p>Nginx 依赖 pcre 库，安装步骤如下：</p><ol><li>下载解压到本地<br>进入pcre 官网<a href="https://sourceforge.net/projects/pcre/files/pcre/">下载页面</a>，选择合适的版本下载。<br>例如下载8.35版本：</li></ol><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">wget</span> -O /opt/pcre/pcre-<span class="number">8</span>.<span class="number">35</span>.tar.gz http://downloads.sourceforge.net/project/pcre/pcre/8.35/pcre-8.35.tar.gz</span><br><span class="line"></span><br><span class="line">cd /opt/pcre</span><br><span class="line"></span><br><span class="line">tar zxvf pcre-<span class="number">8</span>.<span class="number">35</span>.tar.gz</span><br></pre></td></tr></table></figure><ol start="2"><li>编译安装<br>执行以下命令：</li></ol><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">cd</span> /opt/pcre/pcre-<span class="number">8</span>.<span class="number">35</span></span><br><span class="line"></span><br><span class="line">./configure</span><br><span class="line"></span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><ol start="3"><li>检验是否安装成功<br>执行<code>pcre-config --version</code>命令。</li></ol><h4 id="编译安装-Nginx"><a href="#编译安装-Nginx" class="headerlink" title="编译安装 Nginx"></a>编译安装 Nginx</h4><ol><li>下载解压到本地<br>进入<a href="http://nginx.org/en/download.html">官网下载地址</a> ，选择合适的版本下载。<br>例如下载1.12.2 版本：<a href="http://downloads.sourceforge.net/project/pcre/pcre/8.35/pcre-8.35.tar.gz">http://downloads.sourceforge.net/project/pcre/pcre/8.35/pcre-8.35.tar.gz</a></li></ol><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">wget</span> -O /opt/nginx/nginx-<span class="number">1</span>.<span class="number">12</span>.<span class="number">2</span>.tar.gz http://nginx.org/download/nginx-1.12.2.tar.gz</span><br><span class="line"></span><br><span class="line">cd /opt/nginx</span><br><span class="line"></span><br><span class="line">tar zxvf nginx-<span class="number">1</span>.<span class="number">12</span>.<span class="number">2</span>.tar.gz</span><br></pre></td></tr></table></figure><ol start="2"><li>编译安装<br>执行命令：</li></ol><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">cd</span> /opt/nginx/nginx-<span class="number">1</span>.<span class="number">12</span>.<span class="number">2</span></span><br><span class="line"></span><br><span class="line">./configure --with-http_stub_status_module --with-http_ssl_module --with-pcre=/opt/pcre/pcre-<span class="number">8</span>.<span class="number">35</span></span><br><span class="line"></span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><ol start="3"><li>关闭防火墙：</li></ol><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">firewall-<span class="attribute">cmd</span> --zone=public --add-port=<span class="number">80</span>/tcp --<span class="literal">permanent</span></span><br><span class="line"></span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><ol start="4"><li>启动Nginx<br>执行<code>Nginx</code>命令行即可启动Nginx。<br>启动后，访问站点会出现”<strong>Welcome to nginx…</strong>“的字样。</li></ol><h3 id="Linux-开机自启动"><a href="#Linux-开机自启动" class="headerlink" title="Linux 开机自启动"></a>Linux 开机自启动</h3><p>Centos7 以上是用 Systemd 进行系统初始化的，Systemd 是 Linux 系统中最新的初始化系统（init），它主要的设计目标是克服 sysvinit 固有的缺点，提高系统的启动速度。Systemd 服务文件以 .service 结尾。</p><h4 id="rpm-包安装方式"><a href="#rpm-包安装方式" class="headerlink" title="rpm 包安装方式"></a>rpm 包安装方式</h4><p>如果是通过 rpm 包安装的，会自动创建 nginx.service 文件。<br>直接用命令：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">systemctl</span> enable nginx.service</span><br></pre></td></tr></table></figure><p>设置开机启动即可。</p><h4 id="源码编译方式"><a href="#源码编译方式" class="headerlink" title="源码编译方式"></a>源码编译方式</h4><p>如果采用源码编译方式，需要手动创建 nginx.service 文件。</p><h2 id="Docker安装Nginx"><a href="#Docker安装Nginx" class="headerlink" title="Docker安装Nginx"></a>Docker安装Nginx</h2><ul><li>官网镜像地址：<a href="https://hub.docker.com/_/nginx/">https://hub.docker.com/_/nginx/</a></li><li>下载镜像: <code>docker pull nginx</code></li><li>启动容器: <code>docker run --name my-nginx -p 80:80 -v /data/docker/nginx/logs:/var/log/nginx -v /data/docker/nginx/conf/nginx.conf:/etc/nginx/nginx.conf:ro -d nginx</code></li><li>重新加载配置(如果命令无效，尝试重启服务): <code>docker exec -it my-nginx nginx -s reload</code></li><li>停止服务: <code>docker exec -it my-nginx nginx -s stop</code> 或者 <code>docker stop my-nginx</code></li><li>重新启动服务: <code>docker restart my-nginx</code></li></ul><h2 id="脚本安装Nginx"><a href="#脚本安装Nginx" class="headerlink" title="脚本安装Nginx"></a>脚本安装Nginx</h2><p>脚本内容如下：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment">###################################################################################</span></span><br><span class="line"><span class="comment"># 控制台颜色</span></span><br><span class="line">BLACK=&quot;\033[1;30m&quot;</span><br><span class="line">RED=&quot;\033[1;31m&quot;</span><br><span class="line">GREEN=&quot;\033[1;32m&quot;</span><br><span class="line">YELLOW=&quot;\033[1;33m&quot;</span><br><span class="line">BLUE=&quot;\033[1;34m&quot;</span><br><span class="line">PURPLE=&quot;\033[1;35m&quot;</span><br><span class="line">CYAN=&quot;\033[1;36m&quot;</span><br><span class="line">RESET=&quot;$(<span class="attribute">tput</span> sgr0)<span class="string">&quot;</span></span><br><span class="line"><span class="string">###################################################################################</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">printf &quot;</span><span class="variable">$&#123;BLUE&#125;</span>\n<span class="string">&quot;</span></span><br><span class="line"><span class="string">cat &lt;&lt; EOF</span></span><br><span class="line"><span class="string">###################################################################################</span></span><br><span class="line"><span class="string"># 采用编译方式安装 Nginx, 并将其注册为 systemd 服务</span></span><br><span class="line"><span class="string"># 默认下载安装 1.16.0 版本，安装路径为：/usr/local/nginx</span></span><br><span class="line"><span class="string"># <span class="variable">@system</span>: 适用于 CentOS7+</span></span><br><span class="line"><span class="string"># <span class="variable">@author</span>: Zhang Peng</span></span><br><span class="line"><span class="string">###################################################################################</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="string">printf &quot;</span><span class="variable">$&#123;RESET&#125;</span>\n<span class="string">&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">command -v yum &gt; /dev/null 2&gt;&amp;1 || &#123;</span></span><br><span class="line"><span class="string">printf &quot;</span><span class="variable">$&#123;RED&#125;</span>Require yum but it<span class="string">&#x27;s not installed.<span class="variable">$&#123;RESET&#125;</span>\n&quot;;</span></span><br><span class="line"><span class="string">exit 1;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">printf &quot;\n<span class="variable">$&#123;GREEN&#125;</span>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; install nginx begin<span class="variable">$&#123;RESET&#125;</span>\n&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if [[ $# -lt 1 ]] || [[ $# -lt 2 ]]; then</span></span><br><span class="line"><span class="string">printf &quot;<span class="variable">$&#123;PURPLE&#125;</span>[Hint]\n&quot;</span></span><br><span class="line"><span class="string">printf &quot;\t Usage: sh nginx-install.sh [version] \n&quot;</span></span><br><span class="line"><span class="string">printf &quot;\t Default: sh nginx-install.sh 1.16.0 \n&quot;</span></span><br><span class="line"><span class="string">printf &quot;\t Example: sh nginx-install.sh 1.16.0 \n&quot;</span></span><br><span class="line"><span class="string">printf &quot;<span class="variable">$&#123;RESET&#125;</span>\n&quot;</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">temp=/opt/nginx</span></span><br><span class="line"><span class="string">version=1.16.0</span></span><br><span class="line"><span class="string">if [[ -n <span class="variable">$1</span> ]]; then</span></span><br><span class="line"><span class="string">version=<span class="variable">$1</span></span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># install info</span></span><br><span class="line"><span class="string">printf &quot;<span class="variable">$&#123;PURPLE&#125;</span>[Install Info]\n&quot;</span></span><br><span class="line"><span class="string">printf &quot;\t version = <span class="variable">$&#123;version&#125;</span>\n&quot;</span></span><br><span class="line"><span class="string">printf &quot;<span class="variable">$&#123;RESET&#125;</span>\n&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">printf &quot;<span class="variable">$&#123;CYAN&#125;</span>&gt;&gt;&gt;&gt; install required libs<span class="variable">$&#123;RESET&#125;</span>\n&quot;</span></span><br><span class="line"><span class="string">yum install -y zlib zlib-devel gcc-c++ libtool openssl openssl-devel pcre</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># download and decompression</span></span><br><span class="line"><span class="string">printf &quot;<span class="variable">$&#123;CYAN&#125;</span>&gt;&gt;&gt;&gt; download nginx<span class="variable">$&#123;RESET&#125;</span>\n&quot;</span></span><br><span class="line"><span class="string">mkdir -p <span class="variable">$&#123;temp&#125;</span></span></span><br><span class="line"><span class="string">curl -o <span class="variable">$&#123;temp&#125;</span>/nginx-<span class="variable">$&#123;version&#125;</span>.tar.gz http://nginx.org/download/nginx-<span class="variable">$&#123;version&#125;</span>.tar.gz</span></span><br><span class="line"><span class="string">tar zxf <span class="variable">$&#123;temp&#125;</span>/nginx-<span class="variable">$&#123;version&#125;</span>.tar.gz -C <span class="variable">$&#123;temp&#125;</span></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># configure and makefile</span></span><br><span class="line"><span class="string">printf &quot;<span class="variable">$&#123;CYAN&#125;</span>&gt;&gt;&gt;&gt; compile nginx<span class="variable">$&#123;RESET&#125;</span>\n&quot;</span></span><br><span class="line"><span class="string">cd <span class="variable">$&#123;temp&#125;</span>/nginx-<span class="variable">$&#123;version&#125;</span></span></span><br><span class="line"><span class="string">./configure --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module --with-pcre</span></span><br><span class="line"><span class="string">make &amp;&amp; make install</span></span><br><span class="line"><span class="string">rm -rf <span class="variable">$&#123;temp&#125;</span></span></span><br><span class="line"><span class="string">cd -</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># setting systemd service</span></span><br><span class="line"><span class="string">printf &quot;<span class="variable">$&#123;CYAN&#125;</span>&gt;&gt;&gt;&gt; set nginx as a systemd service<span class="variable">$&#123;RESET&#125;</span>\n&quot;</span></span><br><span class="line"><span class="string">wget -N https://gitee.com/turnon/linux-tutorial/raw/master/codes/linux/soft/config/nginx/nginx.service -O /usr/lib/systemd/system/nginx.service</span></span><br><span class="line"><span class="string">chmod +x /usr/lib/systemd/system/nginx.service</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># boot nginx</span></span><br><span class="line"><span class="string">printf &quot;<span class="variable">$&#123;CYAN&#125;</span>&gt;&gt;&gt;&gt; start nginx<span class="variable">$&#123;RESET&#125;</span>\n&quot;</span></span><br><span class="line"><span class="string">systemctl enable nginx.service</span></span><br><span class="line"><span class="string">systemctl start nginx.service</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">printf &quot;\n<span class="variable">$&#123;GREEN&#125;</span>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; install nginx end<span class="variable">$&#123;RESET&#125;</span>\n&quot;</span></span><br><span class="line"><span class="string">printf &quot;\n<span class="variable">$&#123;PURPLE&#125;</span>nginx service status: <span class="variable">$&#123;RESET&#125;</span>\n&quot;</span></span><br><span class="line"><span class="string">systemctl status nginx</span></span><br></pre></td></tr></table></figure><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><ul><li>采用编译方式安装 Nginx, 并将其注册为 systemd 服务</li><li>安装路径为：&#x2F;usr&#x2F;local&#x2F;nginx</li><li>默认下载安装 1.16.0 版本</li></ul><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><p>新建一个 <code>nginx-install.sh</code> 的空文件，将上述代码粘贴至文件中。<br>执行如下命令：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">sh</span> nginx-install.sh [version]</span><br></pre></td></tr></table></figure><h1 id="Nginx入门"><a href="#Nginx入门" class="headerlink" title="Nginx入门"></a>Nginx入门</h1><p>nginx 常用到的命令如下：</p><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td><code>nginx -s stop</code></td><td>快速关闭Nginx，可能不保存相关信息，并迅速终止web服务。</td></tr><tr><td><code>nginx -s quit</code></td><td>平稳关闭Nginx，保存相关信息，有安排的结束web服务。</td></tr><tr><td><code>nginx -s reload</code></td><td>因改变了Nginx相关配置，需要重新加载配置而重载。</td></tr><tr><td><code>nginx -s reopen</code></td><td>重新打开日志文件。</td></tr><tr><td><code>nginx -c filename</code></td><td>为 Nginx 指定一个配置文件，来代替缺省的。</td></tr><tr><td><code>nginx -t</code></td><td>不运行，仅仅测试配置文件。nginx 将检查配置文件的语法的正确性，并尝试打开配置文件中所引用到的文件。</td></tr><tr><td><code>nginx -v</code></td><td>显示 nginx 的版本。</td></tr><tr><td><code>nginx -V</code></td><td>显示 nginx 的版本，编译器版本和配置参数。</td></tr></tbody></table><p>为了方便，可以在 nginx 安装目录下新添一个启动批处理文件startup.bat，双击即可运行。内容如下：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">@<span class="attribute">echo</span> <span class="literal">off</span></span><br><span class="line">rem 如果启动前已经启动nginx并记录下pid文件，会kill指定进程</span><br><span class="line">nginx.exe -s stop</span><br><span class="line"></span><br><span class="line">rem 测试配置文件语法正确性</span><br><span class="line">nginx.exe -t -c conf/nginx.conf</span><br><span class="line"></span><br><span class="line">rem 显示版本信息</span><br><span class="line">nginx.exe -v</span><br><span class="line"></span><br><span class="line">rem 按照指定配置去启动nginx</span><br><span class="line">nginx.exe -c conf/nginx.conf</span><br></pre></td></tr></table></figure><p>在 Linux 下，写一个 shell 脚本。</p><h1 id="Nginx实战"><a href="#Nginx实战" class="headerlink" title="Nginx实战"></a>Nginx实战</h1><p>这里举一些例子。</p><h2 id="Http-反向代理"><a href="#Http-反向代理" class="headerlink" title="Http 反向代理"></a>Http 反向代理</h2><p><code>nginx.conf</code> 配置文件如下：</p><p class="note note-info">注：conf/nginx.conf 是 nginx 的默认配置文件。你也可以使用 nginx -c 指定你的配置文件</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#运行用户</span></span><br><span class="line"><span class="comment">#user somebody;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#启动进程,通常设置成和cpu的数量相等</span></span><br><span class="line"><span class="attribute">worker_processes</span>  <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#全局错误日志</span></span><br><span class="line"><span class="attribute">error_log</span>  D:/Tools/nginx-<span class="number">1</span>.<span class="number">10</span>.<span class="number">1</span>/logs/<span class="literal">error</span>.log;</span><br><span class="line"><span class="attribute">error_log</span>  D:/Tools/nginx-<span class="number">1</span>.<span class="number">10</span>.<span class="number">1</span>/logs/<span class="literal">notice</span>.log  <span class="literal">notice</span>;</span><br><span class="line"><span class="attribute">error_log</span>  D:/Tools/nginx-<span class="number">1</span>.<span class="number">10</span>.<span class="number">1</span>/logs/<span class="literal">info</span>.log  <span class="literal">info</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#PID文件，记录当前启动的nginx的进程ID</span></span><br><span class="line"><span class="attribute">pid</span>        D:/Tools/nginx-<span class="number">1</span>.<span class="number">10</span>.<span class="number">1</span>/logs/nginx.pid;</span><br><span class="line"></span><br><span class="line"><span class="comment">#工作模式及连接数上限</span></span><br><span class="line"><span class="section">events</span> &#123;</span><br><span class="line">    <span class="attribute">worker_connections</span> <span class="number">1024</span>;    <span class="comment">#单个后台worker process进程的最大并发链接数</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#设定http服务器，利用它的反向代理功能提供负载均衡支持</span></span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    <span class="comment">#设定mime类型(邮件支持类型),类型由mime.types文件定义</span></span><br><span class="line">    <span class="attribute">include</span>       D:/Tools/nginx-<span class="number">1</span>.<span class="number">10</span>.<span class="number">1</span>/conf/mime.types;</span><br><span class="line">    <span class="attribute">default_type</span>  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#设定日志</span></span><br><span class="line">    <span class="attribute">log_format</span>  main  <span class="string">&#x27;[<span class="variable">$remote_addr</span>] - [<span class="variable">$remote_user</span>] [<span class="variable">$time_local</span>] &quot;<span class="variable">$request</span>&quot; &#x27;</span></span><br><span class="line">                      <span class="string">&#x27;<span class="variable">$status</span> <span class="variable">$body_bytes_sent</span> &quot;<span class="variable">$http_referer</span>&quot; &#x27;</span></span><br><span class="line">                      <span class="string">&#x27;&quot;<span class="variable">$http_user_agent</span>&quot; &quot;<span class="variable">$http_x_forwarded_for</span>&quot;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">access_log</span>    D:/Tools/nginx-<span class="number">1</span>.<span class="number">10</span>.<span class="number">1</span>/logs/access.log main;</span><br><span class="line">    <span class="attribute">rewrite_log</span>     <span class="literal">on</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#sendfile 指令指定 nginx 是否调用 sendfile 函数（zero copy 方式）来输出文件，对于普通应用，</span></span><br><span class="line">    <span class="comment">#必须设为 on,如果用来进行下载等应用磁盘IO重负载应用，可设置为 off，以平衡磁盘与网络I/O处理速度，降低系统的uptime.</span></span><br><span class="line">    <span class="attribute">sendfile</span>        <span class="literal">on</span>;</span><br><span class="line">    <span class="comment">#tcp_nopush     on;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#连接超时时间</span></span><br><span class="line">    <span class="attribute">keepalive_timeout</span>  <span class="number">120</span>;</span><br><span class="line">    <span class="attribute">tcp_nodelay</span>        <span class="literal">on</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#gzip压缩开关</span></span><br><span class="line">    <span class="comment">#gzip  on;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#设定实际的服务器列表</span></span><br><span class="line">    <span class="section">upstream</span> zp_server1&#123;</span><br><span class="line">        <span class="attribute">server</span> <span class="number">127.0.0.1:8089</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#HTTP服务器</span></span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">        <span class="comment">#监听80端口，80端口是知名端口号，用于HTTP协议</span></span><br><span class="line">        <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#定义使用www.xx.com访问</span></span><br><span class="line">        <span class="attribute">server_name</span>  www.helloworld.com;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#首页</span></span><br><span class="line">        <span class="attribute">index</span> index.html</span><br><span class="line"></span><br><span class="line">        <span class="comment">#指向webapp的目录</span></span><br><span class="line">        root D:\01_Workspace\Project\github\zp\SpringNotes\spring-security\spring-shiro\src\main\webapp;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#编码格式</span></span><br><span class="line">        <span class="attribute">charset</span> utf-<span class="number">8</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#代理配置参数</span></span><br><span class="line">        <span class="attribute">proxy_connect_timeout</span> <span class="number">180</span>;</span><br><span class="line">        <span class="attribute">proxy_send_timeout</span> <span class="number">180</span>;</span><br><span class="line">        <span class="attribute">proxy_read_timeout</span> <span class="number">180</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarder-For <span class="variable">$remote_addr</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#反向代理的路径（和upstream绑定），location 后面设置映射的路径</span></span><br><span class="line">        <span class="section">location</span> / &#123;</span><br><span class="line">            <span class="attribute">proxy_pass</span> http://zp_server1;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#静态文件，nginx自己处理</span></span><br><span class="line">        <span class="section">location</span> <span class="regexp">~ ^/(images|javascript|js|css|flash|media|static)/</span> &#123;</span><br><span class="line">            <span class="attribute">root</span> D:\01_Workspace\Project\github\zp\SpringNotes\spring-security\spring-shiro\src\main\webapp\views;</span><br><span class="line">            <span class="comment">#过期30天，静态文件不怎么更新，过期可以设大一点，如果频繁更新，则可以设置得小一点。</span></span><br><span class="line">            <span class="attribute">expires</span> <span class="number">30d</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#设定查看Nginx状态的地址</span></span><br><span class="line">        <span class="section">location</span> /NginxStatus &#123;</span><br><span class="line">            <span class="attribute">stub_status</span>           <span class="literal">on</span>;</span><br><span class="line">            <span class="attribute">access_log</span>            <span class="literal">on</span>;</span><br><span class="line">            <span class="attribute">auth_basic</span>            <span class="string">&quot;NginxStatus&quot;</span>;</span><br><span class="line">            <span class="attribute">auth_basic_user_file</span>  conf/htpasswd;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#禁止访问 .htxxx 文件</span></span><br><span class="line">        <span class="section">location</span> <span class="regexp">~ /\.ht</span> &#123;</span><br><span class="line">            <span class="attribute">deny</span> all;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#错误处理页面（可选择性配置）</span></span><br><span class="line">        <span class="comment">#error_page   404              /404.html;</span></span><br><span class="line">        <span class="comment">#error_page   500 502 503 504  /50x.html;</span></span><br><span class="line">        <span class="comment">#location = /50x.html &#123;</span></span><br><span class="line">        <span class="comment">#    root   html;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置完成后验证步骤如下：</p><ol><li>启动 webapp，注意启动绑定的端口要和 nginx 中的 upstream 设置的端口保持一致。</li><li>更改 host：在 <code>C:\Windows\System32\drivers\etc</code> 目录下的 host 文件中添加一条 DNS 记录(Mac host目录为：<code>/etc/hosts</code>，注意修改是需要权限，可以将文件copy出去再复制回来)</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1 www.helloworld.com</span><br></pre></td></tr></table></figure><ol start="3"><li>启动前文中 startup.bat 的命令</li><li>在浏览器中访问 <a href="http://www.helloworld.com,不出意外,已经可以访问了./">www.helloworld.com，不出意外，已经可以访问了。</a></li></ol><h2 id="Https-反向代理"><a href="#Https-反向代理" class="headerlink" title="Https 反向代理"></a>Https 反向代理</h2><p>一些对安全性要求比较高的站点，可能会使用 HTTPS（一种使用 ssl 通信标准的安全 HTTP 协议）。</p><p>这里不科普 HTTP 协议和 SSL 标准。但是，使用 nginx 配置 https 需要知道几点：</p><ul><li>HTTPS 的固定端口号是 443，不同于 HTTP 的 80 端口</li><li>SSL 标准需要引入安全证书，所以在 nginx.conf 中你需要指定证书和它对应的 key</li></ul><p>其他和 http 反向代理基本一样，只是在 Server 部分配置有些不同。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#HTTP服务器</span></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="comment">#监听443端口。443为知名端口号，主要用于HTTPS协议</span></span><br><span class="line">    <span class="attribute">listen</span>       <span class="number">443</span> ssl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#定义使用www.xx.com访问</span></span><br><span class="line">    <span class="attribute">server_name</span>  www.helloworld.com;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#ssl证书文件位置(常见证书文件格式为：crt/pem)</span></span><br><span class="line">    <span class="attribute">ssl_certificate</span>      cert.pem;</span><br><span class="line">    <span class="comment">#ssl证书key位置</span></span><br><span class="line">    <span class="attribute">ssl_certificate_key</span>  cert.key;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#ssl配置参数（选择性配置）</span></span><br><span class="line">    <span class="attribute">ssl_session_cache</span>    shared:SSL:<span class="number">1m</span>;</span><br><span class="line">    <span class="attribute">ssl_session_timeout</span>  <span class="number">5m</span>;</span><br><span class="line">    <span class="comment">#数字签名，此处使用MD5</span></span><br><span class="line">    <span class="attribute">ssl_ciphers</span>  HIGH:!aNULL:!MD5;</span><br><span class="line">    <span class="attribute">ssl_prefer_server_ciphers</span>  <span class="literal">on</span>;</span><br><span class="line"></span><br><span class="line">    <span class="section">location</span> / &#123;</span><br><span class="line">        <span class="attribute">root</span>   /root;</span><br><span class="line">        <span class="attribute">index</span>  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h2><p>前面的例子中，代理仅仅指向一个服务器。</p><p>但是，网站在实际运营过程中，大部分都是以集群的方式运行，这时需要使用负载均衡来分流。</p><p>nginx 也可以实现简单的负载均衡功能。<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/img/tech/20230803171751.png"><br>假设这样一个应用场景：将应用部署在 192.168.1.11:80、192.168.1.12:80、192.168.1.13:80 三台 linux 环境的服务器上。网站域名叫 <a href="http://www.helloworld.com,公网/">www.helloworld.com，公网</a> IP 为 192.168.1.11。在公网 IP 所在的服务器上部署 nginx，对所有请求做负载均衡处理（下面例子中使用的是加权轮询策略）。</p><p>nginx.conf 配置如下：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">     <span class="comment">#设定mime类型,类型由mime.type文件定义</span></span><br><span class="line">    <span class="attribute">include</span>       /etc/nginx/mime.types;</span><br><span class="line">    <span class="attribute">default_type</span>  application/octet-stream;</span><br><span class="line">    <span class="comment">#设定日志格式</span></span><br><span class="line">    <span class="attribute">access_log</span>    /var/log/nginx/access.log;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#设定负载均衡的服务器列表</span></span><br><span class="line">    <span class="section">upstream</span> load_balance_server &#123;</span><br><span class="line">        <span class="comment">#weigth参数表示权值，权值越高被分配到的几率越大</span></span><br><span class="line">        <span class="attribute">server</span> <span class="number">192.168.1.11:80</span>   weight=<span class="number">5</span>;</span><br><span class="line">        <span class="attribute">server</span> <span class="number">192.168.1.12:80</span>   weight=<span class="number">1</span>;</span><br><span class="line">        <span class="attribute">server</span> <span class="number">192.168.1.13:80</span>   weight=<span class="number">6</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">#HTTP服务器</span></span><br><span class="line">   <span class="section">server</span> &#123;</span><br><span class="line">        <span class="comment">#侦听80端口</span></span><br><span class="line">        <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#定义使用www.xx.com访问</span></span><br><span class="line">        <span class="attribute">server_name</span>  www.helloworld.com;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#对所有请求进行负载均衡请求</span></span><br><span class="line">        <span class="section">location</span> / &#123;</span><br><span class="line">            <span class="attribute">root</span>        /root;                 <span class="comment">#定义服务器的默认网站根目录位置</span></span><br><span class="line">            <span class="attribute">index</span>       index.html index.htm;  <span class="comment">#定义首页索引文件的名称</span></span><br><span class="line">            <span class="attribute">proxy_pass</span>  http://load_balance_server ;<span class="comment">#请求转向load_balance_server 定义的服务器列表</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">#以下是一些反向代理的配置(可选择性配置)</span></span><br><span class="line">            <span class="comment">#proxy_redirect off;</span></span><br><span class="line">            <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">            <span class="comment">#后端的Web服务器可以通过X-Forwarded-For获取用户真实IP</span></span><br><span class="line">            <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$remote_addr</span>;</span><br><span class="line">            <span class="attribute">proxy_connect_timeout</span> <span class="number">90</span>;          <span class="comment">#nginx跟后端服务器连接超时时间(代理连接超时)</span></span><br><span class="line">            <span class="attribute">proxy_send_timeout</span> <span class="number">90</span>;             <span class="comment">#后端服务器数据回传时间(代理发送超时)</span></span><br><span class="line">            <span class="attribute">proxy_read_timeout</span> <span class="number">90</span>;             <span class="comment">#连接成功后，后端服务器响应时间(代理接收超时)</span></span><br><span class="line">            <span class="attribute">proxy_buffer_size</span> <span class="number">4k</span>;              <span class="comment">#设置代理服务器（nginx）保存用户头信息的缓冲区大小</span></span><br><span class="line">            <span class="attribute">proxy_buffers</span> <span class="number">4</span> <span class="number">32k</span>;               <span class="comment">#proxy_buffers缓冲区，网页平均在32k以下的话，这样设置</span></span><br><span class="line">            <span class="attribute">proxy_busy_buffers_size</span> <span class="number">64k</span>;       <span class="comment">#高负荷下缓冲大小（proxy_buffers*2）</span></span><br><span class="line">            <span class="attribute">proxy_temp_file_write_size</span> <span class="number">64k</span>;    <span class="comment">#设定缓存文件夹大小，大于这个值，将从upstream服务器传</span></span><br><span class="line"></span><br><span class="line">            <span class="attribute">client_max_body_size</span> <span class="number">10m</span>;          <span class="comment">#允许客户端请求的最大单文件字节数</span></span><br><span class="line">            <span class="attribute">client_body_buffer_size</span> <span class="number">128k</span>;      <span class="comment">#缓冲区代理缓冲用户端请求的最大字节数</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="负载均衡策略"><a href="#负载均衡策略" class="headerlink" title="负载均衡策略"></a>负载均衡策略</h3><p>Nginx 提供了多种负载均衡策略，让我们来一一了解一下：</p><p>负载均衡策略在各种分布式系统中基本上原理一致，如果要深入了解参考<a href="https://dunwu.github.io/blog/pages/98a1c1/">负载均衡</a>。</p><h4 id="轮询"><a href="#轮询" class="headerlink" title="轮询"></a>轮询</h4><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">upstream</span> bck_testing_01 &#123;</span><br><span class="line">  <span class="comment"># 默认所有服务器权重为 1</span></span><br><span class="line">  <span class="attribute">server</span> <span class="number">192.168.250.220:8080</span></span><br><span class="line">  server <span class="number">192.168.250.221:8080</span></span><br><span class="line">  server <span class="number">192.168.250.222:8080</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="加权轮询"><a href="#加权轮询" class="headerlink" title="加权轮询"></a>加权轮询</h4><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">upstream</span> bck_testing_01 &#123;</span><br><span class="line">  <span class="attribute">server</span> <span class="number">192.168.250.220:8080</span>   weight=<span class="number">3</span></span><br><span class="line">  server <span class="number">192.168.250.221:8080</span>              <span class="comment"># default weight=1</span></span><br><span class="line">  server <span class="number">192.168.250.222:8080</span>              <span class="comment"># default weight=1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="最少连接"><a href="#最少连接" class="headerlink" title="最少连接"></a>最少连接</h4><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">upstream</span> bck_testing_01 &#123;</span><br><span class="line">  least_conn;</span><br><span class="line"></span><br><span class="line">  <span class="comment"># with default weight for all (weight=1)</span></span><br><span class="line">  <span class="attribute">server</span> <span class="number">192.168.250.220:8080</span></span><br><span class="line">  server <span class="number">192.168.250.221:8080</span></span><br><span class="line">  server <span class="number">192.168.250.222:8080</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="加权最少连接"><a href="#加权最少连接" class="headerlink" title="加权最少连接"></a>加权最少连接</h4><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">upstream</span> bck_testing_01 &#123;</span><br><span class="line">  least_conn;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">server</span> <span class="number">192.168.250.220:8080</span>   weight=<span class="number">3</span></span><br><span class="line">  server <span class="number">192.168.250.221:8080</span>              <span class="comment"># default weight=1</span></span><br><span class="line">  server <span class="number">192.168.250.222:8080</span>              <span class="comment"># default weight=1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="IP-Hash"><a href="#IP-Hash" class="headerlink" title="IP Hash"></a>IP Hash</h4><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">upstream</span> bck_testing_01 &#123;</span><br><span class="line">  ip_hash;</span><br><span class="line"></span><br><span class="line">  <span class="comment"># with default weight for all (weight=1)</span></span><br><span class="line">  <span class="attribute">server</span> <span class="number">192.168.250.220:8080</span></span><br><span class="line">  server <span class="number">192.168.250.221:8080</span></span><br><span class="line">  server <span class="number">192.168.250.222:8080</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="普通-Hash"><a href="#普通-Hash" class="headerlink" title="普通 Hash"></a>普通 Hash</h4><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">upstream</span> bck_testing_01 &#123;</span><br><span class="line">  <span class="attribute">hash</span> <span class="variable">$request_uri</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment"># with default weight for all (weight=1)</span></span><br><span class="line">  <span class="attribute">server</span> <span class="number">192.168.250.220:8080</span></span><br><span class="line">  server <span class="number">192.168.250.221:8080</span></span><br><span class="line">  server <span class="number">192.168.250.222:8080</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="网站有多个-webapp-的配置"><a href="#网站有多个-webapp-的配置" class="headerlink" title="网站有多个 webapp 的配置"></a>网站有多个 webapp 的配置</h3><p>当一个网站功能越来越丰富时，往往需要将一些功能相对独立的模块剥离出来，独立维护。这样的话，通常，会有多个 webapp。</p><p>举个例子：假如 <a href="http://www.helloworld.com/">www.helloworld.com</a> 站点有好几个 webapp，finance（金融）、product（产品）、admin（用户中心）。访问这些应用的方式通过上下文(context)来进行区分:</p><p><a href="http://www.helloworld.com/finance/">www.helloworld.com/finance/</a></p><p><a href="http://www.helloworld.com/product/">www.helloworld.com/product/</a></p><p><a href="http://www.helloworld.com/admin/">www.helloworld.com/admin/</a></p><p>我们知道，http 的默认端口号是 80，如果在一台服务器上同时启动这 3 个 webapp 应用，都用 80 端口，肯定是不成的。所以，这三个应用需要分别绑定不同的端口号。</p><p>那么，问题来了，用户在实际访问 <a href="http://www.helloworld.com/">www.helloworld.com</a> 站点时，访问不同 webapp，总不会还带着对应的端口号去访问吧。所以，你再次需要用到反向代理来做处理。</p><p>配置也不难，来看看怎么做吧：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    <span class="comment">#此处省略一些基本配置</span></span><br><span class="line"></span><br><span class="line">    <span class="section">upstream</span> product_server&#123;</span><br><span class="line">        <span class="attribute">server</span> www.helloworld.com:<span class="number">8081</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="section">upstream</span> admin_server&#123;</span><br><span class="line">        <span class="attribute">server</span> www.helloworld.com:<span class="number">8082</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="section">upstream</span> finance_server&#123;</span><br><span class="line">        <span class="attribute">server</span> www.helloworld.com:<span class="number">8083</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">        <span class="comment">#此处省略一些基本配置</span></span><br><span class="line">        <span class="comment">#默认指向product的server</span></span><br><span class="line">        <span class="section">location</span> / &#123;</span><br><span class="line">            <span class="attribute">proxy_pass</span> http://product_server;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="section">location</span> /product/&#123;</span><br><span class="line">            <span class="attribute">proxy_pass</span> http://product_server;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="section">location</span> /admin/ &#123;</span><br><span class="line">            <span class="attribute">proxy_pass</span> http://admin_server;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="section">location</span> /finance/ &#123;</span><br><span class="line">            <span class="attribute">proxy_pass</span> http://finance_server;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="静态站点"><a href="#静态站点" class="headerlink" title="静态站点"></a>静态站点</h3><p>有时候，我们需要配置静态站点(即 html 文件和一堆静态资源)。</p><p>举例来说：如果所有的静态资源都放在了 &#x2F;app&#x2F;dist 目录下，我们只需要在 nginx.conf 中指定首页以及这个站点的 host 即可。</p><p>配置如下：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">worker_processes</span>  <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="section">events</span> &#123;</span><br><span class="line">    <span class="attribute">worker_connections</span>  <span class="number">1024</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    <span class="attribute">include</span>       mime.types;</span><br><span class="line">    <span class="attribute">default_type</span>  application/octet-stream;</span><br><span class="line">    <span class="attribute">sendfile</span>        <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">keepalive_timeout</span>  <span class="number">65</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">gzip</span> <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">gzip_types</span> text/plain application/x-javascript text/css application/xml text/javascript application/javascript image/jpeg image/gif image/png;</span><br><span class="line">    <span class="attribute">gzip_vary</span> <span class="literal">on</span>;</span><br><span class="line"></span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line">        <span class="attribute">server_name</span>  static.zp.cn;</span><br><span class="line"></span><br><span class="line">        <span class="section">location</span> / &#123;</span><br><span class="line">            <span class="attribute">root</span> /app/dist;</span><br><span class="line">            <span class="attribute">index</span> index.html;</span><br><span class="line">            <span class="comment">#转发任何请求到 index.html</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后，添加 HOST：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1 static.zp.cn</span><br></pre></td></tr></table></figure><p>此时，在本地浏览器访问 <code>static.zp.cn</code> ，就可以访问静态站点了。</p><h3 id="搭建文件服务器"><a href="#搭建文件服务器" class="headerlink" title="搭建文件服务器"></a>搭建文件服务器</h3><p>有时候，团队需要归档一些数据或资料，那么文件服务器必不可少。使用 Nginx 可以非常快速便捷的搭建一个简易的文件服务。</p><p>Nginx 中的配置要点：</p><ul><li>将 autoindex 开启可以显示目录，默认不开启。</li><li>将 autoindex_exact_size 开启可以显示文件的大小。</li><li>将 autoindex_localtime 开启可以显示文件的修改时间。</li><li>root 用来设置开放为文件服务的根路径。</li><li>charset 设置为 charset utf-8,gbk;，可以避免中文乱码问题（windows 服务器下设置后，依然乱码，本人暂时没有找到解决方法）。</li></ul><p>一个最简化的配置如下：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">autoindex</span> <span class="literal">on</span>;<span class="comment"># 显示目录</span></span><br><span class="line"><span class="attribute">autoindex_exact_size</span> <span class="literal">on</span>;<span class="comment"># 显示文件大小</span></span><br><span class="line"><span class="attribute">autoindex_localtime</span> <span class="literal">on</span>;<span class="comment"># 显示文件时间</span></span><br><span class="line"></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">charset</span>      utf-<span class="number">8</span>,gbk; <span class="comment"># windows 服务器下设置后，依然乱码，暂时无解</span></span><br><span class="line">    <span class="attribute">listen</span>       <span class="number">9050</span> default_server;</span><br><span class="line">    <span class="attribute">listen</span>       [::]:<span class="number">9050</span> default_server;</span><br><span class="line">    <span class="attribute">server_name</span>  _;</span><br><span class="line">    <span class="attribute">root</span>         /share/fs;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="解决跨域"><a href="#解决跨域" class="headerlink" title="解决跨域"></a>解决跨域</h3><p>web 领域开发中，经常采用前后端分离模式。这种模式下，前端和后端分别是独立的 web 应用程序，例如：后端是 Java 程序，前端是 React 或 Vue 应用。</p><p>各自独立的 web app 在互相访问时，势必存在跨域问题。解决跨域问题一般有两种思路：</p><ol><li>CORS<br>在后端服务器设置 HTTP 响应头，把你需要允许访问的域名加入 Access-Control-Allow-Origin 中。</li><li>jsonp<br>把后端根据请求，构造 json 数据，并返回，前端用 jsonp 跨域。</li></ol><p>这两种思路，本文不展开讨论。</p><p>需要说明的是，nginx 根据第一种思路，也提供了一种解决跨域的解决方案。</p><p>举例：<a href="http://www.helloworld.com/">www.helloworld.com</a> 网站是由一个前端 app ，一个后端 app 组成的。前端端口号为 9000， 后端端口号为 8080。</p><p>前端和后端如果使用 http 进行交互时，请求会被拒绝，因为存在跨域问题。来看看，nginx 是怎么解决的吧：</p><p>首先，在 enable-cors.conf 文件中设置 cors ：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># allow origin list</span></span><br><span class="line"><span class="attribute">set</span> <span class="variable">$ACAO</span> <span class="string">&#x27;*&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># set single origin</span></span><br><span class="line"><span class="attribute">if</span> (<span class="variable">$http_origin</span> <span class="regexp">~* (www.helloworld.com)$)</span> &#123;</span><br><span class="line">  <span class="attribute">set</span> <span class="variable">$ACAO</span> <span class="variable">$http_origin</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="attribute">if</span> (<span class="variable">$cors</span> = <span class="string">&quot;trueget&quot;</span>) &#123;</span><br><span class="line">    <span class="attribute">add_header</span> <span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span> <span class="string">&quot;<span class="variable">$http_origin</span>&quot;</span>;</span><br><span class="line">    <span class="attribute">add_header</span> <span class="string">&#x27;Access-Control-Allow-Credentials&#x27;</span> <span class="string">&#x27;true&#x27;</span>;</span><br><span class="line">    <span class="attribute">add_header</span> <span class="string">&#x27;Access-Control-Allow-Methods&#x27;</span> <span class="string">&#x27;GET, POST, OPTIONS&#x27;</span>;</span><br><span class="line">    <span class="attribute">add_header</span> <span class="string">&#x27;Access-Control-Allow-Headers&#x27;</span> <span class="string">&#x27;DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="attribute">if</span> (<span class="variable">$request_method</span> = <span class="string">&#x27;OPTIONS&#x27;</span>) &#123;</span><br><span class="line">  <span class="attribute">set</span> <span class="variable">$cors</span> <span class="string">&quot;<span class="variable">$&#123;cors&#125;</span>options&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="attribute">if</span> (<span class="variable">$request_method</span> = <span class="string">&#x27;GET&#x27;</span>) &#123;</span><br><span class="line">  <span class="attribute">set</span> <span class="variable">$cors</span> <span class="string">&quot;<span class="variable">$&#123;cors&#125;</span>get&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="attribute">if</span> (<span class="variable">$request_method</span> = <span class="string">&#x27;POST&#x27;</span>) &#123;</span><br><span class="line">  <span class="attribute">set</span> <span class="variable">$cors</span> <span class="string">&quot;<span class="variable">$&#123;cors&#125;</span>post&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来，在你的服务器中 <code>include enable-cors.conf</code> 来引入跨域配置：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ----------------------------------------------------</span></span><br><span class="line"><span class="comment"># 此文件为项目 nginx 配置片段</span></span><br><span class="line"><span class="comment"># 可以直接在 nginx config 中 include（推荐）</span></span><br><span class="line"><span class="comment"># 或者 copy 到现有 nginx 中，自行配置</span></span><br><span class="line"><span class="comment"># www.helloworld.com 域名需配合 dns hosts 进行配置</span></span><br><span class="line"><span class="comment"># 其中，api 开启了 cors，需配合本目录下另一份配置文件</span></span><br><span class="line"><span class="comment"># ----------------------------------------------------</span></span><br><span class="line"><span class="section">upstream</span> front_server&#123;</span><br><span class="line">  <span class="attribute">server</span> www.helloworld.com:<span class="number">9000</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="section">upstream</span> api_server&#123;</span><br><span class="line">  <span class="attribute">server</span> www.helloworld.com:<span class="number">8080</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">  <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line">  <span class="attribute">server_name</span>  www.helloworld.com;</span><br><span class="line"></span><br><span class="line">  <span class="section">location</span> <span class="regexp">~ ^/api/</span> &#123;</span><br><span class="line">    <span class="attribute">include</span> enable-cors.conf;</span><br><span class="line">    <span class="attribute">proxy_pass</span> http://api_server;</span><br><span class="line">    <span class="attribute">rewrite</span> <span class="string">&quot;^/api/(.*)$&quot;</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="section">location</span> <span class="regexp">~ ^/</span> &#123;</span><br><span class="line">    <span class="attribute">proxy_pass</span> http://front_server;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Over!</strong></p><h1 id="参考文档："><a href="#参考文档：" class="headerlink" title="参考文档："></a>参考文档：</h1><ul><li><a href="https://dunwu.github.io/nginx-tutorial/#/nginx-quickstart">https://dunwu.github.io/nginx-tutorial/#/nginx-quickstart</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift实现HTTP服务-Vapor</title>
      <link href="/2023/08/01/server/230801-vapor/"/>
      <url>/2023/08/01/server/230801-vapor/</url>
      
        <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>Vapor是一个使用swift语言编写的Web网络框架，它是跨平台的（mac、Linux），用户可以使用swift语言以及其丰富的第三方库来高效的完成多种网络服务。</p><h1 id="安装-Mac"><a href="#安装-Mac" class="headerlink" title="安装(Mac)"></a>安装(Mac)</h1><p>因为是Swfit语言，所以Mac OS下安装比较友好。</p><h2 id="安装xcode"><a href="#安装xcode" class="headerlink" title="安装xcode"></a>安装xcode</h2><p>AppStore下载安装xcode。<br>你也可以去<a href="https://developer.apple.com/download/all/">Apple Developer下载页面</a>去下载指定版本的xcode。</p><h2 id="安装Homebrew"><a href="#安装Homebrew" class="headerlink" title="安装Homebrew"></a>安装Homebrew</h2><p>参考教程：<a href="/2023/07/27/230727-homebrew">Mac包管理工具-Homebrew</a></p><h2 id="安装Vapor"><a href="#安装Vapor" class="headerlink" title="安装Vapor"></a>安装Vapor</h2><p>执行如下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install vapor</span><br></pre></td></tr></table></figure><h1 id="Vapor命令行工具"><a href="#Vapor命令行工具" class="headerlink" title="Vapor命令行工具"></a>Vapor命令行工具</h1><h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><p>通过如下命令常见新项目：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># vapor new &lt;projectname&gt; [--template]</span><br><span class="line">vapor new hello</span><br></pre></td></tr></table></figure><p>创建的过程其实就是从github上clone一个模板，并可帮你进行简单配置。如果已经比较熟悉的话也可以不适用工具，直接从github上<a href="https://github.com/vapor?q=template&type=&language=">克隆模板</a>开始项目。<br>在Mac系统下，模板可以直接编译运行。</p><h2 id="编译项目"><a href="#编译项目" class="headerlink" title="编译项目"></a>编译项目</h2><p>cd到项目根目录（例如:<code>cd ~/hello</code>）执行如下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vapor build</span><br></pre></td></tr></table></figure><h2 id="运行项目"><a href="#运行项目" class="headerlink" title="运行项目"></a>运行项目</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vapor run </span><br></pre></td></tr></table></figure><p>可通过终端打印的IP地址访问。</p><h2 id="xcode运行与开发"><a href="#xcode运行与开发" class="headerlink" title="xcode运行与开发"></a>xcode运行与开发</h2><p>如果是mac系统，可以直接用xcode来开发Vapor。直接用xcode打开Package.swift文件即可。</p>]]></content>
      
      
      <categories>
          
          <category> 服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Swift </tag>
            
            <tag> Vapor </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>转载黑暗之魂(上)-火的时代与黑暗轮回</title>
      <link href="/2023/07/31/game/230731-dark-souls-1/"/>
      <url>/2023/07/31/game/230731-dark-souls-1/</url>
      
        <content type="html"><![CDATA[<p>首先，赞美太阳！</p><h1 id="初火降临与巨龙时代的终结"><a href="#初火降临与巨龙时代的终结" class="headerlink" title="初火降临与巨龙时代的终结"></a>初火降临与巨龙时代的终结</h1><p>《黑暗之魂》系列有两个重要的核心元素，一是“魂”，二是“火”。</p><p>这个世界本由巨龙所统治，它们早在人类、甚至火焰诞生之前就已经存在。关于这一时期的记载非常稀少，对比理解的话，此时的世界大致相当于盘古开天地前的“混沌状态”，空间中只有灰蒙蒙的迷雾和巨大的石树，巨龙逡巡其间，人类尚未诞生。</p><p class="note note-info">远古时代，世界被巨龙所统治，说统治可能并不确切，因为它们仅仅是永恒的“存在着”，生与死的概念也没有出现。</p><p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731110933.png"></p><p class="note note-info">初代《黑暗之魂》开场时的旁白</p><p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731110840.png"><br>巨龙的统治持续了很长时间，为这些巨大的蜥蜴敲响丧钟的事件是“初火”的降临。火是一种神奇的力量（貌似来自地底深处），它为这个世界带来的光明和黑暗。在黑暗之中，类人生物诞生了，这些拥有智慧的生物在火中发现了魂，而其中最重要的，是“伟大的灵魂（或称王魂，但这是后来的叫法）”与“黑暗之魂”。其中伟大的灵魂分别由太阳王格温（Gwyn the Lord of Sunlight）、墓王尼特（Gravelord Nito）、伊扎里斯的魔女（The Witch of Izalith，又名，老魔女）所获得，黑暗之魂则由 “鬼鬼祟祟的矮人（The Furtive Pygmy）”所获得。(“矮人”，极有可能就是普通的人类，相对应的，在游戏中我们能见到许多人形人脸，但体型却比普通人类大得多的敌人，显示出了两者之间在灵魂与血统上的差异)<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731111143.png" alt="格温"><br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731111206.png" alt="尼特"><br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731111224.png" alt="伊扎里斯"><br>“鬼鬼祟祟的矮人”很像是人类的先祖，“矮”也是个相对的概念，我们在游戏中遇到的相当一部分敌人都明显比人类更高大一些，显示着两者血统（或是灵魂品种）上的差异。不过作为同时出现在初火神话中的四位神祇，“鬼鬼祟祟的矮人”似乎留下的记载最少，对这一段历史的影响似乎也最小。总而言之，“伟大的灵魂”赋予了格温、尼特与伊扎里斯强大如神的力量，他们联合起来向巨龙宣战。与此同时，巨龙中还出了一个叛徒，即“无鳞者希斯（Seath the Scaleless）”。<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731111302.png" alt="无鳞者希斯，龙族的背叛者"><br>希斯是一只患有白化病的巨龙，在巨龙中可能属于总是受到歧视的受气包。龙如其名，希斯没有鳞片，之所以会是如此是先天而生，还是后天被其他巨龙虐待所致就不太好说了。反正，希斯向“伟大三人组”泄露了许多关于巨龙的情报，在决战中，巨龙的厚鳞难敌格温那强大的雷电，伊扎里斯和她的女儿们则用熊熊烈焰烧尽了盘绕在空中的石树，尼特则向巨龙们施放了可怕的毒云。巨龙的时代就此终结，火焰时代开始了。</p><p class="note note-info">格温是几乎所有雷系奇迹的创造者，他的遗产在随后的所有时代都能见到</p><p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731111355.png"></p><h1 id="火焰时代与黑暗的轮回"><a href="#火焰时代与黑暗的轮回" class="headerlink" title="火焰时代与黑暗的轮回"></a>火焰时代与黑暗的轮回</h1><p>巨龙虽然没有被完全消灭，但也只能在文明的边缘扮演个怪兽的角色，并逐渐走向灭绝。与此同时，火焰时代带来了文明的繁荣昌盛，许多强大的王国拔地而起，其中罗德兰（Lordran，初代《黑暗之魂》的主要场景）成为了世界的中心，无鳞者希斯也在格温那里获得了部分伟大的灵魂与公爵的头衔作为奖赏，与格温等人一起在这里成为了世界统治者。</p><p>可惜的是，初火带来的力量没能永久的延续下去，随着时间的推移，火焰的力量开始逐渐消退，格温等人所拥有的“伟大灵魂”的力量也同时开始暗淡。几位在初火战争中拥有了“神”这一头衔的兄弟成为了抵御衰退的第一道防线，可此时伟大的灵魂已经没能聚在一处，其中尼特在战后就回到了巨人的墓园隐居，无鳞者希斯则在太平时期变成了“疯狂科学家”，最终也真的把自己弄疯了。留下来面对缓缓逼近的灭顶之灾的，就只剩下了格温与伊扎里斯。</p><p>睿智的伊扎里斯尝试着用自己所持有的灵魂去创造一个新的初火，但她的实验却变成了一场大悲剧，她创造出的“新初火”失控，将她以及她的女儿和追随者吞噬，变异扭曲成了“混沌的温床（初代《黑暗之魂》中的一个boss，也号称是游戏中所有恶魔的源头）”。她的儿子也因此变成了“持续溃烂的恶魔（另一个boss）”，差不多全家都搭了进去。情势已经十分危急，太阳王格温英勇的选择了牺牲自己，它将自己的世俗力量分配给了自己的子嗣，把部分“伟大灵魂”分配给了四位国王（果然，这四位后来也成了boss），最后自己投身即将熄灭的初火，再次将火焰烧旺，自己则变成了一个空洞的躯壳，在初火之地开始了长达千年的徘徊。<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731111633.png" alt="失败后的魔女，变成了怪物"><br>火焰时代因此被延续了千年，但也带来了某种副作用，那就是不死瘟疫（有观点称营火在格温传火后才出现，这点很重要），其症状就是人死了之后会在营火处复活，听起来是个挺不错的事儿，但是，每一次复活都会夺走一部分患者的神志。在这千年中，火焰与伟大灵魂的力量持续衰弱。不死人开始在文明的各处出现，统治者的应对方式是将他们全都抓起来，投入“不死院”关押起来。初代《黑暗之魂》的主角就是这样的一个不死者，在预言中，他被称为“被选中的不死者（The Chosen Undead）”。</p><p>与依然在逐渐归于熄灭的火焰相对应的，被“矮人”拿走的黑暗之魂的力量却开始不断变强，象征着黑暗时代的步步紧逼。在这里咱有必要仔细说说这个而所谓的“矮人”。目前最被广泛接受的解释是，“矮人”即最初的人类。火与伟大灵魂所代表的是神的力量，火焰时代因此也就成为了神祇统治世界的时代。</p><p>乍看起来，与之相对应的黑暗时代，所代表的就是黑暗之魂与人类的崛起了。但是，玩家社群对这个概念的理解却存在着分歧，在游戏中也一直没能找到确凿的证据。因此，关于黑暗时代的定义一直存在争议。有另外一种意见一直没有完全销声匿迹，那就是如果火焰彻底熄灭进入黑暗时代，那世界就会回到巨龙时代的状态，没有光、没有暗、没有生、没有死，而且这次也不会再有巨树和巨龙，因为都给烧光杀光了。</p><p class="note note-info">“矮人”的近照，其实是大图的局部放大，看起来是不是就是普通的人类？也有玩家认为这更像是普通的行尸（hollow），这种说法也认为行尸是所有人形生物的本来面貌——没有灵魂时的状态</p><p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731113843.png"></p><p>不过在游戏中出现的那些具有神力的NPC大多对黑暗时代充满了恐惧，尽管意见并不统一，但他们希望看到有人再次完成当年格温所做的事情，即重新点燃初火。这也是初代《黑暗之魂》主角的任务。玩家在游戏中要做的就是收集散落在各地的伟大灵魂，并用它们的力量为初火重新加入“燃料”。但尽管使命如此，在最终面对初火时，为这个世界选择未来的权力其实抓在我们的手里。玩家可以选择牺牲自己点燃初火，变成完全没有自主意识的不死者，就像是格温那样。也可以选择转身离开，任初火熄灭，让黑暗时代降临。初代《黑暗之魂》的故事也就到此为止了。</p><p class="note note-info">将自己变成薪，让火焰再次烧旺，这样做的人会获得薪王的称号，格温就是第一代的薪王。我们在游戏中用来强化元素瓶的“贵人骨灰”就是历代薪王的碎片</p><p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731111833.png"><br>但是，无论我们为这个世界选择了一种怎样的未来，对《黑暗之魂2》的影响其实都微乎其微。因为，还有另一种力量影响着这个世界，那就是轮回。对轮回的定义目前有两种主要的解读。</p><p>第一种：世界会在火焰时代和黑暗时代之间循环往复，即便火焰暂时熄灭，也会有“余烬”在世界中得到保留，当时机成熟时，火焰时代会再次降临，终结黑暗时代。</p><p>第二种：世界永远不会进入黑暗时代，因为“余烬”永远不会全部熄灭，添火的尝试也永远不会停息，迟早会有人在最终的抉择中将自己变成薪，走上当年格温所走过的路。</p><p>无论哪一种解读为“真”，都能对《黑暗之魂2》中的世界给出理论框架内的合理解释。而且《黑暗之魂2》所提供的额外信息，则为解释这个世界的运行方式给出了更多的信息。</p><p class="note note-info">之所以现在仍然有许多玩家认为“黑暗时代”不见得是纯人类文明崛起的时代，很大程度上是因为，如果你在初代《黑暗之魂》中选择让黑暗时代降临，恶形恶象的蛇人众会出来恭喜你……</p>![](https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731113932.png)<h1 id="被打断的自然规律与第三条路"><a href="#被打断的自然规律与第三条路" class="headerlink" title="被打断的自然规律与第三条路"></a>被打断的自然规律与第三条路</h1><p>《黑暗之魂2》故事的发生时间与初代作品的间隔并不明确，但考虑到格温的第一次添火让火焰再次延续了1000年左右，因此两次作品大概是个怎么样的时间间隔我们大体也能心里有数。至于在两部作品之间是否经历过黑暗时代，还是世界一直就这样在毁灭的边缘徘徊，目前貌似还搞不清楚。</p><p>但无论如何，《黑暗之魂2》还是在字里行间强调着“轮回”这个概念。事实上，带领世界进入火焰时代的伟大灵魂依然影响着世界，并以它们特有的姿态获得了重生。对比两部作品，我们能够发现很多有趣的细节，昭示着《黑暗之魂2》中的Boss们都对应着初代的哪些人物。比如“被遗忘的罪人”Boss在二周目被击杀后，我们将获得一个“远古魔女的灵魂”。在击杀“公爵的夫雷迪亚”Boss后我们将获得“远古白龙的灵魂”，而在远古时代背叛了龙族的“无鳞者希斯”恰恰是一条白化龙，且后来被葛温赐封为公爵，还变成了一个喜欢制造大怪物的疯狂科学家。</p><p class="note note-info">在触发“被遗忘的醉人”boss战时，我们能够看见一只古怪的虫子从他的眼中爬出，而这只虫子和初代《黑暗之魂》老魔女的虫子形态一模一样</p><p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731114056.png"><br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731112021.png" alt="Old Paledrake Soul，即古老的白龙灵魂"><br>同样的例子还有很多，许多主要boss在二周目或者是添火之后，都会额外掉落一个非常明显的、与前作人物相关的灵魂，用这些灵魂换取的装备也包含了许多和其所影射人物相关的信息。事实上，按照这种互相联系的逻辑观察，我们能够发现每一对儿两相呼应的Boss在特质上都有明显的相似之处。再配上《黑暗之魂2》绿衣的那句话“Once the fire is linked, souls will flourish anew, and all of this will play out again（一旦传火完成，灵魂将再次繁荣，这一次也将再次上演。其实“传火”的说法并不确切，很有可能是中文版翻译时的一次语义流失，后面详述），按照《黑暗之魂》的叙事标准，这简直就算是铁证如山了。<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731112107.png"><br>尽管几个伟大的灵魂在这个世界里再度复苏，《黑暗之魂2》的剧情却没有死抓着过去不放。它在情节上的探索要比前作丰富得多，我们的主角也拥有了更多的“自主意识”。但在开始讲主角的故事以前，咱们还是要先介绍一下《黑暗之魂2》的世界。</p><p>《黑暗之魂2》的故事大多放生在王国多兰古雷格。这个国家的创立者是范德里克与他的哥哥安迪尔，不过有资料显示，两人并非是这个国家的“创建者”而更像是取得了胜利的侵略者。帮助他们实现了征服的是四个“伟大灵魂”的力量。但和此前火焰时代的许多王国一样，当火焰开始消退时，灵魂的力量也开始湮灭，不死诅咒也开始在世界上出现。<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731112135.png" alt="多兰古雷格"><br>与此同时，一个名叫娜珊德拉的女子出现在了国王的面前，凭借着倾国倾城的美貌，她成为了多兰古雷格的王后。面对像野火一样席卷王国的不死诅咒，王后娜珊德拉说服了国王，在海那一边生活的巨人族拥有强大的灵魂，而这些灵魂就是解除不死诅咒的关键（此处存在些许争议，一说不死瘟疫的蔓延出现在侵略巨人族之后）。于是，国王亲自带兵入侵了巨人族的领土，起初的战斗还算顺利，多兰古雷格的精锐部队势如破竹，抓回了许多的巨人俘虏供王国进行灵魂研究。但是，在巨人王的领导下，多兰古雷格的登陆部队被击溃，巨人族的军队更是带着满腔怒火跨海而来，对多兰古雷格展开了长达数代人的围攻。<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731112206.png"><br>虽然多兰古雷格因为一名“无名英雄”干掉了巨人王而取得了最终的胜利，可巨人的反击也将这个曾经辉煌的王国化为了一片废墟（按照另一种说法，不死瘟疫此时才爆发）。国王兄弟想尽了一切办法阻止瘟疫的蔓延，就像当年的格温与伊扎里斯。但是，两人在如何对抗瘟疫方面产生了分歧，分歧的原因（这部分尚存较大争议）大概是，国王不愿意传火，也不愿意让世界进入黑暗时代，他在试图寻找第三条路。而安迪尔至少在这个时候更倾向于使用“传统”的方式拯救这个即将完结的火焰时代，他也因此创造出了“绿衣”，即在游戏中指引主角的防火女。</p><p class="note note-info">“范德里克给他手下最勇敢的士兵配备了最好的铠甲来对抗巨人，然而，却只有很少的人活着回来。”皇家剑士铠甲的装备描述揭示了这场与巨人的战争是多么的惨烈</p>    <p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731112241.png"></p><p class="note note-info">戏中见到的某巨人，许多巨人要比它高上几倍</p>  <p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731114512.png"><br>两兄弟的决裂发生后不久，国王则发现了王后娜珊德拉的真面目：即初代《黑暗之魂》DLC中的boss、深渊之父马努斯的灵魂碎片之一。她所垂涎的是初火和伟大的灵魂，她希望能够熄灭火焰，让世界进入黑暗时代，并由她自己成为黑暗之王。得知了一切的国王带着最后一批忠于自己的部下到不死灵庙躲了起来，试图借此让娜珊德拉无法获取他的戒指（通往初火的关键钥匙）。但此举让国王与自己所拥有的伟大灵魂所分离（一说国王使用了自己的伟大灵魂来组织瘟疫的进一步扩散），因此逐渐变成了行尸。一时间，多兰古雷格的争斗陷入了僵局，安迪尔杳无音信，国王变成了无脑行尸，王后无法接近初火只能干瞪眼。<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731114555.png" alt="失去了灵魂的国王"><br>打破僵局的，就是主角的到来。</p><p>《黑暗之魂2》的主角是一个来自遥远国度的不死者，身负不死诅咒的主角已经在多次“死亡——复活”后忘记了自己的过去，在听说多兰古雷格拥有治愈不死诅咒的方法后，主角决定前往探寻。在这里他遇到了防火女，用一个“人类雕像”从活尸状态恢复。随后遇到的绿衣指引主角去向老王范德里克寻找答案，但她同时告诉主角，以他现在这样虚弱的灵魂根本无法见到老王，必须要先去收集四个伟大的灵魂。</p><p>故事到了这里，其实和初代《黑暗之魂》在大方向的差异就不大了。我们的主角排除万难，最终来到了初火面前。这时一直扮演着寡妇的娜珊德拉以本来面目高调亮相，一看就是一副幕后黑手的样子。在消灭她以后，玩家又被赋予了两个选择，一是将自己当成燃料传火，让火焰时代再次延续一段时间；二是选择离去，让黑暗时代降临。</p><p class="note note-info">从遥远国度来到多兰古雷格的绝世美女……的真面目</p>  <p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731114634.png"><br>如果《黑暗之魂2》的故事就此结束，那么它就其实并没有比初代作品向我们解释更多的问题。然而，“王冠三部曲”DLC出现了，它改变了一切。</p><h1 id="谁犯下了“原罪”"><a href="#谁犯下了“原罪”" class="headerlink" title="谁犯下了“原罪”"></a>谁犯下了“原罪”</h1><p>《黑暗之魂2》包含了“王冠三部曲”的合集被称为“原罪学者”。原罪学者指的其实就是国王的哥哥安迪尔，安迪尔的名字在《黑暗之魂2》本体的内容中反复出现，但直到《黑暗之魂2：原罪学者》发售后，它才终于在游戏中现出了自己的真身。之所以被称为学者，是因为他在与国王弟弟反目以后，就一直在研究关于灵魂以及这个世界轮回的真相。</p><p class="note note-info">原罪学者包含了三部DLC，因此又被称为王冠三部曲，王冠也代表了打破轮回的重要力量</p>  <p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731114843.png"><br>“原罪学者”的称号并不是说安迪尔犯下了什么大错，而是指他的研究课题。这里的原罪另有所指，真正犯下“原罪”的是结束了巨龙统治的太阳王格温，其罪行就是因为惧怕这个世界光明与黑暗的自然规律，强行传火而为火焰时代“续命”。这虽然让光明时代得以延续，但却造成了眼下这种世界不断毁灭的可怕循环。而在这种轮回中付出最大代价的并非是那些拥有伟大灵魂、自称为神的家伙，而是拥有黑暗之魂的人类。</p><p class="note note-info">老国王的哥哥，安迪尔，在与主角见面时已经变成了这个样子。值得一提的是，击杀他玩家什么也不会获得，连魂都拿不到，这背后或许有些隐情。</p> <p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731114919.png"><br>格温的“传火”行为实际上是将火焰与人类所拥有的黑暗之魂连接了起来，将黑暗之魂当成了燃料，而营火就是吸取人类灵魂的一种手段。这也解释了不死诅咒的本质：在这个世界里，没有了灵魂的人无法死去，不断被营火抽走灵魂的人类会逐渐退回他们最初的状态：行尸。在这种解释中，即将熄灭的火焰所象征的并非是世界生命的衰竭，衰竭的仅仅是那些握有伟大灵魂的“神”与“王”的生命与力量。为了维持他们不朽的生命与统治，他们偷走了属于人类的黑暗之魂，同时也偷走了属于人类的黑暗时代。自然的，黑暗在这里也并非天然的等于毁灭或邪恶，而仅仅是对立的另一方出于恐惧与自私所做出的污蔑。</p><p class="note note-info">安迪尔对格温的愤怒溢于言表</p> <p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731115011.png"><br>剧情发展至此，我们不难发现，初代《黑暗之魂》与《黑暗之魂2》本体在结局时给我们提供的两个选择其实都是虚伪的、没有意义的。世界永远不会进入黑暗时代，因为“余烬”永远不会全部熄灭，添火的尝试也永远不会停息，迟早会有人在最终的抉择中将自己变成薪，走上当年格温所走过的路。真正的选择到“原罪学者”中才第一次被赋予了玩家，在这三部DLC中，我们可以收集几位国王的王冠，大功告成以后，戴上王冠的主角就将对不死诅咒免疫，在死亡后也不会逐渐滑向行尸状态。以这份力量为基础，人类终于拥有了消除诅咒的力量，打破传火轮回的可能也第一次被交到了人类的手上。之后，《黑暗之魂3》来了。</p><h1 id="一盒崭新的拼图"><a href="#一盒崭新的拼图" class="headerlink" title="一盒崭新的拼图"></a>一盒崭新的拼图</h1><p>《黑暗之魂3》非常的特别，因为它一改《黑暗之魂2》与初代作品那种显而易见的藕断丝连，在游戏中加入了许多只有老粉丝才能发现的、可疑的新元素，这引出了许多非常重要的问题。</p><h2 id="为什么主角不会变成行尸？"><a href="#为什么主角不会变成行尸？" class="headerlink" title="为什么主角不会变成行尸？"></a>为什么主角不会变成行尸？</h2><p>在前两部作品中，不死诅咒一直是主角最重要的特质。在死亡后失去灵魂，因失去灵魂而滑向行尸状态不仅是游戏的一项核心机制，也是将众多背景联系在一起的节点。但是，在《黑暗之魂3》中，玩家在死亡后并不会进入面目狰狞的不死状态，只是会损失身上的余烬。原则上讲，玩家虽然有机会变成行尸，但却需要一些特殊的手段才能实现。难倒说这个世界已经找到了“治疗”不死瘟疫的办法？从“原罪学者”的结局来看，这完全有可能，无论如何，这背后的秘密，肯定非常的重要。</p><p class="note note-info">角色身上的余火是本作的重要改变，火在这里成了力量的象征，在游戏中怕火的怪物也特别特别多</p><p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731115125.png"></p><h2 id="这么多的龙是哪里来的？"><a href="#这么多的龙是哪里来的？" class="headerlink" title="这么多的龙是哪里来的？"></a>这么多的龙是哪里来的？</h2><p>巨龙的归宿已有定论，在《黑暗之魂2》中，龙很有可能已经完全灭绝，玩家在游戏中遇到的极有可能是安迪尔疯狂实验的产物。尤其是在海德塔上的那只龙，在击杀后会掉落“巨人的灵魂”，看起来很像是安迪尔利用国王的巨人俘虏制造出来的东西。总而言之，龙已经不再存在，但是在《黑暗之魂3》中，我们却能遇到很多的龙。这些龙到底是哪里来的呢？不过若是我们仔细观察就会发现，《黑暗之魂3》中的龙与其说是龙，倒不如说更像是龙的尸体。在龙训练场我们能够发现两只守卫着大门的巨龙，但在将他们击杀后，龙的尸体却不会消失。直到我们进一步探索后才会发现，在两只龙的身体下隐藏着某种黑黢黢的、黏胶状的怪物。这些怪物怕火，且会对玩家施放诅咒，将它们消灭后，龙的尸体也就消失了。这些怪物的来源，肯定和龙的出现紧密相连。</p><p class="note note-info">击杀《黑暗之魂2》海德塔上的龙，会得到一个巨人的灵魂，非常奇怪</p><p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731115226.png"></p><p class="note note-info">在《黑暗之魂3》中，我们却能遇到许许多多的龙</p><p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731115250.png"></p><h2 id="《黑暗之魂3》故事发生的时间"><a href="#《黑暗之魂3》故事发生的时间" class="headerlink" title="《黑暗之魂3》故事发生的时间"></a>《黑暗之魂3》故事发生的时间</h2><p>只有一点我们能够基本确定，那就是《黑暗之魂3》的故事发生在初代《黑暗之魂》之后，因为这显然是个已经经历过多次传火的世界，而第一个传火的人是格温，其他的都是后来者。但是，游戏中出现的大量与初代作品相关的地点与道具却让我们很难确定本作的故事是否发生在《黑暗之魂2》之前。</p><p><strong>转载自：<a href="https://zhuanlan.zhihu.com/p/20788280">https://zhuanlan.zhihu.com/p/20788280</a></strong></p>]]></content>
      
      
      <categories>
          
          <category> 游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 黑暗之魂 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>转载黑暗之魂(中)-错乱的时空</title>
      <link href="/2023/07/31/game/230731-dark-souls-2/"/>
      <url>/2023/07/31/game/230731-dark-souls-2/</url>
      
        <content type="html"><![CDATA[<h1 id="导读"><a href="#导读" class="headerlink" title="导读"></a>导读</h1><p>《黑暗之魂3》的主旋律依然是传火。与前两部作品中的世界略有不同的是，到了我们操作主角开始探索时，这个世界已经因为多次续命而变得疲惫而残破，人们必须采取比以前更加极端的手段才有可能让轮回继续下去。而这种方法，就是将此前几位已经完成过一次传火任务的“薪王”们聚到一起，发挥余热，再烧一把。在游戏中，这个不人道的事儿要由”探王者“来干，也就是我们的主角。<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731115125.png" alt="身上的余火是“Ashen One”的重要特点"><br>虽然故事还是那个老调，可《黑暗之魂3》具体的剧情故事却要比两部前作更加难以理解。这一方面是因为至关重要的DLC我们还一部都没有见到，就好比在玩一份缺少了不少碎片拼图，在许多关键的地方总是会出现大片的空白，让人感到困惑不已。另一方面，则是因为本作的地理存在严重的错乱现象，游戏的开场CG也暗示：在这个虚弱的世界里，许多在空间上距离非常遥远的王国被突然间“捏合”在了一起。这样的背景给我们带来了许多互相之间看起来根本原本毫不相干的事件与人物，将他们联系起来困难异常，有时甚至全然不可能。</p><p>支持“空间错乱说”的证据有很多，比如深渊监视者所在的法伦要塞地区，地表的环境大致上怎么看都是降水过分充沛的沼泽地带，而在深渊监视者们互相砍杀的大厅地下则是卡萨斯的地下墓地。这里的“卡萨斯”在文献中有所提及，是一个盛产弯刀战士与火魔法的“沙漠”国度。在沼泽地下面有一个沙漠国度的坟墓，除了地理上的神奇异动将他们拼接在了一起，我们恐怕再难找到更加合理的解释了。</p><p>在更早期的游戏中其实还存在一个更加直白的例子，那就是这个关键道具：洛斯里克小环旗，下图是它的文字描述。<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731155659.png" alt="道具“小环旗”英文描述"><br>上文中有一句话的意思是指高墙出现，阻断了通往不死街的道路。在观察一番之后我们能够发现，这里的高墙指的就是洛斯里克城的墙壁，这里的用词是appear（出现），暗指墙不是一点一点修起来，而是在很短的时间内出现的。所以，这也在一定程度上支持本我们前面所提到的地理错乱理论。</p><p>这个小环旗的描述还引出了一个在解读“魂”系列文献问题上的非常典型的案例，我感觉有必要在这里稍微谈及，以匡正一些玩家在分析本作剧情时的态度。这个问题本身其实很简单，那就是中英日三个版本的作品在描述上的差异。这种差异自然是在翻译过程中发生的语义延展和流失造成的。比如在“洛斯里克小环旗”的描述中，中文版的内容就是这样的：<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731155818.png" alt="道具“小环旗”中文描述"><br>这里直白的用了筑起的字眼，可比较之后我们却能发现，日文版的描述则和英文版差不多，都没有墙是“筑”起来的意思，而更像是突然出现的。在这里，显然是中文版的翻译工作出了疏漏，如果我们基于这样的描述来解释本作，那么肯定就是要被带到沟里去了。</p><p>类似的事情还有几处，往往都是一个多出来的额外义项就能彻底颠覆我们对一大串事件的理解。通常来说，现在玩家们大多把日文版的文字内容作为最终的解释方案，而在本文的撰写中，我们也将采用这一原则。</p><p>当然，所谓时空错乱说也很有可能会被随后发售的DLC戏剧性的推翻，但至少在现有的资料环境下看来，这是可能性极高的一种解释。</p><p>游戏中最为重要的出场人物和故事节点毫无疑问是Boss们，根据他们之间的联系，我们大致可以将其分为来自四个“时空”的A、B、C三个部分，下面是具体的划分情况：</p><ul><li>A部分：巨人尤姆、教宗沙力万、冷冽谷的舞娘、冷冽谷的波尔多、幽邃主教群、奥德里奇、咒蚀大树。</li><li>B部分：深渊监视者、结晶老者、霸王沃尼尔、妖王欧斯罗艾斯、猎龙铠甲、洛斯里克王子。</li><li>C部分：灰烬审判者&amp;英雄古达、薪王们的化身、主角、远古飞龙、无名王者、老恶魔王。</li></ul><p>在三个部分中，C大致相当于贯通另外两个时空的主线，作为具有总结性意义的第三部作品，其中的一些人物与事件也还具有对前作（尤其是初代作品）进行补完的作用。</p><p>而AB之间虽说不是全然没有联系，但在目前的文献中还无法整理出足够完备的逻辑发展关系将他们连接在一起。所以，为了叙事上的清晰有序，在这里我决定将他们分割包围，各个击破。</p><p>我们还可以把ABC每一个部分都当做一个相对独立的故事，咱们不妨就先从A队开始讲起吧。</p><h1 id="罪业之都的陨落"><a href="#罪业之都的陨落" class="headerlink" title="罪业之都的陨落"></a>罪业之都的陨落</h1><p>至少在A队这个部分里，巨人尤姆的故事是最先发生的，这也是我们在本作中能够明确时间先后的少数几个事件之一。巨人尤姆的“巨人”之名不是盖的，在《黑暗之魂》系列中有许多身材巨大的角色存在，一般来讲，这都是拥有“神族”血统的证据，而即便在这些大块头中，也没有哪个角色的身高能够达到尤姆的水平。唯一能和他在身高上较量一番的角色大概只有《黑暗之魂2》中的“巨人王”和“最后的巨人”，所以，我们有理由相信，“巨人尤姆（Yhorm the Giant）”名字中的巨人二字所描述的并非是一种特征，而是其血统。</p><p>不过值得一提的是，这种说法也不是没有漏洞，其中最大的矛盾之处就在于尤姆有一张多少能够看清轮廓的脸和两只放射着红光的眼睛。而在此前，《黑暗之魂》系列中所出现的巨人形象脸部都只是一个非常有个性的、漆黑的大洞。所以，我们也不能排除尤姆是个体型格外庞大的“神族”，或者是“杂交”巨人的可能。</p><p class="note note-info">游戏中以前出现的巨人，脸部都是一个大洞，这或许说明尤姆并非是血统上的巨人，但也可能是FromSoftware临时改了设定……</p><p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731160151.png"><br>谈一谈尤姆的血统很重要，因为身为“外来者”而招致的不信任与尤姆一生的悲剧息息相关。在文献中我们能够得知，尤姆是某个远古征服者的后代，在前篇关于《黑暗之魂2》的故事解析中我们曾经提到过，巨人的国度在远方，且曾经报复性的侵略过《黑暗之魂2》中的多兰古雷格，不知道尤姆是否和当年几乎毁掉了多兰古雷格的巨人王是否有血缘关系。</p><p>巨人尤姆是罪业之都（之前八成不叫这个名字）的领袖，而非统治者。领袖（Leader）和统治者（Ruler）这两个词语间有着微妙的不同，因为前者暗示着其统治的合法性，隐含着被推举的意味。文献中的解释也很好的支持了这种理论：</p><p>从这里我们能够发现，尤姆的祖先八成征服过罪业之都，并统治了这里一段时间，但等到尤姆活跃的时代，这种统治关系肯定已经不复存在了。罪业之都在《黑暗之魂》的世界里是个非常奇特的国度，因为这里的不少房间、门窗与走廊的大小都只能容普通人类体型的生物通过，且路边的雕塑也多为人类大小的形象。种种迹象表明，这是一座普通的、没有神族血统的人类为主体居民的城市，在尤姆接过领导权之前，这里的统治者极有可能也是身材与我们相仿的人类，而非像是地上的诸多王国那样，由身材巨大的“神族”说了算。</p><p>在这样的背景之下，尤姆之所以能成为领袖，显然并不是因为父死子继的王位传承，更有可能民众们看上了他身为巨人的战斗力（或许还有智慧，虽然巨人看起来都有些憨傻，但寿命却八成比人类长得多）。尤姆也全心全意的回报着跟随自己的人类，上面关于化身成剑和盾的描述我们大致可以理解成：鞠躬尽瘁、身先士卒、死而后已。</p><p>然而，即便强大如尤姆，依然也还是有自己无法保护好的东西。文献中显示，有一天，尤姆失去了自己想要保护的人，他也因此弃用了自己的大盾。这里极有可能隐藏着一段悲惨的爱情&#x2F;友情&#x2F;亲情故事，虽然在现阶段的故事资料中对它的描述就止步于此，不过这却是绝佳的DLC素材。<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731160312.png"><br>让异族成为领导者的做法在这个国家里并没有得到所有人的拥护，反对的声音不仅存在，还很有可能在某段特定时间里发展成了实际的颠覆行为。面对此举，尤姆拿出了名为“风暴管束者”的大剑，交给了对自己不信任的人们。这是一把专门用来消灭巨人的武器（在面对尤姆的Boss战中，正是这东西把尤姆变成了本作中最容易对付的一个boss），相当于赋予了人民弹劾自己的权力。有鉴于尤姆并没有被国民赶下台，他的高姿态在当时显然产生了一定的效果。</p><p class="note note-info">游戏中我们可以获得这把剑，其特殊技很是炫酷，但在对付尤姆以外的敌人时伤害就太不好看了</p><p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731160349.png"><br>可好景不长，神秘的“罪业之火”开始出现在国家的边境，并逐渐席卷全国，最终成为了类似“不死瘟疫”那样的大灾难。</p><p>这里有必要谈一下这个讨厌的“罪业之火”，提到“罪业之火”的物品在游戏中一共有5个，分别是武器艾莲诺拉、武器石像鬼灯火枪、道具薪王柴薪、道具罪业余烬以及魔法罪业火焰，然而穷尽《黑暗之魂3》所有这些相关的解释，我们依然无法搞清楚这究竟是个啥。只知道这是一种不会熄灭的火，会夺取人的心智，可能和深渊有关，也有可能和伊扎里斯的魔女创造的混乱之火有关。罪业之火泛滥的契机倒是有提及了一点点，解释主要在艾莲诺拉的描述中，现列举如下：</p><p>总而言之，这事儿现在还说不清楚，反正情况就是，尤姆的国家邪火泛滥了。<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731160450.png" alt="罪业之都废墟"><br>尤姆大概是把这场灾难归咎于初火将熄，他提出的解决方案也很直来直去，即亲自传火，以救百姓于倒悬。然而，他的选择却带来了灾难性的后果，当他将自己点燃的一瞬间，无数的火焰从天而降，反而将他的子民几乎全都烧死了。</p><p>我们不妨想象一下此时尤姆的心情：他是一名被推举出来的领袖，在上任后，他兢兢业业的想要让自己配得上追随者的信任，他不仅愿意、且最终切实的为这一目的供奉出了自己的生命（从前两作的情况来看，强如神性第一的格温都给烧没了，此时的尤姆没理由相信自己能够幸存下来）。然而，在初火焚身的瞬间，他眼中所看到的却是自己想要拯救的子民反而因为自己的牺牲而痛苦的死去，作为一名将自己的一生都奉献给了人民的领袖，很难想象还会有什么其他更加悲惨的结局了。</p><p>这就是尤姆在《黑暗之魂3》中的背景故事，等我们见到他的时候，尤姆已经因为对薪王的呼唤再次苏醒，当年子民们被烧焦的尸体就堆在他的王座两边。此时的尤姆如果没有变疯或者退化成一具空壳，那他的心情也肯定是痛苦的、悔恨的、心灰意冷的。而这肯定也是他不肯再去当柴的原因。</p><p class="note note-info">尤姆王座两旁的尸体，从体型上看全是人类</p><p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731160521.png"><br>最后杀死他的是我们控制的主角，因为我们需要把尤姆再烧上一次，以为这个苟延残喘的世界续命。但是，早在很久以前，尤姆就已经为自己的结局做好了打算，他的另一把“风暴管束者“就交给了自己当年的一位好友，即洋葱骑士。两人具体约定了什么我们现在还没完搞得特别清楚，我个人认为比较靠谱的说法有两种，一种是尤姆要求洋葱在自己未能承担起领导人民的责任时，由他来将自己杀死。另一种则是尤姆要求洋葱自己一旦复活，就由他来给自己一个痛快，以避免再次承受烈火焚身的痛苦。从现在的资料情况来看，两者都有一定的道理，无论如何，如果你之前支线任务做得没错，那么洋葱骑士就会出现在尤姆的王座之前，与你一起终结这位老友。</p><p class="note note-info">洋葱骑士，肩膀上扛着尤姆给出的另一把大剑</p><p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731160614.png"></p><h1 id="教宗与神明吞噬者"><a href="#教宗与神明吞噬者" class="headerlink" title="教宗与神明吞噬者"></a>教宗与神明吞噬者</h1><p>按照故事的逻辑线索来看，下一个登场的薪王就是神明吞噬者奥德里奇，然而，在这套故事的中，真正的主角其实是教宗沙力万，他也是唯一一个能和尤姆产生联系的角色。</p><p>尤姆活跃的年代要比沙力万早上许多，并不是同个时代的人，两者之间至少隔着一次传火那么久。但是，有文献指出，在还是一个小小助祭的时候，年轻的沙力万发现了罪业之都，也发现了罪业之火。文献中的原话如下：<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731160702.png" alt="教宗沙力万的右手剑"><br>这里说得并不十分清楚，不过大抵也就是两种解释，第一种也就是字面上的意义，我们可以理解成这次发现促使了其信仰的崩塌，点燃了他的野心；第二种解释则认为沙力万通过罪业之火获得了某种力量，而他利用这种力量逐渐在教廷中爬上了高位，并最终实现了最后的篡权。这里的一种解释的开放性更好，第二种解释则拥有更坚实的证据，其一就是沙力万的双剑中，有一把就蕴含着罪业之火，显然他找到了某种方法来对其加以利用。其次，我们在文献中还能了解到，罪业之火具有“吞噬心灵”的能力，而沙力万在成为教宗后赐给“外征骑士”们的戒指就有类似的效果（把人变疯，乃至于最终变成野兽，Boss冷冽谷的波尔多就是其中第一个典型）。<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731160738.png" alt="冷冽谷的波尔多"><br>无论如何，在发现了罪业之都与罪业之火之后，沙力万开始在冷冽谷的宗教圈子里奋力的往上爬，并最终成为了教宗。不过在这之前，冷冽谷还发生了另外一件大事，那就是奥德里奇的出现。</p><p>奥德里奇与沙力万的出身差不太多，在最开始的时候都仅仅是教会中的中低级神职人员，大抵就是我们在游戏中干掉的那些体型各异的紫袍差相仿佛。他本可能就这样终此一生，但是，不知是天赋异禀还是后天锻炼，奥德里奇逐渐开发出了吃人的能力和习惯。具体这吃人惨案是怎么发生的文献没有说清楚，在这里，我们大可脑补出一段在偏远地区的村落中村民不断消失于教堂内的经典恐怖片来。</p><p class="note note-info">《黑暗之魂》最新的漫画中出现了奥德里奇还是人类时的形象，这张有些看不出来，但在漫画中奥德里奇肤色黝黑，有些像是现实世界中的南美裔或美洲黑人的肤色。</p><p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731160842.png"><br>话说回来，吃人的方式和技巧并不重要，重要的是奥德里奇吃人的后果。在《黑暗之魂》的世界里吃人可不仅仅锻炼一下牙口与胃口那么简单，就像是我们在游戏中干掉怪物可以获得魂那样，奥德里奇也因为吃人逐渐逐渐强大起来，等到教会发现时，他已经变成了一个巨大的、仿佛流动着的沥青之海的怪物（在开场CG中能够看到），他吃人的事情可能也是在此时在最终暴露。</p><p class="note note-info">然而，在《黑暗之魂3》奥德里奇就变成了这一摊沥青</p><p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731160908.png"><br>无论在怎样的一个世代，“神职人员吃人后变成了怪物”这种事情肯定都是天大的丑闻。在奥德里奇刚刚变身的那个时代，格温血脉的力量显然还非常强大（很有可能格温德林还是整个地区实质上的领导人）。奥德里奇很快被控制，按常理论，此时的奥德里奇应该被消灭才对，可在《黑暗之魂》这个能量欠费的世界里，草率的把像是奥德里奇这样强大的生物处死无疑是对世界寿命的极大浪费。因此，他们并没有杀死奥德里奇，而是把他关在了幽邃教堂的地下。最后把他当成柴火，烧了一把。</p><p>奥德里奇本该就此躺在棺材里等待着被二次利用，但由于教宗沙力万的出现，奥德里奇的饕餮事业反而柳暗花明出了第二春。我们前面已经提到过了，沙力万和奥德里奇一样，最开始不过是庞大教会系统中一颗不起眼的螺丝钉。可虽然文献中没有明确的提及，但我们有理由相信，沙力万在发现了罪业之都之后，凭借着一系列的努力在教会中逐渐爬上了一个相对较高的位置，很有可能是一个距离教宗仅存一步之遥的位置。<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731160954.png" alt="教宗沙力万"><br>从本作文献的暗示与以往作品的经验中我们能够发现，教宗这个相当于统治者的称号在此前的文献中并不存在，尤其是在“第一家庭”的势力范围内，格温的血脉才握有真正的权力。明白了这一点，接下来发生的事情也就很好理解了：沙力万胸中燃烧着猛烈的野心之火，而“最后的神祇”（文献中有明确提到这个称号）、在系列第一部作品中曾经就出场的（初代《黑暗之魂》隐藏Boss）、暗月之剑的领袖、主神格温的幼子格温德林就成为了他通往最高权力的路上横亘着的最后一处障碍。<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731161040.png" alt="格温德林"><br>沙力万本人或许没有弑神的能力，但在钟声响起、薪王们从坟茔中爬出来后，他却忽然有了一个强大的盟友，那就是奥德里奇。简而言之（这里也只能简而言之），沙力万和奥德里奇因为某种契机开始了合作，他们一起来到了亚诺尔隆德。在这里，他们通过某种手段困住了格温德林，奥德里奇也开始了他的吞神伟业。照理说格温德林不该这么不济才对，可这是一个火焰将熄、且世界已经虚弱到必须想办法烧煤渣才能续命的时代，格温一族那与火焰直接相关的力量肯定也因此受到了影响。在游戏中，一位自称是格温德林妹妹的龙女就表示：格温德林病了，然后失踪了，这里的病因很有可能就是火焰将熄导致其能量不足，也大概就是因为如此，才给了沙力万和奥德里奇两个人以可乘之机。</p><p class="note note-info">这段描述中说明了格温德林已经是尚留在亚诺尔隆德的最后神祇</p><p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731161108.png"><br>吞噬神明是个比较漫长的过程，事实上，尽管没有明说，但游戏中的许多文献都在强烈的暗示，就在主角抵达奥德里奇面前时，奥德里奇也依然处于“进餐中”的状态（比如奥德里奇的上半身还完全保持着格温德林的形象），甚至格温德林在我们与Boss进行战斗时都可能还没有死透。可不管奥德里奇这边吃没吃完，沙力万那头的政变行为倒是进行的干净利落。暗月之剑被摧毁，他也终于自封为教宗，成为了整个冷冽谷地区实质上的统治者（本作的地理概念错乱得厉害，但冷冽谷应该是包含了伊鲁席尔、亚诺尔隆德等重要城市的广大区域）。</p><p class="note note-info">我一直以为，奥德里奇在Boss战中的形象其实是嘴里含着半个没吃完的格温德林……</p><p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731161206.png"><br>与政治上的地震相伴的还有宗教改革。无论之前这个教会信奉的是什么，他们现在都有了新的信仰对象，那就是奥德里奇。奥德里奇这时除了“吞神者”之外还获得了另一个称号“幽邃圣徒（Saint of the Deep）”，这个具有浓郁宗教气息的头衔也标志着他成为了教廷新的信仰中心。沙力万的这番折腾并非仅仅是把奥德里奇推上了神坛，因为种种迹象都表明，奥德里奇根本就不怎么管事，所以，虽然上头还有个太上皇，但我们完全可以认定，沙力万才是真正在挥舞权柄的那个人。</p><p>另外两个Boss“咒蚀大树”和“幽邃主教群”也在这样的新格局中出场了。</p><p>沙力万实现了自己的野心，可这依然是一个盘桓在毁灭边缘的世界，不死瘟疫又一次成为了一个大麻烦。为了解决越来越多开始变成行尸的不死人，作为“终极解决方案”的不死聚落出现了。不死人放在哪个时代都会是一个非常棘手的问题，你不能简简单单的把它们埋掉了事，因为不死人会不断的复活，轻轻松松的就能从坟里爬出来。在初代《黑暗之魂》中，处理不死人的方法是弄个不死院永久性的圈禁，在《黑暗之魂3》中，沙力万的解决方案则更加极端，完全是字面意义上的“挫骨扬灰”。</p><p>没错，把不死人连骨头都研磨成灰，将其中最凶残的一些不死人的骨灰埋在神树之下镇压，这就是沙力万的解决方案。所谓神树的来头不详，但在吸收了太多太多怨念&#x2F;诅咒&#x2F;不死者的魂之后，曾经壮丽雄伟的古树在我们到来时已经变成了某种可怕的东西。<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731161309.png" alt="咒蚀大树"><br>不死聚落的直接控制着是教会派来的“教师”们，全都是女性（就是在游戏中能使用“火焰熊抱”的那些大块头），除了日常的行政管理以外，这些人还有另外一项任务，就是给奥德里奇准备食物。教会地下那条非常秘密的通道连接着“活祭品之路”，在这里，人类被源源不断的送往幽邃教堂（不知道其中是否也有不死人），也就是奥德里奇之前被关押的地方。这揭露了一段可怕的历史，那就是在教会第一次抓住奥德里奇之后，为了保证他能够成功传火，还不惜牺牲了大量的生命把他进一步的“催肥”了一段时间……</p><p>奥德里奇的传火行动应该就是在幽邃教堂的地下完成的，因为这里在我们到达时还放置着他的衣冠冢，以大主教罗耶斯（Archdeacon Royace）为首的“深邃主教团”还守卫者奥德里奇空空的棺材。奥德里奇一共有三位大主教，其中最有趣的一位当属大主教麦克唐纳。这是个壮硕的大胖子，也是游戏中吞神契约的缔约者。不过有趣的是，我们在游戏中只能找到他的尸体（倒是不耽误订立契约），其尸体所在的位置非常隐秘，不仅需要打破一面幻影墙壁才能找到，其附近还有两只明显是由沙力万的戒指兽化而来的野兽。这简直就相当于在凶案现场的尸体旁边发现了属于沙力万的凶器，这也从一个侧面暗示了沙力万可能正在谋划着对付奥德里奇及其支持者。虽然现阶段的证据还有些不足，但我个人非常倾向于相信这种解读。</p><p class="note note-info">大主教麦克唐纳实在很像是被教宗暗杀的</p><p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731161404.png"></p><h1 id="冷冽谷的舞娘"><a href="#冷冽谷的舞娘" class="headerlink" title="冷冽谷的舞娘"></a>冷冽谷的舞娘</h1><p>沙力万显然是一只政治动物，他在上台后进行了一系列“去格温化”的政治清洗，尽管唯一能够找到的格温之子正在奥德里奇嘴里嚼着，可为了斩草除根，沙力万很快就扩大了他的打击面与打击的纵深。在这个过程中，无疑有许多和前“第一家庭”沾亲带故的人因此丧命，而其中最重要的一个，就是“冷冽谷的舞娘”。</p><p>舞娘的“神族”血统毋庸置疑，她那修长、站起来肯定高大得吓人的体型是最直观的证据，除此以外还有许多提到她神性的文献，且直白的说明了她是格温的直系血亲（在杀死她时，胜利的说明会变成“HEIR OF FIRE DESTROYED”即“火焰的继承人被消灭”）。真正的问题是她究竟是谁的后代，目前最靠谱的推测是舞娘是初代作品中出现的、格温唯一的女儿格维艾薇雅的后代。在这个问题上我们目前还只有旁证，即舞娘的灵魂可以换到奇迹“阳光愈疗”，在其道具描述中明确的说明了这是格维艾薇雅的奇迹。</p><p>游戏中并没有提及舞娘的名字，但“舞娘”这个身份却是沙力万所强加给她的。让曾经的皇室血脉以这种卑微的方式为自己服务有着很强的象征意义，这就像是把前王室成员送去植物园卖门票差不多，既能对传统势力造成心理上的打击，又能进一步的巩固自己身为教宗的权威。沙力万的打击也并没有止步于此，为了永绝后患，她又把舞娘以外征骑士的身份派出国境。同时赐予了她“教宗之眼系列戒指”（一套两个）。这对戒指除了能提高一点儿战斗效能之外，还有一种阴险的功能，那就是会让佩戴者在战斗中变得疯狂而悍不畏死，即便佩戴者没有因此战死，戒指也会最终一点一点的将佩戴者变成野兽。我们在游戏中会遇到几名外征骑士，其中身为Boss的“冷冽谷的波尔多”就是其中“兽化”程度很高的一个。从文献的情况来看，波尔多很有可能在沙力万政变以前就是舞娘的追随者，也与舞娘被一起贬斥，从此在舞娘身边寸步不离，直至被教宗的戒指变成了野兽。在这里，不知道DLC中会不会赏我们一段爱情故事。</p><p><strong>转载自：<a href="https://zhuanlan.zhihu.com/p/22029546">https://zhuanlan.zhihu.com/p/22029546</a></strong></p>]]></content>
      
      
      <categories>
          
          <category> 游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 黑暗之魂 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>转载黑暗之魂(下)-火焰的终结</title>
      <link href="/2023/07/31/game/230731-dark-souls-3/"/>
      <url>/2023/07/31/game/230731-dark-souls-3/</url>
      
        <content type="html"><![CDATA[<h1 id="双王子"><a href="#双王子" class="headerlink" title="双王子"></a>双王子</h1><p>洛斯里克这边的故事既复杂又简单，说它复杂是因为它涉及到许多血缘关系，说它简单则是因为本作在这个方面留给我们的文献量很少。</p><p>简而言之，洛斯里克名义上的国王是欧斯罗艾斯，他有三个儿子，老大洛里安，老二洛斯里克（与其国名相同），老三奥斯洛特。洛斯里克王室拥有格温一族的血脉，来源就是王后——很有可能是格维艾薇雅或是她的某一个女儿。对于阳光的信仰在洛斯里克影响范围很广，王国最普通的骑士也能使用雷电系的奇迹来强化自己的武器，足见猎龙文化在洛斯里克是多么的根深蒂固。最初的洛斯里克人民不仅痴迷于猎龙，还驯服了其中的许多亚种（drake）。洛斯里克的龙骑士也在很长一段时间里成为了整个世界最让人畏惧的武装力量。当然，和几乎所有在游戏中我们接触到的古老文明一样，等到玩家踏足洛斯里克时，曾经强大的龙骑士已经仅仅存在于传说之中，像是运动一般的猎龙活动也早已经失落了许多年。</p><p>不过格温的血统还在是在很大程度上影响着这个王国，比如对传火这件事情，整个洛斯里克王族就非常的执着，一直希望能够生出一个足够强大的继承人来完成这项伟业。大王子洛里安被寄予厚望，他也长成了一名威风凛凛的骑士，据说其曾在单挑中击杀过一名恶魔王子（洛里安巨剑上那永不熄灭的火焰也是因此而来）。但因未知原因，洛里安却并不适合进行传火，相比之下，身体孱弱的二王子洛斯里克却不知为什么被认定为了绝佳的人选（这里面貌似有什么奇妙的原因，目前我还没有找到什么坚实的解释）。</p><p>然而，在某个“学者”的怂恿下，洛斯里克王族的传火希望二王子却拒绝承担起薪王的责任。关于这件事情，魔法“灵魂奔流”的道具描述中有非常直接的解释：首席学者在洛斯里克与大书库刚刚兴起时赋予的法术，首席学者质疑传火，据说他成为了王子的私人导师。</p><p class="note note-info">这里提到了“首席学者”</p><p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731161924.png"><br>没有直接的证据表明这个“学者”就是《黑暗之魂2》中的安迪尔，但有一个细节却让认为安迪尔亲自说服了兄弟俩拒绝传火的说法非常流行。这个细节在咱们的上一篇文章中已经提过了，那就是在我们在《黑暗之魂2：原罪学者》干掉安迪尔后什么战利品也拿不到，就连魂都没有，这或许证明了我们在《黑暗之魂2：原罪学者》中干掉的安迪尔仅仅是一个幻影。再考虑到本作那已经被反复证明了的埋暗线的功夫，我个人更加倾向于相信，曾经在王庭中说服了王子们的学者就是安迪尔本尊。</p><p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731162016.png" alt="我们的老朋友“原罪学者”，变成了树桩子的安迪尔"><br>拒绝传火后的王子兄弟隐居了起来，按照文献中的说法是：躲在远处等待火焰的熄灭。似乎他们对黑暗时代的到来充满了期待，或者干脆就是不在乎世界会变成什么样子。不过洛斯里克王室的其他成员却显然并不认同王子们的想法，对于传火大任的执着依然还在，（很有可能跟是）以老国王欧斯洛艾斯为首的皇族绝望的进行了一次“难以言说（unspeakable）”的极端行动。unspeakable通常用来描述的都是让人难以启齿的恶劣行径（比如纳粹用人类脂肪做肥皂），具体在这里他们干了什么，目前大体上有两种解释：</p><p>其一是皇族诅咒了王子。在王子的Boss战中，这位曾经威风凛凛的王子失明、失聪且失去了正常行走的能力，只能在地面上跪行。文献显示，这是洛里安为了分担弟弟的某种诅咒所致。从这里出发，我们可以推测出“传火派”采用了某种威胁手段，要么是想要威胁王子的生命，要么是想要控制他，或是干脆发出了某种恶毒的诅咒，诅咒可能是发向洛斯里克，也可能是发向他的哥哥洛里安，无论如何，其根本目的自然是胁迫洛斯里克同意传火。</p><p class="note note-info">曾经威风凛凛的王子，现在已经足不能行</p><p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731162055.png"><br>另一种解释则和妖王的研究与三皇子奥斯洛特有关，尽管文献中有明确的记载奥斯洛特为王后亲生，但同样的文献还指出了王后在生下了这个孩子之后就失踪了，因此也更加为这个孩子与妖王的行为笼罩上了一层迷雾。就像是我们前面提到的那样，妖王欧斯洛艾斯是洛斯里克名义上的国王，之所以加上一个“名义上”的修饰，是因为在我们来到洛斯里克的那个时代，妖王要么是给两个王子篡夺了实权，要么是自己选择了隐居。因为在我们见到他时，其身体状况与周遭的境遇都很难让人相信这样的一个怪物还正在执掌着国家的权柄。</p><p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731162200.png" alt="妖王欧斯洛艾斯"><br>这种解释认为，这个“难以描述”的行径是指教皇欧斯洛艾斯进行的实验，而这个实验的结果就是三王子奥斯洛特。许多朋友可能并不记得游戏里还有这么个三王子，这情有可原，因为奥斯洛特在游戏中并没有真正出现，提到他的文献也少之又少。这个角色与玩家们最直接的互动在游戏中只有一处，那就是在对抗妖王的Boss战中，我们能够听到背景里婴儿的哭声，欧斯洛艾斯的手臂还有一个虚抱着婴儿的动作。事实上，由于我们无法确定哭声的来源，这个哭声究竟是奥斯洛特的声音还是干脆就是BGM的一部分还不太好说。不过有另一项被外国朋友们发掘出来的证据则让人有些汗毛发炸，那就是在游戏的里，有一个没有被使用的、听起来很像是婴儿被用力摔在地上的声音，以及部分关于婴儿模型的文件，而在妖王战的后面，他还真就有一个“摔孩子”的动作。</p><p>能够用来解释在妖王身上发生了什么事情的资料少之又少，能够确定的事情大概就是下面这些：首先，在我们见到欧斯洛艾斯时，这位洛斯里克的国王已经疯了，疯狂的原因则是沉迷于探索当年白龙西斯留下来的研究笔记。妖王进行这项研究的目的还有待进一步的确定，但不外乎是一：为了获得永生的奥秘；或者是二：为了创造出合适的后嗣来进行传火。我个人更倾向于第二种解释，因为这能够与洛斯里克王室“执迷于传火”的描述相呼应，又能解释为什么具有格温直系血脉的皇后会在第三个孩子出生后失踪（出走？），还能对应上“不可言说的手段”与“传火的诅咒”，根本动机则是老大和老二拒绝传火。</p><p>王族没有实现他们的传火伟业，王子洛斯里克虽然也有个薪王的名号，但却是几位薪王中唯一没有被烧过的“鲜柴”。</p><p>洛斯里克王室这条故事线索还有一条神秘的支脉，那就是猎龙铠甲与操纵着它的“朝圣者蝴蝶”。猎龙铠甲本身的故事不多，有人曾经认为这就是翁斯坦当年穿过的东西，但由于我们能在后面将提到的古龙顶里找到翁斯坦的遗物，因此这种说法的可靠程度并不很高。我们之前就曾经提到过，洛斯里克作为一个国家在早年有非常深厚的猎龙传统，这副盔甲可能就是当年某一位猎龙勇士的财产，它的主人或许曾经非常有名，甚至可能直接在翁斯坦或传说中的太阳神长子麾下效果力，但到了现在，这副盔甲就真的只是一幅盔甲而已。<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731162319.png" alt="猎龙铠甲"><br>盔甲是具空壳，而在实际操作着盔甲的朝圣者蝴蝶则更加的神秘，关于它的来源与动机在游戏中的直接解释完全没有，唯一出现的词条也仅仅是提到了个名字而已。在这里我决定还是不要乱开脑洞，因为那不过也就是在上百种推测中再加上一种没有证据支持也、很有可能也没什么价值的推测罢了。至于谜底，还是那句老话，咱们DLC见。</p><p>总而言之，洛斯里克王室的这条线索虽然与初代神族有许多千丝万缕的联系，但与前面沙力万与尤姆的线索相比，在内容上其实相对比较单薄，还有许多关键的节点急需补足。两位王子身上存在很多谜团，这大概也是随后DLC需要重点解释的地方。</p><p class="note note-info">朝圣者蝴蝶，游戏中最为神秘的生物之一</p><p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731162355.png"></p><h1 id="深渊，讳莫如深"><a href="#深渊，讳莫如深" class="headerlink" title="深渊，讳莫如深"></a>深渊，讳莫如深</h1><p>深渊监视者是《黑暗之魂3》最具特色的几个Boss之一，因为他们是一群人，而不是一个人。深渊监视者&#x2F;法兰不死队的渊源可以上溯到初代《黑暗之魂》的四骑士之一——深渊行者亚尔特留斯。从许多与年代相关的线索我们能够看出，深渊监视者的出现应该是在初代《黑暗之魂》中玩家传火后的某个时期内，一群不死者聚集在了一起，以亚尔特留斯为精神领袖，组成了名为“深渊监视者”的组织。</p><p class="note note-info">初代老Boss深渊行者亚尔特留斯</p><p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731162530.png"><br>和亚尔特留斯一样，深渊监视者也和狼有着千丝万缕的联系，在这个方面，文献中有非常直接的描述。</p><p>狼血赋予的诡异而凶猛的战术再加上反复复活的能力，深渊监视者当然很快就成为了一支令人畏惧的强大武装。虽然眼下的文献中还没有提及，但我们也可以比较肯定的推测，深渊监视者们更像是是一个自认为超脱于世俗权力的宗教军事组织，就像现实世界中的那些骑士团，他们在与任何世俗力量交涉时都拥有平等（他们自己甚至可能会认为是高出一头）的话语权。深渊监视者的根本宗旨就是消灭一切深渊力量，如果发现某地出现了被深渊感染的征兆，那么即使消灭深渊意味着完全的毁灭一个国家，对于他们来说也在所不惜。</p><p class="note note-info">在深渊监视者的身上，还留有一些深渊行者的影子</p><p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731162607.png" alt="街舞队"><br>与深渊监视者联系最紧密的Boss有两个，咱们先说霸王沃尼尔。</p><p>沃尼尔曾经是沙漠之国卡萨斯的国王，在他的一生中征服了许多个国家，因此后来被冠上了“霸王”的名头。这是个残忍的征服者，关于他的文字描述中大多都包含了关于他各种暴行的描写。然而，他被深渊监视者盯上并不是因为其暴君的身份，而是因为在某种契机之下（文献中尚无具体的描写），他险些跌入了深渊。说险些跌入可能不太确切，因为这次“事故”并没有结束，在我们见到沃尼尔的时候，他其实还在挣扎中，在他的身后和身下是无尽的黑暗，仅仅凭借着手上的一把圣剑和三个从祭司的尸体上搜刮来的手镯，他才能勉力避免被完全拉入深渊，尴尬得与深渊展开了旷日持久的对峙。在Boss战中当我们将三个手镯都摧毁后，沃尼尔才在惨叫中被彻底的拖入了深渊。</p><p class="note note-info">霸王沃尼尔，在与我们战斗时其实正在挣扎着想避免滑入深渊</p><p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731162705.png" alt="霸王沃尼尔"><br>从文献的暗示中我们能够得知，深渊监视者很有可能已经在其消灭深渊的净化活动中毁灭了好几个国家，而他们毁灭的最后一个国家很可能就是卡萨斯。至于为啥深渊监视者没有亲手摧毁沃尼尔眼下还不得而知，但从游戏中我们能够发现，深渊监视者最后的驻扎地下面正好就是霸王沃尼尔所在的“卡萨斯地下墓地”，昭示着这两者之间在此前至少有过间接性的接触。在这里监视深渊，也正好扣合了“深渊监视者”的名字。</p><p>深渊监视者们作为一个整体也完成了一次传火，虽然没有文献支持，但我个人认为这次传火正好发生在他们摧毁了卡萨斯、还没有亲手消灭霸王沃尼尔之间的时间段里。在面对消灭深渊的使命与拯救世界的抉择中，深渊监视者们选择了后者，成为了薪王，并和传火后的巨人尤姆和奥德里奇一样陷入了沉睡。</p><p>在深渊监视者漫长的沉睡中，深渊的力量悄悄潜入，污染了他们的狼血，等到钟声响起，呼唤薪王们再次传火拯救世界时，醒来的深渊监视者发现自己中间出现了被深渊污染的个体。深渊监视者们本能的对这些被污染的战友发起了攻击，但由于他们都是不死者（监视者们的神志恐怕也不很清楚），无论是净化者还是被净化的对象都无法战胜对方，这场战斗最终不可避免的变成了一场无休无止的杀戮轮回，就像这场Boss战前的动画中所显示的那样。</p><p class="note note-info">深渊监视者盔甲后的披风，这些向上蔓延的黑色痕迹很像是代表了深渊的侵袭</p><p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731162755.png"><br>值得一提的是，在祭祀场最开始就能遇到的NPC之一“劝退哥”霍克伍德就曾经是深渊监视者的一员，当玩家见到他时他已经成为了一名逃兵。从他的“精神气质”来看，他应该是在深渊监视者传火之前就已经脱离了组织。</p><p>另一个与深渊监视者直接相关的Boss是结晶老者，关于这个Boss的文献资料也非常有限，但他的身份信息却十分重要，最具代表性的信息如下。<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731162843.png"><br>这段描述中英文版本的差异挺有意思，如果把英文版中包含的信息也加入进来的话，这段描述大概就会变成这个样子：（双胞胎）结晶老者（法师）是大书库里贤者（学者）们的老师，随后孪生子的其中一位成为了不死队的同盟。</p><p>这段信息的重要之处主要有两处，一是说明了结晶（法师）是双生子，确定了大书库内的老者与活祭品之路深处的那个Boss的血缘关系。第二，这段信息将法伦不死队与洛斯里克联系在了一起，也是我们在文献中能够找到的这两者之间唯一的联系。这一点极其重要，因为它还给本作几位薪王的传火时间提供了参考。因为这里提到了结晶老者和深渊监视者们的结盟，而这必然发生在后者传火之前（在传火后，深渊监视者们就只顾着睡觉和互相砍杀了）。</p><p>虽然这里还缺少铁证，可由此我们还可以根据旁证与逻辑推测，不死队的传火事件也很有可能应该发生在双王子拒绝传火并开始隐居之前，在那时洛斯里克的王室还没有陷入绝望，甚至二王子都可能还没有降生，这个世界还有其他人可以传火，王室还没有显得那么焦急。</p><p>这其实也可以被视为洛斯里克王朝与深渊监视者曾经同属于一个时代的证据，因为文献中曾经提到来自大书库的学者怂恿王子拒绝传火，又提到了同样来自大书库的结晶老者之一成为了深渊监视者的盟友。大书库在这里成为了一个事件枢纽，将两个组织联系在了一起。如果我们能够假定大书库的学者们在是否传火这件事情上的态度是一致的，那么与深渊监视者“结盟”的那位结晶老者的目的是什么就显得非常可疑了。<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731162915.png" alt="结晶老者"><br>因此，在进一步的证据出现以前，我个人更倾向于相信深渊监视者曾经与洛斯里克王朝共同活跃过一段时间，而在深渊监视者传火以后，接力棒才传到了洛斯里克王室的手里。</p><h1 id="著名的“无名王者”"><a href="#著名的“无名王者”" class="headerlink" title="著名的“无名王者”"></a>著名的“无名王者”</h1><p>对于深入研究过初代作品剧情故事的玩家们来说，敲定无名王者的身份几乎就是一拍脑门的事情，这也是《黑暗之魂3》剧情故事最没有争议的一部分内容。在这里我们也为了方便省去推论的过程，直接讲结论。</p><p class="note note-info">对比初代《黑暗之魂》中的神秘雕像，无名之王这身份可算是铁证如山了</p><p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731163011.png"><br>无名王者是格温的长子，在与巨龙的战争中，和许多主神的儿子一样，这位长子也被誉为战神，曾经在巨龙战争中立下了汗马功劳，但后来又因为某种原因投入了巨龙一方。格温因此大为震怒，不仅剥夺了他的神格，还在历史中消去了它的名字。在初代作品中我们能够找到相关的记载，还能在场景中找到一些距离格温塑像距离很近的塑像残骸，都揭示了这样一个角色的存在。</p><p>《黑暗之魂3》的文献中并没有明确的提及无名之王的名讳，不过从《黑暗之魂2》中我们却能发现一些端倪，即法汉套装里的描述：<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731163053.png" alt="描述中将法汉（Faraam）称为了战神"><br>这不是个特别坚实的证据，但如果此战神就是彼战神，那看来无名之王&#x2F;格温长子就是叫法汉了。</p><p>无名王者无疑是个重要的角色，但其在《黑暗之魂3》的剧情故事中所处的地位却及其独立而割裂，虽然和初代《黑暗之魂》有着千丝万缕的联系，却跟本作中其他的重大事件基本没什么关系，也不是通关流程中必须要挑战的Boss。作为格温的长子，他几乎见证了整个火焰时代的历史，在奇迹“风暴落雷”中提及了他在背叛之后驯服了一条风暴之龙，从此一生征战不息。但他究竟是在哪里战斗、与谁战斗，在游戏中又完全没有提及，从这个角度来看，其出现的意义大概就仅仅是FromSofware在收束一条布置了多年的暗线而已。</p><p>还有另外一个相对比较重要的角色随着无名王者的线索再次出现，那就是初代作品中曾经出场的翁斯坦。翁斯坦是初代《黑暗之魂》中的一个Boss（我们在游戏中击杀的是他的幻影），曾经是格温长子（或者是格温）的首席骑士。在格温的长子离开之后，他也离开了罗德兰，他的去向在前作中有所提及，那就是前去寻找这位失踪了的王子。不过他去追寻王子的具体目的是什么却至今都是众说纷纭。有人说翁斯坦去追寻无名之王是为了继续为他效命，也有人说翁斯坦的目的是亲手消灭这个背弃了格温的叛徒。</p><p class="note note-info">玩过初代《黑暗之魂》的玩家应该很熟悉这个角色，其真实去向也是当年的一大谜团</p><p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731163131.png"><br>事实上，翁斯坦的初衷究竟为何，虽然我们在《黑暗之魂3》的古龙顶中能够找到他的遗物。可从目前能够看到的线索中也依然难以有个定论。许多欧美玩家们认为翁斯坦是追随无名之王而到达的古龙顶，其中一项重要的证据就是奇迹“金石之誓”中将翁斯坦描述成了无名之王“faithful” first knight。Faithful在这里可以理解成忠诚，那翁斯坦自然就是加入了无名之王的反旗之下。不过在我进一步深究之后却发现，日文版中同样的道具描述中却无论如何都提炼不出忠诚的说法，中文版的翻译更是大相径庭。所以说到底，翁斯坦的结局目前依然是个谜，而在追杀说与追随说以外还有一种变龙说，即翁斯坦变成了无名之王胯下的龙，结合本作的故事背景来看，这种多少有点儿gay的解释并非完全没有可能……<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731163218.png" alt="很可惜，日文的描述中并没有这个“faithful”"></p><h1 id="恶魔穷途"><a href="#恶魔穷途" class="headerlink" title="恶魔穷途"></a>恶魔穷途</h1><p>老恶魔王则是另外一条松散的支线。《黑暗之魂》世界里恶魔的起源我们在前一篇文章中已经提到过：伊扎里斯的魔女想要靠自己所拥有的“伟大灵魂”重塑初火，结果实验失败，弄出来了一团“混沌之火”，恶魔就这样在这团邪火中诞生。</p><p>但等到了这个时代，所有火焰的力量都已经十分虚弱，就连老魔女的混沌之火也不例外，恶魔们也因此和格温家族的成员们一样成为了这个孱弱世界的夕阳种族。这一代的恶魔显得格外困顿，我们在城墙上见到的准Boss“离群的恶魔”是如此的狼狈而虚弱，Boss老恶魔王也显得苍老而绝望。尤其是老恶魔王，在它的身边我们能够见到许许多多其他恶魔的尸体堆积在一起，不知是在进行某种形式的葬礼，还是暗示着恶魔们已经需要靠互相吞噬才能生存下来。在对老恶魔王的Boss战中，如果我们将它的生命值扣至最后一小部分，它会疲惫的趴在地上等待着我们给它最后一击，让我有种说不出来的复杂情绪。<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731163310.png" alt="老恶魔王的旁边有许多恶魔的尸体"><br>总而言之，这个世界已经奄奄一息，就连恶魔也不例外。</p><p>接下来，就是英雄古达了。</p><h1 id="英雄古达"><a href="#英雄古达" class="headerlink" title="英雄古达"></a>英雄古达</h1><p>英雄古达是我个人最不喜欢的一个Boss，因为在他的身上，FromSoftware又一次玩起了时空穿越的把戏。我之所以不喜欢这样的设计是因为它既不新颖，对这类事件进行的解释又很难纳入我们队剧情的一般性解释，在不创造某些晦涩难懂的新规则的情况下，任何对其进行合理解释的尝试都变得不大可能了。这样的事情在《黑暗之魂2》里已经出现过了一次，即那在文献中据说被“无名英雄”击杀的巨人之王怎么看都像是从巨人之梦穿越回过去的主角。这事儿目前还是个历史悬案，英雄古达也是如此。<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731163418.png" alt="黑夜里、红眼睛的是英雄古达"><br>不过在这里，咱们最好还是要把最基本的情节讲一下。英雄古达所对应的其实是两个Boss，其中之一即是我们在刚刚进入游戏时所遭遇的“灰烬审判者”，其二则是我们在后期遇到的“英雄古达”（可以不打）。按照文献中的说法，古达的身份原本和我们一样，是要负责传火的，但却不知什么原因迟到了。等他来到传火祭祀场时，最后的火焰也已经熄灭。古达在这个祭祀场被“无名英雄（又是你！）”击败，变成了“灰烬审判者”，就此成为了新传火者们所必须克服的第一道试炼。这里就形成了一个外祖母悖论，如果是我们在游戏后期击败了古达，那么我们在游戏最开始的时候所遭遇的灰烬审判者又是怎么到达祭祀场前的呢？<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731163452.png" alt="白天的这个是灰烬审判者"><br>……我不知道诸君是怎么想的，反正这大概是我接触到过的第三十个关于外祖母悖论的故事，实在是兴奋不起来了。</p><p>与古达一起出现的无火祭祀场也一样迷雾重重，这也让游戏中出现了两个建筑格局上一模一样的祭祀场。关于这个祭祀场、防火女以及英雄古达的故事目前网上有很多有趣的推论，但这些推论都存在一个共同的问题，那就是都没有充足的文献来支持其最关键的情节，即大多是纯粹的脑补或命题作文，援引哪一种解释我都感觉不太合适。所以，在这里我们还是要来一句在本文中已经说了很多次的那句话——等DLC吧。</p><p>最后剩下的故事线索就是我们的主角和最终Boss薪王的化身。</p><h1 id="无火之灰"><a href="#无火之灰" class="headerlink" title="无火之灰"></a>无火之灰</h1><p>除了英雄古达以外，主角的身份是另一个让我特别抓耳挠腮的部分。</p><p>《黑暗之魂3》的主角被称为“无火之灰（Ashen One或unkindled）”，这一点和初代《黑暗之魂》的“被选中的不死人（Chosen Undead）”和“被诅咒的不死人（Bearer of the Curse）”有着明显的区别。这一区别也引出了许多问题，其中最重要的一个就是，主角到底是谁，或者说，主角到底是个啥。<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731163606.png" alt="身上的余火是本作主角与此前主角们最大的区别"><br>前两作中关于不死人的设定其实比较明确，他们是会逐渐失去人性的不死者，虽然能够反复复活，但却会在这个过程中逐渐丧失神志，最后变成不再拥有自主意识的行尸，这个规则通用于游戏中所有背负着不死诅咒的人类。从这个角度来看，《黑暗之魂》的前两部作品至少在这个方面很得体。真正的问题在于，《黑暗之魂3》和前两作不同，这次主角在死亡之后不会再进入活尸状态（我们可以把这理解成人与无脑行尸之间的一种过渡状态）。单游戏开场CG中的独白又很明确的把主角称为了不死人（原话是：“Nameless accursed undead, unfit even to be cinder.”）。等于是直接改变了这个世界的运行规则。</p><p>难道是《黑暗之魂2》的主角终于像我们之前推测的那样“治愈”了这个世界的不死诅咒？如果真的是这样的话，那我们在游戏中见到的成群行尸又无法解释了。所以很显然这并不是正确的答案。非要往这个方向上贴的话，那我们就只能认为三代的主角和二代的主角其实是同一个人，这个家伙在二代的时候还没有选择传火，而是自己带着皇冠的力量不知道做了点儿啥，反正最后还是死到了棺材里。这种说法有太多没有文献支持的空白，所以还是脑洞而已。</p><p>宫崎英高在一次采访中提到了“无火之灰”究竟代表的是什么，这也是我在这里唯一愿意使用的来自于游戏之外的证据参考。按照他的说法：无火之灰是那些曾经尝试过传火，但却最终失败了的不死人（说白了，就是那些没通关的玩家们ORZ）。这条信息说明了很多东西，但还是没有回答出我们上面提出的问题，那就是为什么主角不会变成活尸。</p><p>对比三部作品的设计我们大抵可以得出以下的结论：</p><p>不死是一种状态，其标志就是身上是否拥有黑暗印记（黑暗之环）。黑暗印记就像是个大洞，不死人在每次死亡时人性就会从这个洞口流出（极有可能是成为了营火的燃料），并因此最终人性丧尽，变成疯狂的活尸（hollow）。</p><p>造成困惑的核心问题是：前两部给作品带给我们的印象是所有所有的不死人都天然的拥有黑暗印记，因为在前两部作品的世界里并不存在身上没有不死印记的不死人。而在《黑暗之魂3》中这一点却被颠覆了，因为我们所扮演的恰恰就是这样的一个角色——虽然不死，但身上却没有洞（我们可以在游戏中给自己“开洞”，这个问题等下再说）。这就让我们的主角变成另一个拥有不死的力量还不会因此变成活尸的超人，所谓不死诅咒在这里已经完全不像是诅咒了。另一处与前作的矛盾就是，在《黑暗之魂3》中，我们的主角所追求的是火，而不再是魂，余烬代替了人性，柴薪代替了“伟大的灵魂”成为了传火所必须的燃料。<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731163748.png" alt="黑暗印记"></p><p>解释这个问题就必须理解不死诅咒的本质，而这在玩家社群里还没有出现一个能够拿出足够证据的答案。在这里我打算沿用我们在上一篇文章中的推（阴谋）论，即不死诅咒其实是格温一族的阴谋，不死人是用来延续他们这个火之时代的道具，营火的燃料就是不死人的人性。不过就像我们前面说过的那样，这种解释依然缺少文献的支持，或许在将来的三部DLC中，还会有一个像是安迪尔的人出现，最后给我们一个盖棺定论的答案吧。</p><p>简而言之，我还没弄太明白，且从我个人的研究情况来看，如果别人说他弄明白了，我也感觉非常的怀疑。</p><p>但无论如何，我们的主角还是像前两作的主角那样，一路过关斩将，杀到了最终Boss的面前。本作的最终Boss的“薪王们的化身”，顾名思义，他就像是一个所有过往薪王的集合体。在Boss战的第一阶段，他将使用所有玩家可能选择的战斗方式与我们作战，这显然是代表了此前所有曾经成功传火的玩家们；在游戏的第二阶段，他的战斗方式又会变得和当年格温的战斗方式差不多，代表的自然是就是最初进行传火。在我们将他击败之后，根据我们之前在游戏中有意无意间选择的进程，会进入四个不同的结局。</p><h1 id="传火结局"><a href="#传火结局" class="headerlink" title="传火结局"></a>传火结局</h1><p>顾名思义，这个结局的目的就是让火焰时代延续下去，每一代都有这个结局。不过这次的传火结局却不太一样，因为当我们进入了这个结局后，虚弱的火焰仅仅只能附着在主角的身上，燃烧得一点也不猛烈。相比之下，文献中记载的格温的初次传火则强烈得多，同时将几名随他而来的骑士烧成了灰烬，就连我们在初代《黑暗之魂》中的传火也远比这要猛烈得多。</p><p class="note note-info">本作结局中，即便是我们选择传火，火也很微弱</p><p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731163840.png"></p><p class="note note-info">初代作品中，传火后，整个场景都会被火焰吞噬，最终变成一道耀目的白热</p><p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731163923.png"><br>不仅如此，这次主角在传火后还会疲惫的在这个最终（最初）的营火前坐下，镜头同时拉远，一个巨大的黑暗印记出现在天空之上。尽管尚无证据支持，但我个人为人，这很有可能是在暗示这次的传火并没有成功，或者说，靠传火来为火焰时代续命的行为已经不再有意义。火焰时代能否会因此延续，实在是难说的很。</p><h1 id="灭火结局"><a href="#灭火结局" class="headerlink" title="灭火结局"></a>灭火结局</h1><p>这个结局也很好理解，实现的方式是在进入最终决战前将防火女的眼睛交给防火女。在这个结局中，防火女会出现在营火前，将最后的火焰拿在手中，任其慢慢熄灭，这标志着火焰时代的结束，黑暗时代的降临，画面也会逐渐变暗，黑暗会一点点将主角和防火女笼罩。不过在防火女还会提到，星星之火在这个黑暗的世界中也将再次出现。考虑到黑暗时代又被称为人类时代，防火女的话在这里是指人类心中也将永存神性，还是指火焰时代还会再次降临，就看各位自己的理解了。<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731164028.png"></p><h1 id="抢火结局"><a href="#抢火结局" class="headerlink" title="抢火结局"></a>抢火结局</h1><p>这其实算是个隐藏结局，在主机版中并没有相对应的成就，我个人更倾向于把这个叫做疯子结局。这个结局的达成方式与前一个结局差不多，但玩家需要在防火女拿起火焰之后突然发动攻击，将其砍倒在地，把火焰抢在自己的手里。在这个结局中，在开场CG中负责独白的老太太还会再次出来吐槽一下，其说辞的大意是“无火之灰终究会被火焰所吸引”，说白了就是看见了这么大一块“余烬”，人类的贪婪本性占据了上风，居然会像疯子一样想要把它据为己有。在这个结局的最后，玩家活把火焰捧高举在空中，双膝跪倒，就像是《指环王》中的格鲁拿着至尊王戒一样，就差嘴里没来一句“My precious”了。<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731164102.png" alt="抢走初火"><br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731164129.png" alt="My precious……"><br>至于这个结局中世界的下场……既然我们将火放入了道具栏，那世界肯定还是要陷入黑暗的吧。</p><h1 id="篡夺结局"><a href="#篡夺结局" class="headerlink" title="篡夺结局"></a>篡夺结局</h1><p>这个结局的实现方式最为复杂，绝大多数玩家在第一次通关时都见不到这个结局。实现这个结局需要达成一系列的支线故事，首先，我们要在不死聚落将隆道尔的朝圣者收入麾下（背锅侠）。然后在祭祀场里找到他，他会提出为主角“引出真正的力量”，即是给主角打上黑暗印记（能升一级，但愚总觉得这是个骗局）。这样一来，“无火之灰”就变成了和前两代主角一样的不死人，在死亡后身体会开始发生变异，开始滑向活尸的状态。在朝圣者那里主角共可以升级5次，即获得5个黑暗印记，随后朝圣者会死亡，另一个名为隆道尔的尤利娅的角色会出现。此后玩家还必须完成一系列的任务，总之最后我们身上的黑暗印记会达到8个。在这个过程中，玩家不能以任何手段治疗黑暗印记，否则都会功亏一篑。<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731164217.png"><br>最后的故事依然发生在营火前，在击败薪王们的化身以后，“无火之灰”会将火焰拿在手中，并把它纳入了自己的胸膛，主角会在挣扎后失去意志，但在醒来后，我们会发现天上的太阳变成了黑白两色，自己的两旁跪满了隆道尔的信徒，他们将你称为黑暗之王，目送着你走向远方……<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731164255.png" alt="将初火纳入胸中"><br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731164315.png" alt="醒来后你就变成了黑暗之王"><br>这里有必要简单讲一下关于“隆道尔”的事儿。隆道尔其实是一个以巨蛇卡斯（很有可能还有罪业女神维尔卡）为首的教会，其目的就是扶植一个“黑暗之王”上位。由于理解其最终目的涉及到黑暗时代的本质，而黑暗时代究竟是怎么回事咱们还弄不清楚，这也就使得我们尚无法对这个结局给出坚实的解释。看来还是要等一切尘埃落定以后，咱们才能拼凑出最终的答案吧。</p><h1 id="还没有结束！"><a href="#还没有结束！" class="headerlink" title="还没有结束！"></a>还没有结束！</h1><p>啰里啰嗦的近两万字，其实也仅仅将故事的骨干讲了个大概其。文中所援引的剧情解析都拥有相关的文献支持，推理部分的内容在行文中也有明确的体现，相信不会给玩家们造成误解。上述成果并非全是我个人的创作，而是属于玩家社群共同努力的结果。但归根究底，在证据尚不充足的情况下，其中的一些言论与解读依然存在不小的争议。这也是《黑暗之魂》系列剧情最美妙的所在，因为每个人都可以通过这些素材解读出自己的故事。</p><p>有心的玩家可能已经发现，本文并没有把游戏中的支线任务包含在内。这一方面是受篇幅所限（其实这都超了），另一方面则是因为，在缺少最终几片“拼图”的情况下，许多支线任务与主线的逻辑与时间线索还存在许多关键的留白，让我们难以给出最终的解释，就像我们在《黑暗之魂2》的三个DLC全部发售之前无法解释安迪尔这个角色一样。如果您对《黑暗之魂》的故事感兴趣，那就请持续关注我们后续的专栏，在FromSoftware承诺的三部DLC发售以后，我们还会推出最终的剧情解析，并将对游戏中的其他角色与支线任务进行一次系统的整理。</p><p class="note note-info">这个神秘兮兮的家伙其实也是薪王之一，我们本文完全没提到，估计在DLC里会讲到很多他的事情</p><p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230731164440.png"></p><p><strong>转载自：<a href="https://zhuanlan.zhihu.com/p/22042310">https://zhuanlan.zhihu.com/p/22042310</a></strong></p>]]></content>
      
      
      <categories>
          
          <category> 游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 黑暗之魂 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>持续集成工具-Jenkins&amp;Fastlane</title>
      <link href="/2023/07/28/CI/230728-jenkins-fastlane/"/>
      <url>/2023/07/28/CI/230728-jenkins-fastlane/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.jenkins.io/">Jenkins官网</a></p><h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>作为可扩展的自动化服务器，Jenkins 可以用作简单的 持续集成（CI）服务器，或者变成任何项目的持续交付（CD）中心。<br>它的特点如下：</p><ul><li>简易安装: Jenkins是一个基于 Java 的独立程序，可以立即运行，包含 Windows、Mac OS X 和其他类 Unix 操作系统。</li><li>配置简单: Jenkins可以通过其网页界面轻松设置和配置，其中包括即时错误检查和内置帮助。</li><li>插件: 通过更新中心中的 1000 多个插件，Jenkins 集成了持续集成和持续交付工具链中几乎所有的工具。</li><li>扩展: Jenkins可以通过其插件架构进行扩展，从而为 Jenkins 可以做的事提供几乎无限的可能性。</li><li>分布式: Jenkins可以轻松地在多台机器上分配工作，帮助更快速地跨多个平台推动构建、测试和部署。</li></ul><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="Java环境"><a href="#Java环境" class="headerlink" title="Java环境"></a>Java环境</h2><p>Jenkins 依赖于Java，所以在安装Jenkins前，需要先检查是否已安装Java环境。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure><p>正常打印出版本信息即已安装过，提示<code>command not found</code>则未安装。<br>安装java有两种方式，第一种：<br>官网下载对应版本并安装：<a href="https://www.oracle.com/hk/java/technologies/downloads/">官网地址</a><br>第二种Homebrew安装：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install java</span><br></pre></td></tr></table></figure><p>安装完毕后如果还是提示<code>command not found</code>，那么需要配置环境变量。</p><h2 id="安装Jenkins"><a href="#安装Jenkins" class="headerlink" title="安装Jenkins"></a>安装Jenkins</h2><p>安装Jenkins同样有两种方式，第一种：<br>官方下载安装：<a href="https://www.jenkins.io/download/">官网地址</a><br>第二种Homebrew安装：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install jenkins</span><br></pre></td></tr></table></figure><p>安装完成后执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jenkins</span><br></pre></td></tr></table></figure><p>如果用homebrew安装的执行:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew services start jenkins</span><br></pre></td></tr></table></figure><p>启动成功后，访问：<a href="http://localhost:8080/">http://localhost:8080</a></p><h2 id="配置Jenkins"><a href="#配置Jenkins" class="headerlink" title="配置Jenkins"></a>配置Jenkins</h2><p>首先你会看到如下图所示，打开红框中路径对应的文件，粘贴出密码，并填入输入框。<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230728184824.png"><br>选择推荐的插件，点击继续，进入loading页面如下。<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230728185049.png"><br>等待插件全部安装完成后，创建第一个管理员账户，保存并完成<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230728185455.png"><br>实例配置可以不用修改，保存并完成<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230728185609.png"><br>可以开始使用Jenkins了!</p><h2 id="使用Jenkins"><a href="#使用Jenkins" class="headerlink" title="使用Jenkins"></a>使用Jenkins</h2><p>可参考：<br><a href="https://juejin.cn/post/7081923961704939527">文档1</a><br><a href="https://cloud.tencent.com/developer/article/1963912">文档2</a></p>]]></content>
      
      
      <categories>
          
          <category> CI/CD </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Fastlane </tag>
            
            <tag> TeamCity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>持续集成工具-TeamCity&amp;Fastlane</title>
      <link href="/2023/07/28/CI/230728-teamcity-fastlane/"/>
      <url>/2023/07/28/CI/230728-teamcity-fastlane/</url>
      
        <content type="html"><![CDATA[<p><strong><a href="https://www.jetbrains.com/teamcity/">TeamCity官网</a></strong></p><h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>TeamCity是Jetbrains的持续集成工具，免费使用的话可以设置20个构建脚本，对于我们个人来说基本上是够用了。当然假如以后超过限制了，可以考虑使用另一个著名的持续集成工具Jenkins。</p><h1 id="安装TeamCity"><a href="#安装TeamCity" class="headerlink" title="安装TeamCity"></a>安装TeamCity</h1><p>安装步骤比较简单，如下：</p><ul><li>从官网下载teamcity安装包，<code>.tar.gz</code>格式的即可。</li><li>将压缩文件解压至用户目录（你也可以解压至其他目录，并无硬性要求）。</li><li>安装完成</li></ul><h1 id="启动和停止"><a href="#启动和停止" class="headerlink" title="启动和停止"></a>启动和停止</h1><p>以下命令行均假设你安装到了用户目录下，则根目录为：<code>/Users/username/TeamCity</code>。</p><h2 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h2><p>执行如下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh /Users/username/TeamCity/bin/runAll.sh start</span><br></pre></td></tr></table></figure><h2 id="停止服务"><a href="#停止服务" class="headerlink" title="停止服务"></a>停止服务</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh /Users/username/TeamCity/bin/runAll.sh stop</span><br></pre></td></tr></table></figure><h2 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h2><p>浏览器打开：<a href="http://127.0.0.1:8111/">http://127.0.0.1:8111</a><br>TeamCity内置了一个tomcat容器，默认端口为8111，可以在<br><code>/Users/username/TeamCity/conf/server.xml</code> 修改端口。</p><h1 id="配置TeamCity"><a href="#配置TeamCity" class="headerlink" title="配置TeamCity"></a>配置TeamCity</h1><h2 id="TeamCity数据保存目录"><a href="#TeamCity数据保存目录" class="headerlink" title="TeamCity数据保存目录"></a>TeamCity数据保存目录</h2><p>选择一个目录，点击Proceed继续即可。</p><h2 id="选择数据库"><a href="#选择数据库" class="headerlink" title="选择数据库"></a>选择数据库</h2><p>按需选择，一般选择默认就行，点击Proceed继续。</p><h2 id="设置admin用户"><a href="#设置admin用户" class="headerlink" title="设置admin用户"></a>设置admin用户</h2><p>输入用户名和密码，admin用户千万不要忘记哦。设置完成后即可进入TeamCity主页面</p><h1 id="创建Project"><a href="#创建Project" class="headerlink" title="创建Project"></a>创建Project</h1><p>这里以build iOS项目为例。</p><h2 id="安装fastlane并初始化"><a href="#安装fastlane并初始化" class="headerlink" title="安装fastlane并初始化"></a>安装fastlane并初始化</h2><p>详细教程见：<a href="/2023/07/28/CI/230728-fastlane/">移动端一键自动化打包发布-Fastlane</a></p><h2 id="创建Project-1"><a href="#创建Project-1" class="headerlink" title="创建Project"></a>创建Project</h2><p>点击create project。<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230728154459.png"><br>将项目仓库的https或ssh链接粘贴至如图位置，如果用https则必须填写用户名密码<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230728154659.png"><br>远程验证完成后会出现如下信息，点击继续。<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230728154731.png"><br>点击 Add build step 按钮<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230728155023.png"><br>选择Command Line 命令行工具。<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230728155102.png"><br>选择Custom script，并在红框位置填入需要执行的命令行。<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230728155836.png"><br>点击run按钮，并等待任务完成。</p><h2 id="如何查看log"><a href="#如何查看log" class="headerlink" title="如何查看log"></a>如何查看log</h2><p>如果构建失败，可在下图位置查看log并修改。<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230728160838.png"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>上面只是写了iOS构建过程的例子，其他平台或者项目的配置都大同小异，大家可以结合网上的教程来配置。</p>]]></content>
      
      
      <categories>
          
          <category> CI/CD </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Fastlane </tag>
            
            <tag> TeamCity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>移动端一键自动化打包发布-Fastlane</title>
      <link href="/2023/07/28/CI/230728-fastlane/"/>
      <url>/2023/07/28/CI/230728-fastlane/</url>
      
        <content type="html"><![CDATA[<p><strong><a href="https://fastlane.tools/">Fastlane官网</a></strong><br><strong><a href="https://docs.fastlane.tools/">Fastlane官方文档</a></strong><br><strong><a href="https://github.com/fastlane/fastlane">Fastlane Github地址</a></strong></p><h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>Fastlane 是一个完全开源的项目，是一款为 iOS 和 Android 开发者提供的自动化构建工具，它可以帮助开发者将 App 打包、签名、测试、发布、信息整理、提交 App Store 等工作完整的连接起来，实现完全自动化的工作流。</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>安装fastlane之前需要安装一些前置软件包。</p><h2 id="安装Homebrew"><a href="#安装Homebrew" class="headerlink" title="安装Homebrew"></a>安装Homebrew</h2><p>安装具体步骤可参考文章：<a href="/2023/07/27/230727-homebrew">Mac包管理工具-Homebrew</a></p><h2 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h2><p>首先mac系统会自带一个ruby版本。<br>通过如下命令查看ruby版本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ruby -v</span><br></pre></td></tr></table></figure><p>如果ruby版本过低可通过以下命令安装指定版本ruby环境：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install ruby@x.x</span><br></pre></td></tr></table></figure><p>安装完成后需要配置环境变量。国内的话需要替换gem source，替换为 gems.ruby-china.com。<br>查看gem source命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gem sources</span><br></pre></td></tr></table></figure><h2 id="安装xcode命令行工具"><a href="#安装xcode命令行工具" class="headerlink" title="安装xcode命令行工具"></a>安装xcode命令行工具</h2><p>执行如下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xcode-select --install</span><br></pre></td></tr></table></figure><p>如果安装过会有提示，如果没装过就会自动开始安装。一般你如果安装了xcode，并且打开过，都会提示已安装。</p><h2 id="安装fastlane"><a href="#安装fastlane" class="headerlink" title="安装fastlane"></a>安装fastlane</h2><p>安装fastlane有两种方式。<br>第一种是通过gem安装：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gem install -n /usr/local/bin fastlane</span><br></pre></td></tr></table></figure><p>第二种是通过Homebrew安装：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install fastlane</span><br></pre></td></tr></table></figure><p>推荐第二种。<br>安装完成后可通过如下命令查看版本，可以正常输出版本信息及安装成功：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fastlane --version</span><br></pre></td></tr></table></figure><h2 id="安装pgyer插件"><a href="#安装pgyer插件" class="headerlink" title="安装pgyer插件"></a>安装pgyer插件</h2><p>如果使用的是pgyer作为分发平台，需要安装插件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fastlane add_plugin pgyer</span><br></pre></td></tr></table></figure><h1 id="iOS-setup"><a href="#iOS-setup" class="headerlink" title="iOS setup"></a>iOS setup</h1><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><p>打开终端，cd到iOS项目根目录（xcodeproj 的同级目录），输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fastlane init</span><br></pre></td></tr></table></figure><p>根据提示选择或者输入对应信息，会要求你输入apple id账号。初始化完成后项目目录下会出现新的文件夹<code>/fastlane</code>，其中 Appfile 里面存放了 App 的基本信息包括 App_Identifier 、AppID 、Team_ID 等，Fastfile 是最重要的一个文件，在这个文件里面可以编写和定制我们打包脚本的一个文件，所有自定义的功能都写在这里。  </p><h2 id="配置Fastfile"><a href="#配置Fastfile" class="headerlink" title="配置Fastfile"></a>配置Fastfile</h2><p>打开并编辑Fastfile文件。<br>根据需求修改下方配置，并将其粘贴进Fastfile。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line">default_platform(:ios)</span><br><span class="line"></span><br><span class="line">platform :ios do</span><br><span class="line"></span><br><span class="line">  desc &quot;以 development 方式打包并上传到蒲公英&quot;</span><br><span class="line">  lane :test_pgyer do</span><br><span class="line"></span><br><span class="line">    puts &quot;以 development 方式打包&quot;</span><br><span class="line">    gym(</span><br><span class="line">      # 指定打包所使用的输出方式 (可选: app-store, package, ad-hoc, enterprise, development)</span><br><span class="line">      export_method: &quot;development&quot;,</span><br><span class="line">      # 指定项目的 scheme 名称</span><br><span class="line">      scheme: &quot;xxx&quot;,</span><br><span class="line">      # 指定输出的文件夹地址</span><br><span class="line">      output_directory: &quot;./archive/test_pgyer/&quot; + Time.new.strftime(&quot;%Y-%m-%d-%H:%M:%S&quot;),</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    puts &quot;上传 ipa 包到蒲公英&quot;</span><br><span class="line">    pgyer(</span><br><span class="line">      # 蒲公英 API KEY</span><br><span class="line">      api_key: &quot;xxx&quot;,</span><br><span class="line">      # 蒲公英 USER KEY（最新版本不需要配置user_key了）</span><br><span class="line">      # user_key: &quot;xxx&quot;</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">  end</span><br><span class="line"></span><br><span class="line">  desc &quot;以 ad-hoc 方式打包并上传到蒲公英&quot;</span><br><span class="line">  lane :beta do</span><br><span class="line">    puts &quot;自动生成 Provisioning Profiles 文件&quot;</span><br><span class="line">    sigh(</span><br><span class="line">      # 指定输出的文件夹地址</span><br><span class="line">      output_path: &quot;./archive/sign&quot;,</span><br><span class="line">      # 是否为 AdHoc 证书（设为 false 或不写默认为 AppStore 证书）</span><br><span class="line">      adhoc: true</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    puts &quot;以 ad-hoc 方式打包&quot;</span><br><span class="line">    gym(</span><br><span class="line">      # 指定打包所使用的输出方式 (可选: app-store, package, ad-hoc, enterprise, development)</span><br><span class="line">      export_method: &quot;ad-hoc&quot;,</span><br><span class="line">      # 指定项目的 scheme 名称</span><br><span class="line">      scheme: &quot;xxx&quot;,</span><br><span class="line">      # 指定输出的文件夹地址</span><br><span class="line">      output_directory: &quot;./archive/beta/&quot; + Time.new.strftime(&quot;%Y-%m-%d-%H:%M:%S&quot;),</span><br><span class="line">      # 指定打包方式 (可选: Release, Debug)</span><br><span class="line">      configuration: &quot;Release&quot;</span><br><span class="line">    )</span><br><span class="line">    puts &quot;上传 ipa 包到蒲公英&quot;</span><br><span class="line">    pgyer(</span><br><span class="line">      # 蒲公英 API KEY</span><br><span class="line">      api_key: &quot;xxx&quot;,</span><br><span class="line">      # 蒲公英 USER KEY（最新版本不需要配置user_key了）</span><br><span class="line">      # user_key: &quot;xxx&quot;</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">  end</span><br><span class="line"></span><br><span class="line">  desc &quot;以 app-store 方式打包并上传到 iTunes Connect&quot;</span><br><span class="line">  lane :release do</span><br><span class="line"></span><br><span class="line">    puts &quot;自动生成 Provisioning Profiles 文件&quot;</span><br><span class="line">    sigh(</span><br><span class="line">      # 指定输出的文件夹地址</span><br><span class="line">      output_path: &quot;./archive/sign&quot;</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    puts &quot;以 app-store 方式打包&quot;</span><br><span class="line">    gym(</span><br><span class="line">      # 指定打包所使用的输出方式 (可选: app-store, package, ad-hoc, enterprise, development)</span><br><span class="line">      export_method: &quot;app-store&quot;,</span><br><span class="line">      # 指定项目的 scheme 名称</span><br><span class="line">      scheme: &quot;xxx&quot;,</span><br><span class="line">      # 指定输出的文件夹地址</span><br><span class="line">      output_directory: &quot;./archive/release/&quot; + Time.new.strftime(&quot;%Y-%m-%d-%H:%M:%S&quot;),</span><br><span class="line">      # 指定打包方式 (可选: Release, Debug)</span><br><span class="line">      configuration: &quot;Release&quot;</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    puts &quot;上传 ipa 包到 iTunes Connect&quot;</span><br><span class="line">    deliver(</span><br><span class="line">      # 跳过截图上传</span><br><span class="line">      skip_screenshots: true,</span><br><span class="line">      # 跳过元数据上传</span><br><span class="line">      skip_metadata: true,</span><br><span class="line">      # 跳过审核直接上传</span><br><span class="line">      force: true</span><br><span class="line">    )</span><br><span class="line">  end</span><br><span class="line">end</span><br></pre></td></tr></table></figure><h2 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h2><p>打开终端，cd到项目根目录，自动打包并上传至pgyer:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fastlane test_pgyer</span><br></pre></td></tr></table></figure><p>自动打包并上传至App connect:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fastlane release</span><br></pre></td></tr></table></figure><h1 id="Android-setup"><a href="#Android-setup" class="headerlink" title="Android setup"></a>Android setup</h1><h2 id="安装获取应用版本的-Fastlane-插件"><a href="#安装获取应用版本的-Fastlane-插件" class="headerlink" title="安装获取应用版本的 Fastlane 插件"></a>安装获取应用版本的 Fastlane 插件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fastlane add_plugin android_versioning</span><br></pre></td></tr></table></figure><h2 id="初始化-1"><a href="#初始化-1" class="headerlink" title="初始化"></a>初始化</h2><p>打开终端，cd到Android项目根目录，输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fastlane init</span><br></pre></td></tr></table></figure><p>根据提示选择或者输入对应信息，需要输入package name，初始化完成后项目目录下会出现新的文件夹<code>/fastlane</code>，其中 Appfile 里面存放了 App 的基本信息，Fastfile 是最重要的一个文件，在这个文件里面可以编写和定制我们打包脚本的一个文件，所有自定义的功能都写在这里。 </p><h2 id="配置Fastfile-1"><a href="#配置Fastfile-1" class="headerlink" title="配置Fastfile"></a>配置Fastfile</h2><p>打开并编辑Fastfile文件。<br>根据需求修改下方配置，并将其粘贴进Fastfile。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">default_platform(:android)</span><br><span class="line"></span><br><span class="line">platform :android do</span><br><span class="line"></span><br><span class="line">     lane:beta do</span><br><span class="line">     #从蒲公英平台拿到的api_key和user_key</span><br><span class="line">     #api_key = &quot;xxx&quot;</span><br><span class="line">     #user_key = &quot;xxx&quot;</span><br><span class="line">     puts &quot;开始打包xxxdebug版本&quot;</span><br><span class="line">     # 开始打包</span><br><span class="line">    gradle(task:&#x27;clean&#x27;)</span><br><span class="line">    gradle(</span><br><span class="line">        task: &#x27;assemble&#x27;,</span><br><span class="line">        build_type: &#x27;Debug&#x27;,</span><br><span class="line">      )</span><br><span class="line">    puts &quot;xxx打包成功&quot;</span><br><span class="line">    #puts &quot;开始上传到蒲公英&quot;</span><br><span class="line">    #开始上传ipa到蒲公英，这里用的是蒲公英提供的插件</span><br><span class="line">    #update_description代表更新信息，password代表安装密码</span><br><span class="line">    #pgyer(update_description: &quot;#&#123;desc&#125;&quot;, api_key: &quot;#&#123;api_key&#125;&quot;, password: &quot;123456&quot;, install_type: &quot;2&quot;)</span><br><span class="line">    #puts &quot;上传到蒲公英成功&quot;</span><br><span class="line">    #在上传完apk后，打开apk的存放文件夹，起到提示上传完成的作用</span><br><span class="line">    #system &quot;open /User/wangchang/Desktop/defaultFlavor/debug&quot;</span><br><span class="line">    end</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     lane:release do</span><br><span class="line">     #从蒲公英平台拿到的api_key和user_key</span><br><span class="line">     #api_key = &quot;xxx&quot;</span><br><span class="line">     #user_key = &quot;xxx&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    #输入蒲公英上传apk包后输入的版本描述信息</span><br><span class="line">    #puts &quot;请输入版本描述：&quot;</span><br><span class="line">    #desc = STDIN.gets</span><br><span class="line"></span><br><span class="line">    puts &quot;开始打包xxxrelease版本&quot;</span><br><span class="line">    # 开始打包</span><br><span class="line">    gradle(task:&#x27;clean&#x27;)</span><br><span class="line">    gradle(</span><br><span class="line">        task: &#x27;assemble&#x27;,</span><br><span class="line">        build_type: &#x27;Release&#x27;,</span><br><span class="line">      )</span><br><span class="line">    puts &quot;xxx打包成功&quot;</span><br><span class="line">    #puts &quot;开始上传到蒲公英&quot;</span><br><span class="line">    #开始上传ipa到蒲公英，这里用的是蒲公英提供的插件</span><br><span class="line">    #update_description代表更新信息，password代表安装密码</span><br><span class="line">    #pgyer(update_description: &quot;#&#123;desc&#125;&quot;, api_key: &quot;#&#123;api_key&#125;&quot;, password: &quot;123456&quot;, install_type: &quot;2&quot;)</span><br><span class="line">    #puts &quot;上传到蒲公英成功&quot;</span><br><span class="line">    #在上传完apk后，打开apk的存放文件夹，起到提示上传完成的作用</span><br><span class="line">    #system &quot;open /User/wangchang/Desktop/defaultFlavor/debug&quot;</span><br><span class="line">    end</span><br><span class="line">end</span><br></pre></td></tr></table></figure><h2 id="fastlane打Android渠道包"><a href="#fastlane打Android渠道包" class="headerlink" title="fastlane打Android渠道包"></a>fastlane打Android渠道包</h2><p>首先，我们自定义一个 Action：add_channels_to_apk，这个 Action 的作用就是： 拷贝最终打包生成的 apk 文件，并修改文件名为渠道名，如 gengmei_qq_630.apk 然后将一个渠道名写入到 apk 文件的 META-INFO 目录中 其次，新建一个 txt 文件，里面写入所有需要打包的渠道名，如：QQ，360，Baidu…等等，渠道名之间用逗号隔开。<br>最后，在 Fastfile 中定义一个 Lane 来进行最终的集成处理：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">desc &quot;Package a new app version with different channels&quot;</span><br><span class="line">lane :do_package_apk do |options|</span><br><span class="line">    project = &quot;#&#123;options[:project]&#125;&quot;</span><br><span class="line">    target_version = options[:version]</span><br><span class="line"> </span><br><span class="line">    hipchat(message: &quot;Start package #&#123;project&#125; at version #&#123;target_version&#125;&quot;)</span><br><span class="line"> </span><br><span class="line">    git_pull</span><br><span class="line">    gradle(task: &quot;clean&quot;)</span><br><span class="line">    gradle(task: &quot;assembleRelease&quot;)</span><br><span class="line">    add_channels_to_apk(channels: &#x27;./channels.txt&#x27;)</span><br><span class="line"> </span><br><span class="line">    hipchat(message: &quot;Deliver app #&#123;project&#125; successfully!&quot;)</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>然后执行如下的命令打包：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fastlane do_package_apk project:Gengmei version:7.0.0</span><br></pre></td></tr></table></figure><h1 id="Fastlane常用命令"><a href="#Fastlane常用命令" class="headerlink" title="Fastlane常用命令"></a>Fastlane常用命令</h1><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>fastlane actions</td><td>展示所有有效action列表</td></tr><tr><td>fastlane action [action_name]</td><td>展示一个action的详细说明，使用方法等</td></tr><tr><td>fastlane lanes</td><td>展示fastfile中的所有lane</td></tr><tr><td>fastlane list</td><td>展示fastfile中的所有的有效的lane</td></tr><tr><td>fastlane new_action</td><td>创建一个新的action</td></tr><tr><td>fastlane env</td><td>打印fastlane、ruby环境，一般提bug到issue的时候会要求提供</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> CI/CD </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Fastlane </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac包管理工具-Homebrew</title>
      <link href="/2023/07/27/230727-homebrew/"/>
      <url>/2023/07/27/230727-homebrew/</url>
      
        <content type="html"><![CDATA[<p><strong><a href="https://brew.sh/">Homebrew官网</a></strong>   </p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>Homebrew是一款包管理工具，目前支持macOS和linux系统。主要有四个部分组成: brew、homebrew-core 、homebrew-cask、homebrew-bottles。  </p><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>brew</td><td>Homebrew 源代码仓库</td></tr><tr><td>homebrew-core</td><td>Homebrew核心源</td></tr><tr><td>homebrew-cask</td><td>提供 macOS 应用和大型二进制文件的安装</td></tr><tr><td>homebrew-bottles</td><td>预编译二进制软件包</td></tr></tbody></table><p>Homebrew仅需执行相应的命令,就能下载安装需要的软件包，可以省掉自己去下载、解压、拖拽(安装)等繁琐的步骤。 比如安装服务器 node，打开终端执行以下命令即可安装:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install node</span><br></pre></td></tr></table></figure><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="使用官网脚本安装"><a href="#使用官网脚本安装" class="headerlink" title="使用官网脚本安装"></a>使用官网脚本安装</h2><p>打开终端，执行命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&quot;</span><br></pre></td></tr></table></figure><p>安装完成即可。</p><h2 id="使用berw镜像安装脚本"><a href="#使用berw镜像安装脚本" class="headerlink" title="使用berw镜像安装脚本"></a>使用berw镜像安装脚本</h2><p>如果用官网脚本安装下载很慢或者因为网络超时失败，那么我们就可以找另一种方式来安装。<br>执行如下命令行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/ruby -e &quot;$(curl -fsSL https://cdn.jsdelivr.net/gh/ineo6/homebrew-install/install)&quot;</span><br></pre></td></tr></table></figure><p class="note note-info">该脚本用了中科大镜像加速访问，仅修改仓库地址部分，不会产生安全隐患。 关于中科大所提供的 Homebrew 镜像服务: https://lug.ustc.edu.cn/wiki/mirrors/help/brew.git</p><h1 id="更改Homebrew安装源"><a href="#更改Homebrew安装源" class="headerlink" title="更改Homebrew安装源"></a>更改Homebrew安装源</h1><p>有时用Homebrew安装某个软件包会特别慢或者经常会失败（因为服务器在国外），那为了改善一下这个状况，我们需要将Homebrew的安装源替换为国内镜像。</p><h2 id="修改brew-git"><a href="#修改brew-git" class="headerlink" title="修改brew.git"></a>修改brew.git</h2><p>执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git -C &quot;$(brew --repo)&quot; remote set-url origin https://mirrors.ustc.edu.cn/brew.git</span><br></pre></td></tr></table></figure><h2 id="修改homebrew-core-git"><a href="#修改homebrew-core-git" class="headerlink" title="修改homebrew-core.git"></a>修改homebrew-core.git</h2><p>执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git -C &quot;$(brew --repo homebrew/core)&quot; remote set-url origin https://mirrors.ustc.edu.cn/homebrew-core.git</span><br></pre></td></tr></table></figure><h2 id="修改homebrew-cask-git-可选"><a href="#修改homebrew-cask-git-可选" class="headerlink" title="修改homebrew-cask.git(可选)"></a>修改homebrew-cask.git(可选)</h2><p>执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git -C &quot;$(brew --repo homebrew/cask)&quot; remote set-url origin https://mirrors.ustc.edu.cn/homebrew-cask.git</span><br></pre></td></tr></table></figure><h2 id="修改homebrew-bottles"><a href="#修改homebrew-bottles" class="headerlink" title="修改homebrew-bottles"></a>修改homebrew-bottles</h2><p>在你的用户目录下的<code>.bash_profile</code>或者<code>.zshrc</code>中添加如下环境变量。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles&#x27;</span><br></pre></td></tr></table></figure><p>也可以通过命令来添加，bash如下:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &#x27;export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles&#x27; &gt;&gt; ~/.bash_profile</span><br><span class="line">source ~/.bash_profile</span><br></pre></td></tr></table></figure><p>zsh如下:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &#x27;export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles&#x27; &gt;&gt; ~/.zshrc</span><br><span class="line">source ~/.zshrc</span><br></pre></td></tr></table></figure><h2 id="如果遇到brew-uninstall地址无法访问问题，执行如下命令："><a href="#如果遇到brew-uninstall地址无法访问问题，执行如下命令：" class="headerlink" title="如果遇到brew uninstall地址无法访问问题，执行如下命令："></a>如果遇到<code>brew uninstall</code>地址无法访问问题，执行如下命令：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/ruby -e &quot;$(curl -fsSL https://cdn.jsdelivr.net/gh/ineo6/homebrew-install/uninstall)&quot;</span><br></pre></td></tr></table></figure><h1 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h1><table><thead><tr><th>功能</th><th>命令</th></tr></thead><tbody><tr><td>查询</td><td>brew search 软件包名</td></tr><tr><td>安装</td><td>brew install 软件包名</td></tr><tr><td>卸载</td><td>brew uninstall 软件包名</td></tr><tr><td>更新 Homebrew</td><td>brew update</td></tr><tr><td>查看 Homebrew 配置信息</td><td>brew config</td></tr><tr><td>清除低版本软件包</td><td>brew cleanup</td></tr><tr><td>更新所有软件包</td><td>brew upgrade</td></tr></tbody></table><h1 id="可能遇到的问题"><a href="#可能遇到的问题" class="headerlink" title="可能遇到的问题"></a>可能遇到的问题</h1><h3 id="1、若出现-Error-Checksum-mismatch"><a href="#1、若出现-Error-Checksum-mismatch" class="headerlink" title="1、若出现 Error: Checksum mismatch."></a>1、若出现 Error: Checksum mismatch.</h3><p>这里是由Homebrew目录下的portable-ruby-2.6.3_2.yosemite.bottle.tar.gz文件引起的安装中断，只需要到上面对应的路径里，删掉这个文件，重新执行安装命令即可：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/ruby -e &quot;$(curl -fsSL https://cdn.jsdelivr.net/gh/ineo6/homebrew-install/install)&quot;</span><br></pre></td></tr></table></figure><h3 id="2、安装过程中在Cloning-into…卡住"><a href="#2、安装过程中在Cloning-into…卡住" class="headerlink" title="2、安装过程中在Cloning into…卡住"></a>2、安装过程中在Cloning into…卡住</h3><p>终断安装任务(快捷键：Control+C)，执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd &quot;$(brew --repo)/Library/Taps/&quot;</span><br><span class="line">mkdir homebrew &amp;&amp; cd homebrew</span><br><span class="line">git clone git://mirrors.ustc.edu.cn/homebrew-core.git</span><br></pre></td></tr></table></figure><p>安装完成后用brew -v查看版本信息，可以查看即安装成功。</p>]]></content>
      
      
      <categories>
          
          <category> 开发环境 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Homebrew </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MacOS下管理多个Python版本-Pyenv</title>
      <link href="/2023/07/26/230726-mac-python-manage/"/>
      <url>/2023/07/26/230726-mac-python-manage/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>目前Python同时更新与维护Python2和Python3，选择Python2还是选择Python3，取决于当前要使用的库、框架支持哪个版本，所以经常会遇到切换版本的情况。</p><p>那么应该怎样有效的更改呢？很多小伙伴一定会想到修改环境变量，指定Python的默认路径，这样当然可以，然而不够优雅。那么怎样的方法才算优雅呢？当然是一条命令了👻。</p><p>这里通过brew安装pyenv，再用pyenv安装管理Python。</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="安装Homebrew"><a href="#安装Homebrew" class="headerlink" title="安装Homebrew"></a>安装Homebrew</h2><p>安装具体步骤可参考文章：<a href="/2023/07/27/230727-homebrew">Mac包管理工具-Homebrew</a></p><h2 id="安装pyenv"><a href="#安装pyenv" class="headerlink" title="安装pyenv"></a>安装pyenv</h2><p>执行如下命令行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install pyenv</span><br></pre></td></tr></table></figure><p>查看<code>pyenv</code>是否安装成功(正确打印出版本号信息即成功): </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyenv -v</span><br></pre></td></tr></table></figure><h2 id="安装管理多个Python"><a href="#安装管理多个Python" class="headerlink" title="安装管理多个Python"></a>安装管理多个Python</h2><p>假设我们分别要安装python的2.7.15和3.7.0两个版本依次执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyenv install 2.7.15</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyenv install 3.7.0</span><br></pre></td></tr></table></figure><p>安装成功后执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyenv versions</span><br></pre></td></tr></table></figure><p>输出如下(<code>*</code>代表指定的当前版本，system代表系统python版本):<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230726203600.png"></p><h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><p>如果执行pyenv命令无法切换python版本或者找不到命令，则需要配置pyenv环境变量，将下方文本加入到你的用户目录下的<code>.bash_profile</code>或者<code>.zshrc</code>结尾位置并保存。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">export PYENV_ROOT=&quot;$HOME/.pyenv&quot;</span><br><span class="line">export PATH=&quot;$PYENV_ROOT/shims:$PATH&quot;</span><br><span class="line">if command -v pyenv 1&gt;/dev/null 2&gt;&amp;1; then</span><br><span class="line"> eval &quot;$(pyenv init -)&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h1 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h1><h2 id="切换python版本"><a href="#切换python版本" class="headerlink" title="切换python版本"></a>切换python版本</h2><p>执行<code>pyenv global [目标python的版本号]</code>即可切换python版本，如切换至3.7.0</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyenv global 3.7.0</span><br></pre></td></tr></table></figure><p>用<code>python --version</code>或者<code>pyenv versions</code>查看是否切换成功</p><h2 id="pyenv常用的命令说明"><a href="#pyenv常用的命令说明" class="headerlink" title="pyenv常用的命令说明"></a>pyenv常用的命令说明</h2><p>使用方式: pyenv &lt;命令&gt; [&lt;参数&gt;]</p><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>commands</td><td>查看所有命令</td></tr><tr><td>local</td><td>设置或显示本地的Python版本</td></tr><tr><td>global</td><td>设置或显示全局Python版本</td></tr><tr><td>shell</td><td>设置或显示shell指定的Python版本</td></tr><tr><td>install</td><td>安装指定Python版本</td></tr><tr><td>uninstall</td><td>卸载指定Python版本</td></tr><tr><td>version</td><td>显示当前的Python版本及其本地路径</td></tr><tr><td>versions</td><td>查看所有已经安装的版本</td></tr><tr><td>which</td><td>显示安装路径</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 开发环境 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac搭建Stable Diffusion WebUI-AI绘图</title>
      <link href="/2023/07/26/AI/230726-mac-stable-diffusion-web-ui/"/>
      <url>/2023/07/26/AI/230726-mac-stable-diffusion-web-ui/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>目前AI项目比较火爆，尤其是AI绘图，试了一些AI绘图的网站也都比较有意思，所以研究了一下，并且在本地搭建了一个可以进行AI绘图的web UI，这里我用的开发机器为Mac，当然windows也可以，AI项目对于显卡的要求比较高（图形处理能力），这里因为我的机器刚好是mac，所以教程只写了mac环境相关的步骤，接下来记录一下整个搭建过程。</p><h1 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h1><h3 id="macOS版本及配置"><a href="#macOS版本及配置" class="headerlink" title="macOS版本及配置"></a>macOS版本及配置</h3><p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230726184243.png"></p><h3 id="软件环境"><a href="#软件环境" class="headerlink" title="软件环境"></a>软件环境</h3><ul><li>Homebrew:4.0.28</li><li>Python:3.10.12（Python一定要3.10.x）</li><li>git:2.41.0</li><li>Stable Diffusion webUI:1.4.1</li></ul><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><h2 id="安装Homebrew"><a href="#安装Homebrew" class="headerlink" title="安装Homebrew"></a>安装Homebrew</h2><p>安装具体步骤可参考文章：<a href="/2023/07/27/230727-homebrew">Mac包管理工具-Homebrew</a></p><h2 id="安装Python环境"><a href="#安装Python环境" class="headerlink" title="安装Python环境"></a>安装Python环境</h2><p>安装具体步骤可参考文章：<a href="/2023/07/26/230726-mac-python-manage/">MacOS下管理多个Python版本</a><br>因为mac系统会自带一个python环境，请务必确保当前使用的是3.10.x。</p><h2 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h2><p>安装具体步骤可参考文章：<a href="/2023/07/21/blog/blog-hexo-1/">本地搭建hexo blog开发环境</a></p><h2 id="下载stable-diffusion-webui"><a href="#下载stable-diffusion-webui" class="headerlink" title="下载stable-diffusion-webui"></a>下载stable-diffusion-webui</h2><p>打开终端执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/AUTOMATIC1111/stable-diffusion-webui</span><br></pre></td></tr></table></figure><p>clone完成后，项目会在你的<code>/Users/用户名</code>目录下。将分支切换到tag v1.4.1。</p><h2 id="下载面部重建插件GFPGAN"><a href="#下载面部重建插件GFPGAN" class="headerlink" title="下载面部重建插件GFPGAN"></a>下载面部重建插件GFPGAN</h2><p>打开如下链接：<a href="https://github.com/TencentARC/GFPGAN">TencentARC&#x2F;GFPGAN</a>。<br>打开以后下载截图中<code>GFPGANv1.3.pth</code><br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230726193626.png"><br>下载完成后将<code>GFPGANv1.3.pth</code>文件拖入<strong>stable-diffusion-webui项目根目录</strong>。如果你放在了用户目录那么路径为：<code>/Users/用户名/stable-diffusion-webui</code>。    </p><h2 id="下载models-模型"><a href="#下载models-模型" class="headerlink" title="下载models(模型)"></a>下载models(模型)</h2><p>打开<a href="https://rentry.org/sdmodels">Stable Diffusion Models网站</a>下载模型，这里我下载的是Stable Diffusion v1.5。<br>第一步如下：<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230726194323.png"><br>第二步如下：<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230726194453.png"><br>第三步如下：<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230726194627.png"><br>下载完<code>v1.5-pruned.ckpt</code>文件后，将其移动至<code>stable-diffusion-webui/models/Stable-diffusion/v1-5-pruned.ckpt</code>。如果项目在用户目录，则完整路径为：<code>/Users/用户名/stable-diffusion-webui/models/Stable-diffusion/v1-5-pruned.ckpt</code>。</p><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><p>打开终端输入如下命令进入项目根目录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /Users/用户名/stable-diffusion-webui</span><br></pre></td></tr></table></figure><p>接下来启动工程：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./webui.sh</span><br></pre></td></tr></table></figure><p>出现如下输出则运行成功。<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230726195248.png"><br>浏览器打开终端红框位置的链接，即可开始AI绘图了。</p><h2 id="可能会遇到的问题"><a href="#可能会遇到的问题" class="headerlink" title="可能会遇到的问题"></a>可能会遇到的问题</h2><h3 id="python环境"><a href="#python环境" class="headerlink" title="python环境"></a>python环境</h3><p>注意python环境要是3.10.x。别的版本可能会出现版本不兼容的情况。至于如何安装并切换python版本，可参考：<a href="/2023/07/26/2023-07-26-mac-python-manage/">MacOS下管理多个Python版本</a>。</p><h2 id="Installing-gfpgan卡住不动"><a href="#Installing-gfpgan卡住不动" class="headerlink" title="Installing gfpgan卡住不动"></a>Installing gfpgan卡住不动</h2><p>如果你执行<code>./webui.sh</code>后终端卡在了<code>Installing gfpgan</code>，卡了很久不动或者卡了很久报错启动失败了，那么很有可能是未安装：<code>gfpgan</code>和<code>clip</code>。<br>手动安装以后，重新启动项目即可，安装命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install gfpgan</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install clip</span><br></pre></td></tr></table></figure><p>安装看成后可以用以下命令查看是否安装成功：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip list</span><br></pre></td></tr></table></figure><p>list中可以看到<code>gfpgan</code>和<code>clip</code>既是安装成功。<br>重新启动项目查看是否成功。</p><h2 id="无法连接下载资源的报错"><a href="#无法连接下载资源的报错" class="headerlink" title="无法连接下载资源的报错"></a>无法连接下载资源的报错</h2><p>报错如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">Installing gfpgan</span><br><span class="line"></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line"></span><br><span class="line">  File &quot;/Users/mac/git-project/stable-diffusion-webui/launch.py&quot;, line 355, in &lt;module&gt;</span><br><span class="line"></span><br><span class="line">    prepare_environment()</span><br><span class="line"></span><br><span class="line">  File &quot;/Users/mac/git-project/stable-diffusion-webui/launch.py&quot;, line 263, in prepare_environment</span><br><span class="line"></span><br><span class="line">    run_pip(f&quot;install &#123;gfpgan_package&#125;&quot;, &quot;gfpgan&quot;)</span><br><span class="line"></span><br><span class="line">  File &quot;/Users/mac/git-project/stable-diffusion-webui/launch.py&quot;, line 129, in run_pip</span><br><span class="line"></span><br><span class="line">    return run(f&#x27;&quot;&#123;python&#125;&quot; -m pip &#123;args&#125; --prefer-binary&#123;index_url_line&#125;&#x27;, desc=f&quot;Installing &#123;desc&#125;&quot;, errdesc=f&quot;Couldn&#x27;t install &#123;desc&#125;&quot;)</span><br><span class="line"></span><br><span class="line">  File &quot;/Users/mac/git-project/stable-diffusion-webui/launch.py&quot;, line 97, in run</span><br><span class="line"></span><br><span class="line">    raise RuntimeError(message)</span><br><span class="line"></span><br><span class="line">RuntimeError: Couldn&#x27;t install gfpgan.</span><br><span class="line"></span><br><span class="line">Command: &quot;/Users/mac/git-project/stable-diffusion-webui/venv/bin/python3.10&quot; -m pip install git+https://github.com/TencentARC/GFPGAN.git@8d2447a2d918f8eba5a4a01463fd48e45126a379 --prefer-binary</span><br><span class="line"></span><br><span class="line">Error code: 1</span><br><span class="line"></span><br><span class="line">stdout: Collecting git+https://github.com/TencentARC/GFPGAN.git@8d2447a2d918f8eba5a4a01463fd48e45126a379</span><br><span class="line"></span><br><span class="line">  Cloning https://github.com/TencentARC/GFPGAN.git (to revision 8d2447a2d918f8eba5a4a01463fd48e45126a379) to /private/var/folders/j7/d0pyv1qj7lq50qqzfysm9r0h0000gn/T/pip-req-build-_z43sqj4</span><br><span class="line"></span><br><span class="line">stderr:   Running command git clone --filter=blob:none --quiet https://github.com/TencentARC/GFPGAN.git /private/var/folders/j7/d0pyv1qj7lq50qqzfysm9r0h0000gn/T/pip-req-build-_z43sqj4</span><br><span class="line"></span><br><span class="line">  致命错误：无法访问 &#x27;https://github.com/TencentARC/GFPGAN.git/&#x27;：Recv failure: Operation timed out</span><br><span class="line"></span><br><span class="line">  致命错误：无法从承诺者远程获取 fa702eeacff13fe8475b0e102a8b8c37602f3963</span><br><span class="line"></span><br><span class="line">  警告：克隆成功，但是检出失败。</span><br><span class="line"></span><br><span class="line">  您可以通过 &#x27;git status&#x27; 检查哪些已被检出，然后使用命令</span><br><span class="line"></span><br><span class="line">  &#x27;git restore --source=HEAD :/&#x27; 重试</span><br></pre></td></tr></table></figure><p>更改launch.py下载路径配置<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230726200857.png"><br>由于网络环境问题无法访问到Github中的部分资源从而导致安装失败，用文本编辑器打开launch.py文件并找到图下这个8个地方，在每个”<a href="https://github.com/%22%E5%BC%80%E5%A4%B4%E7%9A%84%E9%93%BE%E6%8E%A5%E5%89%8D%E9%9D%A2%E6%B7%BB%E5%8A%A0%22https://ghproxy.com/%22%EF%BC%8C%E5%8F%98%E6%88%90%E5%A6%82%E5%9B%BE%E6%89%80%E7%A4%BA%E7%9A%84%22https://ghproxy.com/https://github.com/%22%E6%A0%BC%E5%BC%8F%E5%BC%80%E5%A4%B4%EF%BC%8C%E5%A6%82%E4%B8%8B%E5%9B%BE%EF%BC%9A">https://github.com/&quot;开头的链接前面添加&quot;https://ghproxy.com/&quot;，变成如图所示的&quot;https://ghproxy.com/https://github.com/&quot;格式开头，如下图：</a><br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230726200947.png"><br>修改完成后保存文件，再次运行项目。查看是否成功。</p>]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AI绘图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客搭建(七)-Github Pages自定义domain和评论系统</title>
      <link href="/2023/07/25/blog/blog-hexo-7/"/>
      <url>/2023/07/25/blog/blog-hexo-7/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>前面文章介绍了网站的整体搭建工作，不过如果你觉得 <code>xxxxx.github.io</code>比较难记或者手上刚好有闲置的域名，那么可以使用Pages的自定义omain功能，而且此篇文章结尾也会简单说一下评论系统相关。</p><h1 id="Custom-domain"><a href="#Custom-domain" class="headerlink" title="Custom domain"></a>Custom domain</h1><h2 id="购买域名"><a href="#购买域名" class="headerlink" title="购买域名"></a>购买域名</h2><p>首先第一步购买域名，可以从阿里云，腾讯云登渠道购买。</p><h2 id="创建CNAME文件"><a href="#创建CNAME文件" class="headerlink" title="创建CNAME文件"></a>创建CNAME文件</h2><p>首先在项目目录 <code>source/</code> 下新增一个文本文件名称为：<strong>CNAME</strong>。<br>编辑CNAME文件在其中添加你购买域名。<br><strong>这里需要注意一下格式，应该是 <code>xxxxxx.com</code> 这样，前面没有<code>http://</code>，也没有<code>www</code>，这里需要着重注意一下。</strong><br>添加完成后，进行部署，部署成功后在你的<strong>xxxxx.github.io</strong>的仓库中就能看到<strong>CNAME</strong>文件了。</p><h2 id="配置DNS解析"><a href="#配置DNS解析" class="headerlink" title="配置DNS解析"></a>配置DNS解析</h2><p>首先打开终端输入如下命令，并获取IP：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping username.github.io</span><br></pre></td></tr></table></figure><p>进入购买域名的服务商的后台，进入域名控制台，添加解析记录如下：</p><table><thead><tr><th>主机记录</th><th>记录类型</th><th>记录值</th></tr></thead><tbody><tr><td>@</td><td>A</td><td>185.199.108.153</td></tr><tr><td>www</td><td>CNAME</td><td>username.github.io.</td></tr></tbody></table><p>将<strong>username</strong>替换成你自己的github用户名。<br>对DNS的配置不是立即生效的，需要等待一段时间后再验证（一般10分钟后）。</p><h2 id="启用HTTPS"><a href="#启用HTTPS" class="headerlink" title="启用HTTPS"></a>启用HTTPS</h2><p><a href="https://github.blog/2018-05-01-github-pages-custom-domains-https/">官方文档</a><br>配置比较简单，只需要更新DNS配置里的A记录，将其指向一下四个IP中的一个。</p><ul><li>185.199.108.153</li><li>185.199.109.153</li><li>185.199.110.153</li><li>185.199.111.153</li></ul><p>过一段时间后再刷新查看blog的https是否生效。</p><h1 id="评论系统"><a href="#评论系统" class="headerlink" title="评论系统"></a>评论系统</h1><p>平论系统会依赖你选用的主题是否支持，这里就不展开讲了，一般在主题对应的教程中都有讲述。</p><p>这里我选用的是<strong>disqus(需要翻墙)</strong> 。</p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客搭建(六)-Github Actions自动部署Hexo到Github pages</title>
      <link href="/2023/07/24/blog/blog-hexo-6/"/>
      <url>/2023/07/24/blog/blog-hexo-6/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>前面我们已经搭建并部署完我们的blog了，但是每次部署操作都很繁琐，有时可能只是改了个错别字，就需要重新run一遍命令，那么有没有什么办法能简化这个过程吗？今天的文章我们就来说下，如何自动化这个过程，这个自动化的过程一般称为<strong>CI&#x2F;CD</strong></p><h1 id="Github-Actions"><a href="#Github-Actions" class="headerlink" title="Github Actions"></a>Github Actions</h1><p>GitHub Actions 是 GitHub 的持续集成服务。持续集成由很多操作组成，比如抓取代码、运行测试、登录远程服务器，发布到第三方服务等等。GitHub 把这些操作就称为 actions。<br>很多操作在不同项目里面是类似的，完全可以共享。GitHub 允许开发者把每个操作写成独立的脚本文件，存放到代码仓库，使得其他开发者可以引用。<br>如果你需要某个 action，不必自己写复杂的脚本，直接引用他人写好的 action 即可，整个持续集成过程，就变成了一个 actions 的组合。这就是 GitHub Actions 最特别的地方。</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="创建私有仓库"><a href="#创建私有仓库" class="headerlink" title="创建私有仓库"></a>创建私有仓库</h2><p>首先创建一个私有仓库，用来存放我们的工程项目，也就是你的hexo工程。<br>将hexo工程push到远端(记得删除项目中所有的 <code>.git</code>文件夹)。</p><h2 id="创建token"><a href="#创建token" class="headerlink" title="创建token"></a>创建token</h2><p>然后打开github网页，登录你的账号，进入setting页面。<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230724193448.png"><br>拉到最下方，点击 Developer settings<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230724193659.png"><br>创建Token<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230724193812.png"><br>勾选全部的权限，名称随意。并点击「Generate token」完成生成。保存好这个令牌，它不会再次出现。<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/ce9cd430a629c31a5f96415c17d28463.png"><br>打开hexo项目的github仓库，进入token配置页面。<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230801141806.png"><br>将上面步骤生成的token复制，并添加到此处</p><p>Tips: 不生成上面的key也是可以的，只要将你的ssh私钥，粘贴至上述token位置也是生效的，注意ssh不要设置密码。</p><h2 id="配置-GitHub-Action"><a href="#配置-GitHub-Action" class="headerlink" title="配置 GitHub Action"></a>配置 GitHub Action</h2><p>在hexo项目中创建文件<code>.github/workflows/hexoCI.yml</code>，并复制下方代码，请仔细阅读注释，修改最后几行的提交设置。<br>这里我用的是node版本为 21.x ，(因为20.x会有部署失败的情况，不过后续新版本21.x已修复。)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"># 自动化名称</span><br><span class="line">name: Hexo Blog CI</span><br><span class="line"></span><br><span class="line"># 触发条件</span><br><span class="line">on:</span><br><span class="line">  push:</span><br><span class="line">    branches:</span><br><span class="line">      - main</span><br><span class="line"></span><br><span class="line"># 设置环境</span><br><span class="line">jobs:</span><br><span class="line">  build:</span><br><span class="line">    runs-on: ubuntu-latest</span><br><span class="line"></span><br><span class="line">    steps:</span><br><span class="line">      # check it to your workflow can access it</span><br><span class="line">      # from: https://github.com/actions/checkout</span><br><span class="line">      - name: Checkout Repository master branch</span><br><span class="line">        uses: actions/checkout@main</span><br><span class="line"></span><br><span class="line">      # from: https://github.com/actions/setup-node</span><br><span class="line">      - name: Setup Node.js 21.x</span><br><span class="line">        uses: actions/setup-node@master</span><br><span class="line">        with:</span><br><span class="line">          node-version: &quot;21.1.0&quot;</span><br><span class="line"></span><br><span class="line">      - name: 安装Hexo</span><br><span class="line">        run: |</span><br><span class="line">          npm install hexo-cli -g</span><br><span class="line">          npm install</span><br><span class="line"></span><br><span class="line">      - name: 设置密钥</span><br><span class="line">        env:</span><br><span class="line">          HEXO_DEPLOY_PRIVATE_KEY: $&#123;&#123; secrets.HEXO_DEPLOY_PRIVATE_KEY &#125;&#125;</span><br><span class="line">        run: |</span><br><span class="line">          mkdir -p ~/.ssh/</span><br><span class="line">          echo &quot;$HEXO_DEPLOY_PRIVATE_KEY&quot; &gt; ~/.ssh/id_rsa</span><br><span class="line">          chmod 600 ~/.ssh/id_rsa</span><br><span class="line">          ssh-keyscan github.com &gt;&gt; ~/.ssh/known_hosts</span><br><span class="line"></span><br><span class="line">      - name: 设置Git信息</span><br><span class="line">        run: |</span><br><span class="line">          git config --global user.name &#x27;yourUserName&#x27;</span><br><span class="line">          git config --global user.email &#x27;yourUserName@123.com&#x27;</span><br><span class="line"></span><br><span class="line">      - name: Hexo三连</span><br><span class="line">        run: |</span><br><span class="line">          hexo clean</span><br><span class="line">          hexo generate</span><br><span class="line">          hexo deploy</span><br></pre></td></tr></table></figure><p>将项目中修改push到远端。</p><h1 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h1><p>修改或新增某一篇文章，push到github。等待actions结束，查看网站上对应的文本是否发生变化。</p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客搭建(五)-创建blog图床(阿里云-OSS)</title>
      <link href="/2023/07/24/blog/blog-hexo-5/"/>
      <url>/2023/07/24/blog/blog-hexo-5/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>上一篇文章我们已经说到了如何开始书写我们的blog了，那么接下来就会遇到一个问题，我们写blog的时候肯定会穿插一些图片和截图，那么这些图片的存储问题如何解决呢？接下来就聊一下该如何解决这个问题。</p><h1 id="其他渠道"><a href="#其他渠道" class="headerlink" title="其他渠道"></a>其他渠道</h1><p>其实创建一个图床还有很多其他的渠道，比如说github、腾讯云等等。基本配置都类似，有些是免费有些需要收费，大家可以根据自己的喜好和需求来选择。这里我选用的是阿里云，所以接下来主要介绍下阿里云OSS创建图床的过程。</p><h1 id="阿里云配置过程"><a href="#阿里云配置过程" class="headerlink" title="阿里云配置过程"></a>阿里云配置过程</h1><h2 id="购买资源包"><a href="#购买资源包" class="headerlink" title="购买资源包"></a>购买资源包</h2><p>首先打开并登录(注册或者用支付宝登录都可以)<a href="https://cn.aliyun.com/">阿里云官网</a>。<br>产品列表搜索 “对象存储 OSS”，选择后点击“立即购买”。<br>选择购买的OSS资源包配置，如下图：<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230724164938.png"><br>大家可以根据自己的需求调整，这里我选择的是1年40g，折合人民币9元钱，还是不错的。</p><h2 id="创建Bucket"><a href="#创建Bucket" class="headerlink" title="创建Bucket"></a>创建Bucket</h2><p>跳转至 <strong>对象存储 OSS</strong> 控制台，选中“Bucket 列表”，点击“创建Bucket”。添加Bucket信息，信息如下：</p><ul><li>Bucket名称：唯一，如果重复会提示错误，调整名称，直到不提示错误就可以了</li><li>地域：根据需求调整，一般默认就行。</li><li>存储类型：标准存储即可。</li><li>存储冗余类型：推荐-同城冗余存储。</li><li>读写权限：共有读。</li></ul><p>其他非必填项可以根据自己需求调整，也可以使用默认选项。配置完成后点击确认。记录好新建的Bucket名称，后续会用到。</p><h2 id="创建AccessKey"><a href="#创建AccessKey" class="headerlink" title="创建AccessKey"></a>创建AccessKey</h2><p>点击你的阿里云用户头像，下拉列表选择AccessKey管理，点击创建AccessKey，进行验证，创建成功后，将key和serect保存至本地（后面步骤会用）。</p><h1 id="PicGo"><a href="#PicGo" class="headerlink" title="PicGo"></a>PicGo</h1><p>PicGo: 一个用于快速上传图片并获取图片 URL 链接的工具。<br><strong><a href="https://picgo.github.io/PicGo-Doc/zh/guide/#picgo-is-here">PicGo教程</a></strong><br><strong><a href="https://molunerfinn.com/PicGo/">PicGo下载</a></strong><br><strong><a href="https://github.com/Molunerfinn/PicGo">PicGo Github仓库</a></strong></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>下载并安装PicGo，上面有教程链接，大家可以参考。  </p><h2 id="PicGo配置上传阿里云OSS"><a href="#PicGo配置上传阿里云OSS" class="headerlink" title="PicGo配置上传阿里云OSS"></a>PicGo配置上传阿里云OSS</h2><p>第一步中已经获取到了阿里云的配置信息，按照 <strong><a href="https://picgo.github.io/PicGo-Doc/zh/guide/config.html#%E9%98%BF%E9%87%8C%E4%BA%91oss">官方配置步骤</a></strong> 即可。</p><h2 id="PicGo上传失败的话如何解决"><a href="#PicGo上传失败的话如何解决" class="headerlink" title="PicGo上传失败的话如何解决"></a>PicGo上传失败的话如何解决</h2><p>至于如何用PicGo上传图片官方教程都写的比较详细，这里就不赘述了。接下来主要说下上传失败后，如何查看log。  </p><ol><li>首先进入PicGo设置，点击打开配置文件，查看你的配置信息是否有误。</li><li>如果配置信息无误，点击设置日志文件，日志等级设置为All，size设置为10M，再上传，此时就可以查看日志信息了，然后根据具体报错解决。</li></ol><h1 id="Markdown插入图片"><a href="#Markdown插入图片" class="headerlink" title="Markdown插入图片"></a>Markdown插入图片</h1><p>使用PicGo上传完图片我们会得到一个图片链接，那么如何在文章中插入这张图片呢？<br>首先在上篇文章中的Markdown语法的<a href="https://markdown.com.cn/basic-syntax/images.html">链接</a>中已有，具体语法如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![这是图片](/assets/img/philly-magic-garden.jpg &quot;Magic Gardens&quot;)</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>至此，我们blog的主要功能与流程都有了，后续文章主要就介绍一下如何提高效率，以及一些优化的方案了，敬请期待。</p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客搭建(四)-开始写我们的第一篇Blog</title>
      <link href="/2023/07/24/blog/blog-hexo-4/"/>
      <url>/2023/07/24/blog/blog-hexo-4/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>前几篇文章已经将我们的blog部署至远端，并且设置了主题。现在我们可以开始创作我们的文章了。</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="创建文件"><a href="#创建文件" class="headerlink" title="创建文件"></a>创建文件</h2><p>Hexo的文章或者页面可以在终端执行下面命令来创建：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><h3 id="布局（layout）"><a href="#布局（layout）" class="headerlink" title="布局（layout）"></a>布局（layout）</h3><p>Hexo有三种默认布局：<code>post</code>，<code>page</code>和<code>draft</code>。在创建这三种不同类型的文件时，它们将会被保存到不同的路径；而您自定义的其他布局和 <code>post</code> 相同，都将储存到 <code>source/_posts</code> 文件夹。</p><table><thead><tr><th>布局</th><th>路径</th></tr></thead><tbody><tr><td>post</td><td>source&#x2F;_posts</td></tr><tr><td>page</td><td>source</td></tr><tr><td>draft</td><td>source&#x2F;_drafts</td></tr></tbody></table><p>如果你不希望一篇文章（post&#x2F;page）使用主题处理，请在它的 front-matter 中设置 layout: false。详情请参考<a href="https://hexo.io/zh-cn/docs/front-matter#%E5%B8%83%E5%B1%80">链接</a>。</p><h3 id="文件名称"><a href="#文件名称" class="headerlink" title="文件名称"></a>文件名称</h3><p>Hexo 默认以标题做为文件名称，但您可编辑 <code>new_post_name</code> 参数来改变默认的文件名称，举例来说，设为 <code>:year-:month-:day-:title.md</code> 可让您更方便的通过日期来管理文章。你可以使用以下占位符：</p><table><thead><tr><th>变量</th><th>描述</th></tr></thead><tbody><tr><td>:title</td><td>标题（小写，空格将会被替换为短杠）</td></tr><tr><td>:year</td><td>建立的年份，比如， <code>2023</code></td></tr><tr><td>:month</td><td>建立的月份（有前导零），比如， <code>04</code></td></tr><tr><td>:i_month</td><td>建立的月份（无前导零），比如， <code>4</code></td></tr><tr><td>:day</td><td>建立的月份（有前导零），比如， <code>07</code></td></tr><tr><td>:i_day</td><td>建立的月份（无前导零），比如， <code>7</code></td></tr></tbody></table><h3 id="草稿-draft"><a href="#草稿-draft" class="headerlink" title="草稿(draft)"></a>草稿(draft)</h3><p>Hexo的一种特殊布局：<code>draft</code>，这种布局会被保存到 <code>source/_drafts</code> 文件夹，你可以通过 <code>publish</code> 命令来将草稿移动到 <code>source/_posts</code> 目录，你也可以在命令中指定layout来制定布局，命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo publish [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><p>草稿默认不会显示在页面中，您可在执行时加上 <code>--draft</code> 参数，或是在 <code>_config.yml</code> 中把 <code>render_drafts</code> 参数设为 <code>true</code> 来预览草稿。</p><h3 id="模版-Scaffold"><a href="#模版-Scaffold" class="headerlink" title="模版(Scaffold)"></a>模版(Scaffold)</h3><p>在新建文章时，Hexo 会根据 <code>scaffolds</code> 文件夹内相对应的文件来建立文件，例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new photo &quot;My Gallery&quot;</span><br></pre></td></tr></table></figure><p>在执行这行指令时，Hexo 会尝试在 <code>scaffolds</code> 文件夹中寻找 <code>photo.md</code>，并根据其内容建立文章，以下是您可以在模版中使用的变量：</p><table><thead><tr><th>变量</th><th>描述</th></tr></thead><tbody><tr><td>layout</td><td>布局</td></tr><tr><td>title</td><td>标题</td></tr><tr><td>date</td><td>文件建立日期</td></tr></tbody></table><h3 id="支持的格式"><a href="#支持的格式" class="headerlink" title="支持的格式"></a>支持的格式</h3><p>Hexo 支持以任何格式书写文章，只要安装了相应的渲染插件。</p><p>例如，Hexo 默认安装了 <strong>hexo-renderer-marked</strong> 和 <strong>hexo-renderer-ejs</strong>，因此你不仅可以用 Markdown 写作，你还可以用 EJS 写作。如果你安装了 <strong>hexo-renderer-pug</strong>，你甚至可以用 Pug 模板语言书写文章。</p><p>只需要将文章的扩展名从 <strong>md</strong> 改成 <strong>ejs</strong>，Hexo 就会使用 <strong>hexo-renderer-ejs</strong> 渲染这个文件，其他格式同理。</p><h2 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h2><p>Markdown是一种轻量级标记语言，排版语法简洁，让人们更多地关注内容本身而非排版。它使用易读易写的纯文本格式编写文档，可与HTML混编，可导出 HTML、PDF 以及本身的 .md 格式的文件。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><p>目前我一般会用Markdown来编辑文字。至于Markdown语法也比较简单易懂。<br><strong>Markdown语法教程可<a href="https://markdown.com.cn/basic-syntax/">参考</a></strong></p><h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><p>目前市面上有很多Markdown的编辑工具，这里只列举下我用过的，并且比较不错的工具。</p><ol><li>typora<br>不错的Markdown编辑工具。<a href="https://typora.io/">官网</a>，<a href="https://typoraio.cn/">中文官网</a></li><li>VSCode<br>微软发布的文本编辑工具，支持Markdown，也可以通过一些extension让体验变得更好。<a href="https://code.visualstudio.com/">官网</a></li></ol><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://hexo.io/zh-cn/docs/writing.html">https://hexo.io/zh-cn/docs/writing.html</a></li><li><a href="https://markdown.com.cn/basic-syntax/">https://markdown.com.cn/basic-syntax/</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客搭建(三)-hexo主题</title>
      <link href="/2023/07/21/blog/blog-hexo-3/"/>
      <url>/2023/07/21/blog/blog-hexo-3/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>上一篇中已经将我们的博客部署至github pages了，现在我们就可以通过网络随时查看我们的博客了。但是接下来的问题是我们的博客貌似有些单调怎么办？这篇文章将会介绍如何配置及使用hexo的主题。</p><h1 id="hexo主题"><a href="#hexo主题" class="headerlink" title="hexo主题"></a>hexo主题</h1><p><a href="https://hexo.io/themes/index.html">hexo主题网址</a><br>你可以通过上面网站来浏览或者搜索你心仪的主题，在每个主题的详情中你都可以找到教程及主题预览。有些主题的预览页面可能已经失效了，不过不要紧，我们可以将其下载下来本地预览，因为hexo的主题配置与修改比较简单。</p><h1 id="配置主题"><a href="#配置主题" class="headerlink" title="配置主题"></a>配置主题</h1><p>虽然hexo主题各有不同，但是在主项目里的配置大致一样。<br>首先找到你心仪的主题的github仓库。<br>运行以下命令将其clone到你的项目目录(这里以我用的主题cactus为例)：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/probberechts/hexo-theme-cactus.git themes/cactus</span><br></pre></td></tr></table></figure><p>clone完成后可以将themes&#x2F;cactus目录下的<code>.git</code>文件夹删除，不然你可能无法将主题文件夹上传至代码仓库。<br>然后用文本编辑器打开项目跟目录下的<code>_config.yml</code>，找到<code>theme</code>，将其改为你clone的主题（同样以cactus为例）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># theme: landscape</span><br><span class="line">theme: cactus</span><br></pre></td></tr></table></figure><p>修改完毕后运行以下命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo c</span><br><span class="line"></span><br><span class="line">hexo g</span><br><span class="line"></span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>本地预览就会发现主题已经切换了，然后就可以运行 <code>hexo d</code> 部署至远端了</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>总的来说主题配置的修改还是比较简单的。  </p><p>hexo的主题多种多样，各位可以选择一些自己喜欢的，我本人搭建blog只是为了记录一些东西，所以选择了一个比较简洁的主题。当然也会有些比较好看且复杂的主题，那就需要诸位花些心思自己研究下了。<br>一般来说这些主题的配置项可以在项目目录中的 <code>/themes/&#123;主题名&#125;/_config.yml</code> 中修改，而主题的资源文件存放在 <code>/themes/&#123;主题名&#125;/soruce/</code> 中。</p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客搭建(二)-hexo部署至github pages</title>
      <link href="/2023/07/21/blog/blog-hexo-2/"/>
      <url>/2023/07/21/blog/blog-hexo-2/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在上一篇文章中介绍了本地环境的搭建以及本地预览，那么这期我们将了解一下如何让我们的blog可以再网络中访问。</p><p>主要是依赖：</p><ul><li>git</li><li><a href="https://github.com/">github</a></li></ul><p>在上期文章中我们已经安装了git, 那么现在需要准备的是一个github的账号，首先第一步在github注册一个账号（免费的）。</p><h2 id="创建Github-pages项目"><a href="#创建Github-pages项目" class="headerlink" title="创建Github pages项目"></a>创建Github pages项目</h2><p>如下图所示点击New repository<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230721152318.png"></p><p>Repository name必须以<strong>github.io</strong>结尾，将username替换成你账号的名字, <strong>权限必须是public</strong>.<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230721152522.png"><br>配置完成后点击Create repository</p><p>项目创建完成后，点击settings, 选中Pages，然后如下图配置<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230721153115.png"></p><p><strong>此步骤完成后你在github pages的仓库已经创建完成，可以继续后续的工作了</strong></p><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p>打开终端，cd到blog项目跟目录，运行如下命令安装git部署插件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>打开blog根目录的_config.yml，修改deploy配置(“:”后面的空格不能丢):</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/one-command-deployment</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/yourUsername/yourUsername.github.io.git</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><p>这里部署的分支（branch）要和你在github pages中setting选中的分支一致。</p><p>打开终端cd到blog项目根目录，运行以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo c</span><br><span class="line"></span><br><span class="line">hexo g</span><br><span class="line"></span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><ul><li><code>hexo c</code> 等同于 <code>hexo clean</code> 清除缓存文件 (db.json) 和已生成的静态文件 (public)。在某些情况（尤其是更换主题后），如果发现你对站点的更改无论如何也不生效，你可能需要运行该命令。</li><li><code>hexo g</code> 等同于 <code>hexo generate</code> 生成静态文件。</li><li><code>hexo d</code> 等同于 <code>hexo deploy</code> 部署。</li></ul><p>部署过程中会需要你输入你的github账号及密码，按提示输入即可。<br>出现如下图提示，证明部署成功，访问：<a href="https://yourusername.github.io/">https://yourUsername.github.io/</a> 即可查看你的blog了。<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230721155354.png"></p><p><strong>至此你的blog已经部署至github pages，并且可以再网络中访问了。</strong></p><h4 id="小tips："><a href="#小tips：" class="headerlink" title="小tips："></a>小tips：</h4><ul><li>如果不想每次部署都输入github的账号名密码，可以添加git全局配置，具体可以查看网上教程。</li><li>你也可以将你的blog项目上传至github或其他代码托管平台作为仓库，这样就不用担心项目会丢失了，记得将权限设置为private。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客搭建(一)-本地搭建hexo blog开发环境</title>
      <link href="/2023/07/21/blog/blog-hexo-1/"/>
      <url>/2023/07/21/blog/blog-hexo-1/</url>
      
        <content type="html"><![CDATA[<h1 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h1><p>macOS 版本非必须的，不用太在意。<br>各个软件的版本并不需要按照下方版本列表严格执行，这里只是记录了我搭建完成的各种版本号，大家可以根据自己的情况调整，如果遇到问题或者error再去具体分析解决。<br><strong>关于node版本在部署到github pages时我用的node 19.x, 因为20.3.1在github flows会有部署失败的情况，后续文章会讲到。</strong></p><ul><li>macOS Ventura: 13.4.1</li><li>Homebrew: 4.0.28</li><li>node: v20.3.1</li><li>hexo: 7.0.0-rc2</li><li>hexo-cli: 4.3.1</li><li>git version: 2.41.0</li></ul><h1 id="配置安装"><a href="#配置安装" class="headerlink" title="配置安装"></a>配置安装</h1><h2 id="安装Homebrew"><a href="#安装Homebrew" class="headerlink" title="安装Homebrew"></a>安装Homebrew</h2><p>Homebrew是一款包管理工具，目前支持macOS和linux系统。主要有四个部分组成: brew、homebrew-core 、homebrew-cask、homebrew-bottles。  </p><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>brew</td><td>Homebrew 源代码仓库</td></tr><tr><td>homebrew-core</td><td>Homebrew核心源</td></tr><tr><td>homebrew-cask</td><td>提供 macOS 应用和大型二进制文件的安装</td></tr><tr><td>homebrew-bottles</td><td>预编译二进制软件包</td></tr></tbody></table><p><strong><a href="https://brew.sh/">Homebrew官网</a></strong><br>安装Xcode Comand Line Tools(如果电脑中已安装xcode可以忽略此步骤):</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xcode-select --install</span><br></pre></td></tr></table></figure><p>打开终端，输入如下命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&quot;</span><br></pre></td></tr></table></figure><p>等待安装完成，完成后可以执行一下命令验证安装是否完成。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew -v</span><br></pre></td></tr></table></figure><p>终端打印出 <code>Homebrew x.x.x</code> 的版本号信息证明安装成功。</p><p><strong>备注：此文章主要说的是hexo，所以描述的是Homebrew安装没遇到问题的流程，详细教程参考：<a href="/2023/07/27/230727-homebrew">Mac包管理工具-Homebrew</a></strong></p><h2 id="安装node"><a href="#安装node" class="headerlink" title="安装node"></a>安装node</h2><p>打开终端，输入如下命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew search node</span><br></pre></td></tr></table></figure><p>出现会如下结果<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230721135734.png"></p><p>继续终端输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install node</span><br></pre></td></tr></table></figure><p>如果想要安装其他版本的node，比如说18.x，可以输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install node@18</span><br></pre></td></tr></table></figure><p>安装完成后可以通过以下命令验证安装是否成功：<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230721140110.png"><br>可以正常查看版本号即可。<br>如果提示找不到node或npm命令，那么可能是由于node环境变量未配置。打开当前用户目录，打开隐藏文件（快捷键：command+shift+.），用文本编辑器打开 <code>.bash_profile</code>或者<code>.zshrc</code>，添加对应环境变量即可。<br>查看node路径命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">which node</span><br></pre></td></tr></table></figure><p>查看npm路径命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">which npm</span><br></pre></td></tr></table></figure><h2 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h2><p>git是作为后续部署到github pages才会用到，但是作为开发环节比较基础的工具，我们事先准备好它。<br>终端运行如下命令安装：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install git</span><br></pre></td></tr></table></figure><p>安装完成后运行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure><p>如果正常输出版本信息，证明安装成功。<br>如果提示找不到git命令，那么也可能是环境变量配置问题，同node配置环境变量步骤，解决此问题。</p><p>另外对于git会有一些可视化的工具，目前用过比较好用而且免费的有：<a href="https://git-fork.com/">Fork</a>、<a href="https://www.sourcetreeapp.com/">SourceTree</a>。</p><p>个人感觉Fork更好用些。</p><h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><p>终端运行如下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>安装成功后cd到目标目录运行如下命令创建blog：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure><p>创建成功后可通过以下命令本地查看你的网站：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo new test-blog</span><br><span class="line"></span><br><span class="line">hexo g</span><br><span class="line"></span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/20230721144027.png"></p><p>浏览器打开<code>http://localhost:4000/ </code>可查看你的blog雏形。</p><p>至此基于hexo的blog开发环境已经搭建完毕。</p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++ map错误 No viable overloaded operator[]</title>
      <link href="/2023/07/20/others/cpp-map-error/"/>
      <url>/2023/07/20/others/cpp-map-error/</url>
      
        <content type="html"><![CDATA[<p>问题描述：这个报错可能的原因也可能是类型不匹配（这个就不详细解释了，网上很多），我的问题是在一个方法里面使用map[]符号报错，但是在别的方法里面同样的用法没问题，如下图。<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/2231610-07b88ff5c819fe0c.webp"></p><p>经过一番研究得出结论：</p><p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/2231610-bc87280d27093e14.webp"></p><p>报错原因是由于方法后面加了const修饰导致的。<br>具体我们可以进到map的头文件中得知一二。<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/2231610-f6d1463e53b39b32.webp"></p><p>如上图所示[]前面并没有const修饰，所以我们可以用at()方法。<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/2231610-b414b37ef21bf4e1.webp"></p><p>问题解决。</p>]]></content>
      
      
      <categories>
          
          <category> 开发问题记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英文短句</title>
      <link href="/2023/07/20/others/english-sentence/"/>
      <url>/2023/07/20/others/english-sentence/</url>
      
        <content type="html"><![CDATA[<p>1.Perseverance is not a long race,it is many short races one after another. 坚持不是一个长跑，它是很多一个接一个的短跑。</p><p>2.For success,attitude is equally as important as ability.为了取得成功，态度与能力一样重要。</p><p>3.The only thing predictable about life is its unpredictability.人生唯一可以预知的，就是它的变化莫测。</p><p>4.All I ever wanted was a single thing worth fighting for.我想要的不过就是一件让我奋不顾身的事儿。</p><p>5.There was another life that I might have had,but I am having this one.我明明可以过另一种生活，却在过这种生活。</p><p>6.When you’re eighteen your emotions are violent,but they’re not durable.18岁时，激情有余而耐心不足。</p><p>7.No matter how hard the past is,you can always begin again.不管过去有多困难，你都可以重新开始。</p><p>8.People always want to lead an active life,and is not it?人总是要乐观生活，不是吗？</p><p>9.The sercet of success is to do the common things uncommonly well.成功的秘诀是把平凡的事情做得异常好。</p><p>10.Do not pray for an easy life,pray for the strength to endure a difficult one.不要祈求安逸的人生，祈求拥有撑过艰难的力量。</p><p>11.The education of a man is never completed until he dies.一个人的学习之路，到死才结束。</p><p>12.Love is composed of a single soul inhabiting two bodies.爱是一个灵魂住在两个身体里。</p><p>13.Keep your face to the sunshine and you connot see the shadow.保持面朝阳光，你将不会见到阴暗。</p><p>14.A little bit of mercy makes the world less cold and more just.多一点怜悯可以让世界少一点冷酷和多一点正义。</p><p>15.I love you not for who you are,but for who I am with you.我爱你不是因为你是谁，而是因为跟你在一起，我是谁。</p><p>16.Don’t undermine your worth by comparing yourself with others.别拿自己和他人比较，这只会降低你原有的价值。</p><p>17.Eternity is said not to be an extension of time but an absence of time.永恒不是时间的无限延伸，而是没有时间。</p><p>18.Of all the tribulations in this world,boredom is the one most hard to bear.所有苦难中，无聊是最难以忍受的。</p><p>19.Don’t you wonder sometimes,what might have happened if you tried?有时候，你会不会想，如果当初试一试会怎样？</p><p>20.If you shut the door to all errors,truth will be shut out.如果你拒绝面对错误，真相也会被挡在门外。</p><p>21.The bast way to gain self-confidence is to do what you afraid to do.获得自信的最好方法是做你不敢做的事。</p><p>22.Be present - it is the only moment that matters.留意当下-这是唯一的重要时刻。</p><p>23.The most rewarding things you do in life are often the ones that look like they cannot be done.最令人满足的事，是完成那些看似无法完成的事。</p><p>24.The beautiful thing about learning is nobody can take it away from you.学习的美好之处，是没有人可以把它从你身上拿走。</p><p>25.The useless men are those who never change with the years.没用的人是那些不随岁月改变的人。</p><p>26.Change is a law,and no amount of pretending will alter that reality.改变是一个定律，再多假装都无法改变这个事实。</p><p>27.It is better to destroy one’s own errors than those of others.改正他人的错误不如改正自己的错误。</p><p>28.What value will there ever be in life,if we are not together?如果我们不在一起，生活还有什么意义？</p><p>29.Sometimes affection is a shy flower that takes time to blossom.有时候爱情是一朵娇羞的花，需要时间才能慢慢绽放。</p><p>30.Why are you keeping curiosity door locked?为什么你要把好奇心锁住？</p><p>31.The rest of the world may follow the rules,but i must follow my heart!其他人遵从规矩，而我听从内心。</p><p>32.A half-read book is a half-finished love affair.读一半的书相当于谈了一半的恋爱。</p><p>33.No matter what happens,even if the stars fall,I will live.无论发生什么，即便是星辰陨落，我也要好好活着。</p><p>34.If you want to hide a tree,then a forest is the best place to do it.隐藏一棵树的绝佳地点就是森林。</p><p>35.Be careful which path you travel now,Strange.Stronger men than you have lost their way.小心你脚下的路，比你强的人都曾迷失过方向。</p><p>36.What’s coming will come and we’ll just meet it when it does.该来的总会来。来到时，就勇敢面对。</p><p>37.The most difficult thing is the decision to act,the rest is merely tenacity.最困难的是下决定，剩下的只是坚持。</p><p>38.Flowers never emit so sweet and strong a fragrance as before a storm.花的芬芳，在暴雨将至之时最为强烈。</p><p>39.The fate of arrangement,has let us very happy,after happiness,but it is the eter-nal darkness.命运的安排，曾让我们很幸福，但是幸福过后，却是永恒的黑暗。</p><p>40.Who love,write into a set of ink dye lotus;who miss the sentences into chapter drunk time.谁的眷恋，落笔成集墨染莲华；谁的思念，化句成章醉了时光。</p><p>41.I love the door,that I love hard,everlasting longing for each other does not have,short lovesickness infinite.入我相思门，知我相思苦，长相思兮长相忆，短相思兮无穷极。</p><p>42.The past can not remembered today.Only a pair of crying eyes,tears again.已过去的不可再，今天只可忆起。一双懂得哭的眼，落泪又再落泪。</p><p>43.Red makeup at the beginning of the world,boundless rivers and mountains,The first face,crush nightmare impermanence,without.红尘初妆，山河无疆。最初的面庞，粉碎梦靥无常，命格无双。</p><p>44.Too many accidents,did not want to reluc-tantly,I sign with emotion.Too many difficulties will make people afraid to see the future.太多意外，没想要勉强我感慨，太多困难，会让人害怕未来。</p><p>45.If season just changed the color of the sky,maybe I wouldn’t be so sad.如果季节只改变天空的颜色，或许我就不会如此悲伤万千了。</p><p>46.Gentle and fierce,Want to have a strange self, give yourself some surprises.温柔也好，凶狠也罢。想有个陌生的自己，给自己一些惊喜。</p><p>47.Sooner or later,someone will replace you in my heart,don’t worry,don’t be guilty,don’t be sorry.早晚会有人代替你在我心中的位置，别担心别愧疚，别说对不起。</p><p>48.Originally,there are a lot of things,when turned around,only to find that is has nothing to do with love.原来，很多事情，在你转身的时候才发现，它与爱情无关。</p><p>49.The world’s most sad love is,knowing not old,but still hard to embrace.这个世界上最令人难过的爱情是，明知无法终老，却仍难舍拥抱。</p><p>50.Life is not a race,but a journey to be savored each step of the way.生命不是一场赛跑，而是一步一个脚印的路程。</p><p>51.Don’t set your goals by what other people deem important.别人认为重要的事不一定是你的目标。</p><p>52.Love doesn’t end,just because we don’t see each other.爱并不会因为见不到彼此就消逝不见了。</p><p>53.Don’t forget,a person’s greatest emotional need is to feel appreciated.莫忘记，人类情感上最大的需要是感恩。</p><p>54.My existence is not without reason! I know that I could be a quite a different person!我知道我的存在必定有意义！我知道我会成为一个与众不同的人！</p><p>55.Just do what works for you,because there will always be someone who think differently.就做你自己能做的，因为天外有天，人外有人，总有人想的不同。</p><p>56.You can’t make decisions based on fear and the possibility of what might happen.不要因为恐惧未知的可能而妄下决定。</p><p>57.Use your smile to change the world.Don’t let the world change your smile.用你的笑容改变世界，别让世界改变你的笑容。</p><p>58.Embrace your life,for we only live once.拥抱你的生活，因为我们只能活一次。</p><p>59.We got things to do.Places to go.People to see.Futures to make.我们有很多事要做，有好些地方要去，要见不同的人，要去创造更美好的未来。</p><p>60.Accept who you are;and revel in it.接收真实的自己并乐在其中。</p><p>61.Don’t let go too soon,but don’t hold on too long.不要放手太快，也别紧握太久。</p><p>62.Your attitude,not your aptitude,will determine your altitude.决定你人生高度的，不是你的才能，而是你的态度。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> English </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift API 设计准则</title>
      <link href="/2023/07/20/ios/Swift-API-%E8%AE%BE%E8%AE%A1%E5%87%86%E5%88%99/"/>
      <url>/2023/07/20/ios/Swift-API-%E8%AE%BE%E8%AE%A1%E5%87%86%E5%88%99/</url>
      
        <content type="html"><![CDATA[<p><br>1.简洁经常有助于代码清晰，但是简洁本身不应该独自成为我们编码的目标。<br><br>2.务必为函数添加文档注释 — 特别是泛型函数。<br><br>3.类型使用大写字母开头，函数、变量和枚举成员使用小写字母开头，两者都使用驼峰式命名法。<br><br>4.使用类型推断。省略掉显而易见的类型会有助于提高可读性。<br><br>5.如果存在歧义或者在进行定义的时候不要使用类型推断。(比如 func 就需要显式地指定返回类型)<br><br>6.优先选择结构体，只在确实需要使用到类特有的特性或者是引用语义时才使用类。<br><br>7.除非你的设计就是希望某个类被继承使用，否则都应该将它们标记为 final。<br><br>8.除非一个闭包后面立即跟随有左括号，否则都应该使用尾随闭包 (trailing closure) 的语法。<br><br>9.使用 guard 来提早退出方法。<br><br>10.避免对可选值进行强制解包和隐式强制解包。它们偶尔有用，但是经常需要使用它们的话往往意味着有其他不妥的地方。<br><br>11.不要写重复的代码。如果你发现你写了好几次类似的代码片段的话，试着将它们提取到一个函数里，并且考虑将这个函数转化为协议扩展的可能性。<br><br>12.“试着去使用 map 和 reduce，但这不是强制的。当合适的时候，使用 for 循环也无可厚非。高阶函数的意义是让代码可读性更高。但是如果使用 reduce 的场景难以理解的话，强行使用往往事与愿违，这种时候简单的 for 循环可能会更清晰。”<br><br>13.“试着去使用不可变值：除非你需要改变某个值，否则都应该使用 let 来声明变量。不过如果能让代码更加清晰高效的话，也可以选择使用可变的版本。用函数将可变的部分封装起来，可以把它带来的副作用进行隔离。”<br><br>14.Swift 的泛型可能会导致非常长的函数签名。坏消息是我们现在除了将函数声明强制写成几行以外，对此并没有什么好办法。我们会在示例代码中在这点上保“Swift 的泛型可能会导致非常长的函数签名。坏消息是我们现在除了将函数声明强制写成几行以外，对此并没有什么好办法。我们会在示例代码中在这点上保”<br><br>15.“除非你确实需要，否则不要使用 self.。不过在闭包表达式中，self 是被强制使用的，这是一个清晰的信号，表明闭包将会捕获 self。”<br><br>16.“尽可能地对现有的类型和协议进行扩展，而不是写一些全局函数。这有助于提高可读性，让别人更容易发现你的代码。”</p><ul><li>摘录来自: Chris Eidhof. “Swift 进阶。” Apple Books.</li></ul>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>尽量用字面量语法(literal syntax)</title>
      <link href="/2023/07/20/ios/literal-syntax/"/>
      <url>/2023/07/20/ios/literal-syntax/</url>
      
        <content type="html"><![CDATA[<p>OC中的NSString、NSNumber、NSArray、NSDictionary这几个类，在Objective-C 1.0起可以用一种非常简单的方式创建这些类的对象-“字面量语法”。</p><p>1.NSString的字面量语法如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSString *str = @&quot;Objective-C&quot;;</span><br></pre></td></tr></table></figure><p> 2.NSNumber的字面量语法如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSNumber *num = @1;</span><br></pre></td></tr></table></figure><p>3.NSArray的字面量语法如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">NSArray *array = @[@1, @2, @3, @4];</span><br><span class="line">NSNumber *num = array[1];</span><br></pre></td></tr></table></figure><p>4.NSDictionary的字面量语法如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">NSDictionary *dict = @&#123;@&quot;one&quot;: @1, @&quot;two&quot;: @2&#125;;</span><br><span class="line">NSNumber *num1 = dict[@&quot;one&quot;];</span><br></pre></td></tr></table></figure><p>  为什么要说尽量用字面量语法呢？<br>  首先语法更简洁了，这就不用说了。<br>  然后就是另一个原因了：<br>  首先执行下面代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">NSObject *obj1 = [NSObject new];</span><br><span class="line">NSObject *obj2 = nil;</span><br><span class="line">NSObject *obj3 = [NSObject new];</span><br><span class="line">        </span><br><span class="line">NSArray *array1 = [NSArray arrayWithObjects:obj1, obj2, obj3, nil];</span><br></pre></td></tr></table></figure><p>你会发现array中只有一个元素，为什么呢，因为obj2是空值arrayWithObjects方法会依次处理各个参数，直到发现nil为止，然而obj2是空值所以方法提前结束了。<br> 下面是另一段代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">NSObject *obj1 = [NSObject new];</span><br><span class="line">NSObject *obj2 = nil;</span><br><span class="line">NSObject *obj3 = [NSObject new];</span><br><span class="line">        </span><br><span class="line">NSArray *array1 = @[obj1, obj2, obj3];</span><br></pre></td></tr></table></figure><p>运行之后你就会发现异常了，这是因为字面量语法创建数组时如果有元素是空值会异常。</p><p>这就说明，字面量语法更加安全一些，因为这样可以使我们尽早发现这个错误，这时抛出的异常肯定比你以后去找数组为什么少个元素的省力多了。</p><p>最后，我们也可以用字面量来创建可变对象，只要copy一份，例如数组：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSMutableArray *mutableArray = [@[@1, @2, @3, @4]  mutableCopy];</span><br></pre></td></tr></table></figure><p>这样多调了一个方法，多创建一个对象，但是好处还是比缺点多的。</p>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> OC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS后台无限发送请求</title>
      <link href="/2023/07/20/ios/iOS%E5%90%8E%E5%8F%B0%E6%97%A0%E9%99%90%E5%8F%91%E9%80%81%E8%AF%B7%E6%B1%82/"/>
      <url>/2023/07/20/ios/iOS%E5%90%8E%E5%8F%B0%E6%97%A0%E9%99%90%E5%8F%91%E9%80%81%E8%AF%B7%E6%B1%82/</url>
      
        <content type="html"><![CDATA[<p>根据苹果文档中关于后台执行的描述，任何app都有10分钟左右的后台任务执行时间。 10分钟后，app会被iOS强行挂起。<br>但是，有5类app允许有“无限的”后台运行时间：</p><ol><li>Audio。</li><li>Location&#x2F;GPS。</li><li>VoIP。</li><li>Newsstand。</li><li>Exernal Accessory 。<br>你可以将任何app声明为上述5种类型以获得无限的后台运行时间，但当你提交app到App Store时，苹果会审查你的app，一旦发现你“滥用”了后台API，你的app将被拒绝。<br>当然，对于企业开发而言，不存在“滥用”的问题——企业app可以通过OTA部署，不经过苹果商店审查。<br>在企业部署中，你可以将一个app声明为VoIP，但这个程序根本和VoIP无关，我们的目的只是为了让iOS给我们无限后台执行的权限。声明过程是在app的Info.plist文件中加入以下key：</li></ol><p><key>UIBackgroundModes</key><br><array><br><string>voip</string><br></array></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">- (void)applicationDidEnterBackground:(UIApplication *)application &#123;</span><br><span class="line">    // Use this method to release shared resources, save user data, invalidate timers, and store enough application state information to restore your application to its current state in case it is terminated later.</span><br><span class="line">    // If your application supports background execution, this method is called instead of applicationWillTerminate: when the user quits.</span><br><span class="line">    </span><br><span class="line">    [self backgroundHandler];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)backgroundHandler &#123;</span><br><span class="line">    </span><br><span class="line">    NSLog(@&quot;### --&gt;backgroundinghandler&quot;);</span><br><span class="line">    UIApplication *app = [UIApplication sharedApplication];</span><br><span class="line">     UIBackgroundTaskIdentifier bgTask = [app beginBackgroundTaskWithExpirationHandler:^&#123;</span><br><span class="line">        dispatch_async(dispatch_get_main_queue(),^&#123;</span><br><span class="line">            if( bgTask != UIBackgroundTaskInvalid)&#123;</span><br><span class="line">//                bgTask = UIBackgroundTaskInvalid;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        NSLog(@&quot;====任务完成了。。。。。。。。。。。。。。。===&gt;&quot;);</span><br><span class="line">        // [app endBackgroundTask:bgTask];</span><br><span class="line">        </span><br><span class="line">    &#125;];</span><br><span class="line">    </span><br><span class="line">    // Start the long-running task</span><br><span class="line">    dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^&#123;</span><br><span class="line">        while (true) &#123;</span><br><span class="line">            AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];</span><br><span class="line">            NSDictionary *parameters = @&#123;@&quot;email&quot;:@&quot;849430904@qq.com&quot;,@&quot;password&quot;:@&quot;85252&quot;&#125;;</span><br><span class="line">            [manager POST:@&quot;http://192.168.20.215:8080/v1/email/login&quot; parameters:parameters progress:^(NSProgress * _Nonnull uploadProgress) &#123;</span><br><span class="line">                </span><br><span class="line">            &#125; success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) &#123;</span><br><span class="line">                NSLog(@&quot;success:%@&quot;,responseObject);</span><br><span class="line">            &#125; failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) &#123;</span><br><span class="line">                NSLog(@&quot;error:%@&quot;, error.userInfo);</span><br><span class="line">            &#125;];</span><br><span class="line">            </span><br><span class="line">            sleep(5);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在测试期间请求是一只发送的.</p>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> OC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一节 金融市场与资产管理行业</title>
      <link href="/2023/07/20/others/finance1/"/>
      <url>/2023/07/20/others/finance1/</url>
      
        <content type="html"><![CDATA[<h1 id="一、金融与居民理财"><a href="#一、金融与居民理财" class="headerlink" title="一、金融与居民理财"></a>一、金融与居民理财</h1><p>  1、所谓金融，简单来讲即货币的融通。居民是社会的最古老、最基本的经济主体。<br>  2、理财指的是对财务进行管理，以实现对财产的保值、增值。目前，居民理财主要方式是货币存储和投资两类。<br>  3、货币储蓄是指居民将暂时不用或者结余的货币收入存入银行或其他金融机构的一种存款活动。储蓄的特征是其保值性。<br>  4、投资是指投资者当期投入一定数额的资金期望在未来获得回报。</p><h1 id="二、金融市场"><a href="#二、金融市场" class="headerlink" title="二、金融市场"></a>二、金融市场</h1><p>  金融市场和金融服务机构是现代金融体系的两大运作载体。   </p><h2 id="（一）金融市场的分类"><a href="#（一）金融市场的分类" class="headerlink" title="（一）金融市场的分类"></a>（一）金融市场的分类</h2><h3 id="1-按照交易工具的期限分为货币市场和资本市场。"><a href="#1-按照交易工具的期限分为货币市场和资本市场。" class="headerlink" title="1.按照交易工具的期限分为货币市场和资本市场。"></a>1.按照交易工具的期限分为货币市场和资本市场。</h3><p>（1）货币市场又叫短期金融市场，是指专门融通一年以内的短期资金场所。主要解决市场参与者短期性的周转和余额调剂问题。<br>（2）资本市场又称为长期金融市场，是指以期限在一年以上的有价值证券为交易工具进行长期资金交易的市场。（广义的资本市场包括：一是银行中长期存贷款市场；二是有价证券市场，包括中长期债券市场和股票市场。狭义的资本市场专指中长期债券市场和股票市场）  </p><h3 id="2-按照交易标的物分为票据、证券、衍生工具、外汇和黄金市场等。"><a href="#2-按照交易标的物分为票据、证券、衍生工具、外汇和黄金市场等。" class="headerlink" title="2.按照交易标的物分为票据、证券、衍生工具、外汇和黄金市场等。"></a>2.按照交易标的物分为票据、证券、衍生工具、外汇和黄金市场等。</h3><p>（1）票据市场按交易方式主要分为票据承兑市场和贴现市场。票据市场是货币市场的重要组成部分。<br>（2）证券市场主要是股票、债券、基金等有价证券发行和转让流通的市场。<br>（3）衍生工具市场是各种衍生金融工具进行交易的市场。<br>（4）外汇市场市直各国中央银行、外汇银行、外汇经纪人以及客户组成的外汇买卖、经营活动的总和。外汇市场包括外汇批发市场和零售市场。<br>（5）黄金市场是专门几种进行黄金交易的中心或场所。黄金国际储备资产之一，在国际支付中占据一席之地，因此黄金市场仍被看作是金融市场的组成部分。   </p><h3 id="3-按照交割期限分为现货市场和期货市场。"><a href="#3-按照交割期限分为现货市场和期货市场。" class="headerlink" title="3.按照交割期限分为现货市场和期货市场。"></a>3.按照交割期限分为现货市场和期货市场。</h3><p>（1）现货市场的交易协议达成后在两个交易日内进行交割。由于现货市场的成交与交割之间几乎没有时间间隔，因而对交易双方来说，利率和汇率风险很小。<br>（2）期货市场的交易在协议达成后并不立即进行交割，而是约定在某一特定时间后进行交割，协议成交和标的交割是分离的。</p><h2 id="（二）金融市场的构成要素"><a href="#（二）金融市场的构成要素" class="headerlink" title="（二）金融市场的构成要素"></a>（二）金融市场的构成要素</h2><h3 id="1-市场参与者主要包括政府、中央银行、金融机构、个人和企业居民。首先，金融机构是最重要的中介机构，是储蓄转化为投资的重要渠道。其次金融机构充当资金的供给者、需求者和中间人等多重角色。然后，金融机构作为机构投资者具有支配性的作用。"><a href="#1-市场参与者主要包括政府、中央银行、金融机构、个人和企业居民。首先，金融机构是最重要的中介机构，是储蓄转化为投资的重要渠道。其次金融机构充当资金的供给者、需求者和中间人等多重角色。然后，金融机构作为机构投资者具有支配性的作用。" class="headerlink" title="1.市场参与者主要包括政府、中央银行、金融机构、个人和企业居民。首先，金融机构是最重要的中介机构，是储蓄转化为投资的重要渠道。其次金融机构充当资金的供给者、需求者和中间人等多重角色。然后，金融机构作为机构投资者具有支配性的作用。"></a>1.市场参与者主要包括政府、中央银行、金融机构、个人和企业居民。首先，金融机构是最重要的中介机构，是储蓄转化为投资的重要渠道。其次金融机构充当资金的供给者、需求者和中间人等多重角色。然后，金融机构作为机构投资者具有支配性的作用。</h3><h3 id="2-金融工具"><a href="#2-金融工具" class="headerlink" title="2.金融工具"></a>2.金融工具</h3><p>（1）金融工具是金融市场上进行交易的载体，最初被称为信用工具。<br>（2）金融工具一般具有广泛的社会可接受性，随时可以流通转让。  </p><h3 id="3-金融交易的组织方式"><a href="#3-金融交易的组织方式" class="headerlink" title="3.金融交易的组织方式"></a>3.金融交易的组织方式</h3><p>（1）交易所交易方式：有固定场所的组织、有制度、集中进行交易的方式。<br>（2）柜台交易方式：在各金融机构柜台上买卖上方进行面议的、分散交易的方式。<br>（3）电信网络交易方式：既没有固定场所，交易双方也不直接接触，主要借助电子通信或者互联网技术手段来完成交易的方式。  </p><h1 id="三、金融资产与资产管理行业"><a href="#三、金融资产与资产管理行业" class="headerlink" title="三、金融资产与资产管理行业"></a>三、金融资产与资产管理行业</h1><h2 id="（一）金融资产"><a href="#（一）金融资产" class="headerlink" title="（一）金融资产"></a>（一）金融资产</h2><h3 id="1-金融资产是代表未来收益或者资产合法要求权的凭证，标示了明确的价值，表明交易双方的所有权关系和债权关系。"><a href="#1-金融资产是代表未来收益或者资产合法要求权的凭证，标示了明确的价值，表明交易双方的所有权关系和债权关系。" class="headerlink" title="1.金融资产是代表未来收益或者资产合法要求权的凭证，标示了明确的价值，表明交易双方的所有权关系和债权关系。"></a>1.金融资产是代表未来收益或者资产合法要求权的凭证，标示了明确的价值，表明交易双方的所有权关系和债权关系。</h3><h3 id="2-金融资产一般分为债权类和股权类两种："><a href="#2-金融资产一般分为债权类和股权类两种：" class="headerlink" title="2.金融资产一般分为债权类和股权类两种："></a>2.金融资产一般分为债权类和股权类两种：</h3><p>（1）债权类以票据，债券等契约型投资工具为主。<br>（2）股权类以各类股票为主。  </p><h2 id="（二）资产管理与资产管理行业"><a href="#（二）资产管理与资产管理行业" class="headerlink" title="（二）资产管理与资产管理行业"></a>（二）资产管理与资产管理行业</h2><h3 id="1-资产管理一般是指金融机构受投资者委托，为实现投投资者的特定目标和利益，进行证券和其他金融产品的投资病提供金融资产管理服务，并收取费用的行为。"><a href="#1-资产管理一般是指金融机构受投资者委托，为实现投投资者的特定目标和利益，进行证券和其他金融产品的投资病提供金融资产管理服务，并收取费用的行为。" class="headerlink" title="1.资产管理一般是指金融机构受投资者委托，为实现投投资者的特定目标和利益，进行证券和其他金融产品的投资病提供金融资产管理服务，并收取费用的行为。"></a>1.资产管理一般是指金融机构受投资者委托，为实现投投资者的特定目标和利益，进行证券和其他金融产品的投资病提供金融资产管理服务，并收取费用的行为。</h3><p>资产管理的特征：<br>（1）从参与方来看，资产管理包括委托方和受托方，受托方为投资者。<br>（2）从受托资产来看，主要为货币等金融资产，一般不包括固定字长等实物资产。<br>（3）从管理方式来看，资产管理主要通过投资于银行贷款、证券、期货、基金、保险或者实体企业股权等资产实现增值。  </p><h3 id="2-资产管理行业的功能和作用："><a href="#2-资产管理行业的功能和作用：" class="headerlink" title="2.资产管理行业的功能和作用："></a>2.资产管理行业的功能和作用：</h3><p>（1）资产管理行业能够为市场经济体系有效配置资源，是有限的资源配置带最有效率的产品和服务部门，提高整个社会经济的效率和生产服务水平。<br>（2）通过资产管理行业专业的管理活动，帮助投资者进行投资决策。<br>（3）资产管理行业创造出十分广泛的投资产品和服务，满足投资者。<br>（4）资产管理行业还能对金融资产合理定价，给金融市场提供流动性，降低交易成本，是金融市场更加健康有效，最终有利于一国经济的发展。  </p><h3 id="3-资产管理行业界定"><a href="#3-资产管理行业界定" class="headerlink" title="3.资产管理行业界定"></a>3.资产管理行业界定</h3><p>（1）资产管理广泛涉及银行、证券、保险、基金、信托、期货等行业，但是具体范畴并无明确界定。<br>（2）从公司层面来看，美国资产管理机构包括银行、保险公司和专业资产管理公司三类。  </p><h1 id="四、我国资产管理行业的现状"><a href="#四、我国资产管理行业的现状" class="headerlink" title="四、我国资产管理行业的现状"></a>四、我国资产管理行业的现状</h1><p>在我国，传统的资产管理行业主要是基金管理公司和信托公司。它们为资产管理机构提供各类公募基金、私募基金、信托计划等资产管理产品。<br>随着我国宏观经济的发展，居民收入水平的提高、理财观念的增强，金融科技的进步以及相关政策法规的不断完善，我国资产管理行业将迎来前所未有的发展机遇，成为名副其实的大资管。资产管理行业的发展对提升资本市场效率、保护投资者权益以及服务实体经济具有重要的战略意义。<br>随着资产管理行业的进一步开放,混业经营和”大资管”的趋势愈发明显,银行、证券、信托、基金与保险等金融机构正进行着跨领域、跨行业的资产管理竞争和合作。但是随着规模的不断扩大,问题也开始涌现,对行业监管也提出了更高要求。  </p><ol><li>我国传统的资产管理行业主要是基金管理公司和信托公司。</li><li>近年银行、证券、保险等各类金融机构纷纷开展资产管理业务。</li><li>各类机构广泛参与、各类资产管理业务交叉融合、分处不同监管体系所形成的既相似又不同的混业局面，是我国目前大资产管理现状。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 基金基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 金融 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>reachability</title>
      <link href="/2023/07/20/ios/reachability/"/>
      <url>/2023/07/20/ios/reachability/</url>
      
        <content type="html"><![CDATA[<p>首先去<br><a href="https://developer.apple.com/library/ios/samplecode/Reachability/Listings/Reachability_Reachability_m.html">https://developer.apple.com/library/ios/samplecode/Reachability/Listings/Reachability_Reachability_m.html</a> 下载Reachability类。</p><p>然后将Reachability.h和Reachability.m拖进你的工程，然后添加SystemConfiguration.framework框架。<br>注：Reachability 2.x版本是不支持ARC的，如果你用的是2.x的版本，请手动禁用该类的ARC。TARGETS-&gt;Build Phases-&gt;Compile Sources双击Reachability.m，输入框添加“-fno-objc-arc”。</p><p>然后判断网络状态方法如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">    NSString *site = @&quot;www.MyWeb.com&quot;;</span><br><span class="line">    Reachability *reach = [Reachability reachabilityWithHostName:site];</span><br><span class="line">    </span><br><span class="line">    switch ([reach currentReachabilityStatus]) &#123;</span><br><span class="line">        case NotReachable:</span><br><span class="line">            NSLog(@&quot;不能访问%@&quot;, site);</span><br><span class="line">            break;</span><br><span class="line">        case ReachableViaWiFi:</span><br><span class="line">            NSLog(@&quot;使用wifi访问%@&quot;, site);</span><br><span class="line">            break;</span><br><span class="line">        case ReachableViaWWAN:</span><br><span class="line">            NSLog(@&quot;使用3G/4G访问%@&quot;, site);</span><br><span class="line">            break;</span><br><span class="line">        default:</span><br><span class="line">            break;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>判断有无网络连接：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">    if ([[Reachability reachabilityForInternetConnection] currentReachabilityStatus] != NotReachable) &#123;</span><br><span class="line">        [self showAlert:@&quot;网络可用&quot;];</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        [self showAlert:@&quot;网络不可用&quot;];</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>监听网络状态的方法，写在AppDelegate类的application: didFinishLaunchingWithOptions:里面:<br>注册通知</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(reachabilityChanged:) name:kReachabilityChangedNotification object:nil];</span><br><span class="line">Reachability *reachability = [Reachability reachabilityWithHostName:@&quot;www.baidu.com&quot;];</span><br><span class="line">[reachability startNotifier];</span><br></pre></td></tr></table></figure><p>网络状态变化实现</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> *此函数通过判断联网方式，通知给用户</span><br><span class="line"> */</span><br><span class="line">- (void)reachabilityChanged:(NSNotification *)notification &#123;</span><br><span class="line">    Reachability *curReachability = [notification object];</span><br><span class="line">    NSParameterAssert([curReachability isKindOfClass:[Reachability class]]);</span><br><span class="line">    NetworkStatus curStatus = [curReachability currentReachabilityStatus];</span><br><span class="line">    switch (curStatus) &#123;</span><br><span class="line">        case NotReachable:</span><br><span class="line">            NSLog(@&quot;无网络&quot;);</span><br><span class="line">            break;</span><br><span class="line">        case ReachableViaWiFi:</span><br><span class="line">            NSLog(@&quot;使用wifi网络&quot;);</span><br><span class="line">            break;</span><br><span class="line">        case ReachableViaWWAN:</span><br><span class="line">            NSLog(@&quot;使用3G/4G网络&quot;);</span><br><span class="line">            break;</span><br><span class="line">            </span><br><span class="line">        default:</span><br><span class="line">            break;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意：新版本中reachabilityForLocalWiFi方法被移除了</strong><br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/2231610-75ac5b0908b014e0.webp"></p>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> OC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【战锤40K】大背景</title>
      <link href="/2023/07/19/game/warhammer-guide/"/>
      <url>/2023/07/19/game/warhammer-guide/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏背景"><a href="#游戏背景" class="headerlink" title="游戏背景"></a>游戏背景</h1><p>《战锤40K》是一款由英国游戏公司“游戏工坊”（Games Workshop）制作的系列桌面战棋游戏。该游戏初版规则于1987年发行，2023年已更新至第十版规则。</p><p>游戏包括了大量形态各异的种族，它们各自拥有独特的历史文化，并糅合了浓重科幻魔幻色彩。在这一背景下衍生出了多种不同的游戏。在作为系列主干的桌游中，玩家主要使用25~50毫米底盘的微缩模型，参照规则书及圣典进行游戏，该游戏也以其哥特+科幻式太空科幻背景而受到玩家的好评。</p><h1 id="故事背景"><a href="#故事背景" class="headerlink" title="故事背景"></a>故事背景</h1><p>《战锤40K》的世界观以银河系为舞台，建立在哥特式的科学幻想设定之上。游戏最受欢迎的核心元素之一是星际战士——未来版的幻想骑士、破败衰落的跨星系人类帝国中的精英战士。<br>由于它最初被创作为《战锤》游戏的科幻衍生版本，《战锤40K》的世界观包含了许多奇幻流派的元素，如魔法和经典奇幻种族的变种。而在背景设定不断扩充的过程中，其灵感来源包括了古典和现代的科幻、奇幻和恐怖电影及电视剧；著名的作家流派，如艾萨克·阿西莫夫、弗兰克·赫伯特、霍华德·菲利普·洛夫克拉夫特、迈克·穆尔考克、约翰·罗纳德·瑞尔·托尔金、罗伯特·安森·海因莱因（尤其是该游戏的许多元素都受到了海因莱因的小说《星船伞兵》的影响，例如乘着空降舱而来，身穿动力装甲的陆战队员，以及从天而降的轨道轰炸等等。）；中世纪、巴洛克和超现实主义的艺术（尤其是电影《异形》的设计师汉斯·鲁道夫·吉格尔）；喜闻乐见的历史背景描写，如两次世界大战、维多利亚时代的英国、罗马帝国、宗教裁判所、纳粹德国、苏联等。<br>其结果在作品中的体现是历史常以千年乃至万年计，活跃在宏大而苍凉的背景之间的是中世纪哥特风格浓郁的战斗修女；深受战后西方末世情节影响的混沌军团；充满北美黑人Hip-Hop和街头文化影响的欧克兽人；像是奇幻设定中高雅精灵在未来投影的灵族；深受军迷和一战二战历史迷喜爱的帝国卫队；还有向异形致敬的泰伦虫族以及充满东方色彩的钛帝国、机械王朝风格的太空死灵。<br>此种混合导致这个游戏中的每一个种族都是极端排外的存在，每一方势力都是邪恶的，或者说每一方势力都有自己的“正义”，最多只有程度上的不同。举例而言，人类帝国往往被认为是“正义”的一边，虽然其内部有很多好人，但作为一个整体，它是一个穷兵黩武，草菅人命，腐败透顶，民不聊生，无可救药，极端排外的法西斯主义国家。然而换一种观点来看，终日劳作组装步枪总比终日劳作然后被异形杀死要好上一些。</p><h1 id="帝国时间线"><a href="#帝国时间线" class="headerlink" title="帝国时间线"></a>帝国时间线</h1><p>以人类的纪年法大致分为以下四个时代。</p><h2 id="泰拉时代"><a href="#泰拉时代" class="headerlink" title="泰拉时代"></a>泰拉时代</h2><h3 id="第一千年至第十五千年"><a href="#第一千年至第十五千年" class="headerlink" title="第一千年至第十五千年"></a>第一千年至第十五千年</h3><p>人类统治了地球。文明更替。太阳系内建立起了殖民地。人类入住了火星，以及木星、土星和海王星三颗行星的卫星。</p><h2 id="黑暗时代"><a href="#黑暗时代" class="headerlink" title="黑暗时代"></a>黑暗时代</h2><h3 id="第十五千年至第十八千年"><a href="#第十五千年至第十八千年" class="headerlink" title="第十五千年至第十八千年"></a>第十五千年至第十八千年</h3><p>人类开始使用亚光速宇宙飞船殖民群星。最初唯有邻近的星系能被触及，历经十代人的旅程使得新建的殖民地与地球分离开来，必须自食其力以求生存。</p><h3 id="第十八千年至第二十二千年"><a href="#第十八千年至第二十二千年" class="headerlink" title="第十八千年至第二十二千年"></a>第十八千年至第二十二千年</h3><p>亚空间（warp）驱动装置的发明加快了殖民银河的步伐。联邦与帝国林立。第一次与外星人接触，外星人战争首次爆发。科学第一次证明了人类中灵能者（psyker）的存在。灵能者开始在各处的人类世界上出现。</p><h3 id="第二十二千年至第二十五千年"><a href="#第二十二千年至第二十五千年" class="headerlink" title="第二十二千年至第二十五千年"></a>第二十二千年至第二十五千年</h3><p>第一名导航者（Navigator）的诞生让人类的宇宙船可以进行更快更远的亚空间跳跃。科学与技术加速进步，人类迈入了启蒙的黄金时代。人类世界宇内归一，并与数十外星种族签订了互不侵犯条约。</p><h2 id="纷争时代"><a href="#纷争时代" class="headerlink" title="纷争时代"></a>纷争时代</h2><h3 id="第二十五千年至第二十六千年"><a href="#第二十五千年至第二十六千年" class="headerlink" title="第二十五千年至第二十六千年"></a>第二十五千年至第二十六千年</h3><p>恐怖的亚空间风暴截断了恒星间旅行。风暴在初期只是零星地发生，但最终阻碍了所有的亚空间跳跃。人类的变异率激增。人类进入了混乱与绝望的黑暗时代。</p><h3 id="第二十六千年至第三十千年"><a href="#第二十六千年至第三十千年" class="headerlink" title="第二十六千年至第三十千年"></a>第二十六千年至第三十千年</h3><p>一场由AI人工智能引发的叛乱，席卷了整个银河系。人类与人工智能AI之间爆发了残酷、血腥的战争，虽然最后人类在付出了惨痛代价，镇压了AI人工智能的叛变，但世界因内战、叛乱、外星人的掠夺与入侵而变得四分五裂，无数科技被遗忘，人类至此再也无法重回黄金时代的巅峰。一些世界被人类灵能者和其他变异体支配，然后很快就沦为了亚空间生物的美餐。人类正在毁灭的边缘。</p><h2 id="帝国时代"><a href="#帝国时代" class="headerlink" title="帝国时代"></a>帝国时代</h2><h3 id="自第三十千年起"><a href="#自第三十千年起" class="headerlink" title="自第三十千年起"></a>自第三十千年起</h3><p>地球被 <strong>帝皇（Emperor）</strong> 统一，又与火星的机械教结盟。亚空间风暴终于减弱，恒星间旅行再次成为可能。帝皇建造了星炬（Astronomican），创造了二十名基因原体和二十支星际战士军团。在持续了两百多年的大远征（Great Crusade）中，人类世界被帝皇重新统一了。 </p><p>然而，帝皇创造出的军团原体中最受宠爱的战帅荷鲁斯被混沌邪神们诱惑，并说服一半的兄弟背叛了帝皇。两位巨人的争斗撼动了帝国的根基，迫使昔日的亲友针锋相对，这场反乱被称为 <strong>“荷鲁斯叛乱”（Horus Heresy）</strong>。叛乱的第七年，荷鲁斯在进攻地球皇宫时与帝皇展开了决斗，最终他落败身亡，但是帝皇也身负重伤。<br>荷鲁斯叛乱对帝国造成了无可估量的伤害。帝皇被搬入黄金宝座的静滞场内，如此方能维持一线生机。他的精神仅够维持着星炬，无法再亲自统治整个帝国。尽管叛军撤入了名为“恐惧之眼”（Eye of Terror）的亚空间裂缝中，但帝国仍然花费了数百年才平息了叛逆的余波。仍保持着忠诚的军团被分割成诸多小规模的“战团”以防重蹈覆辙。</p><p>数千年之后，人类继续沿着黑暗的道路前行。忠诚的原体都早已死亡或失踪，人类的未来掌握在以帝皇之名管理帝国的官僚和国教手中。帝皇的黄金宝座每日需要献祭一千名灵能者的灵魂以维持星矩的光辉（依靠星矩，人类的飞船才能进行亚空间航行），曾经将引导人类走向辉煌的科技变成了迷信的偶像。混沌的力量无处不在，外星种族伴随着无尽威胁，无魂的虫族妄图吞噬掉整个银河。</p><h3 id="参考文献："><a href="#参考文献：" class="headerlink" title="参考文献："></a>参考文献：</h3><ul><li>百度百科</li></ul>]]></content>
      
      
      <categories>
          
          <category> 游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 战锤 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>星际战士改造</title>
      <link href="/2023/07/19/game/space-marine/"/>
      <url>/2023/07/19/game/space-marine/</url>
      
        <content type="html"><![CDATA[<p>今天来聊一聊战锤背景故事中的宇宙猛男-星际战士(Astartes&#x2F;Space Marines)。</p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>星际战士是帝皇（Emperor）以20个基因原体为样本制造的超级战士。他们实力绝对毋庸置疑，他们不完全是人类，而是超人，通过基因改造、心理培训和无法想像的严酷训练，在一切方面都超越凡人。相对数以十亿记的人类，星际战士数量稀少，在大叛乱后为了预防再次发生大规模叛乱，极限战士的基因原体 <strong>罗伯特·基里曼</strong> 编写了 <strong>阿斯塔特圣典（Codex Astartes）</strong>，圣典将残存的九个忠诚派军团分割成了更小规模的<strong>战团（Chapter）</strong>，每个战团都以1000人左右的编制独立运作。</p><p>星际战士的强大力量源于各国战团的基因原体的基因种子以及后续的19项改造手术。<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/The_Emperor_Protects.jpg"></p><h1 id="基因种子"><a href="#基因种子" class="headerlink" title="基因种子"></a>基因种子</h1><p>基因种子【gene-seed】会通过手术植入新兵体内。基因种子产生胚细胞，每个细胞对应星际战士体内的一种植入器官。这些胚细胞和种子一起发育。5年后，脖子上的种子成熟并且可以被摘取。10年后，胸腔中的种子成熟并且可以被摘取。被植入基因种子的新兵如果适配成功后基因种子会在其体内生长，并从中获取部分基因原体的力量与战斗记忆（还有遗传疾病）从而增强各项身体机能以应对接下来的各项改造手术。</p><h1 id="器官植入手术"><a href="#器官植入手术" class="headerlink" title="器官植入手术"></a>器官植入手术</h1><p>各年龄阶段的手术示意图<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/SMImplantsNew.jpg"><br>部分器官分布图<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/warhammer-40k-Space-Marine-Imperium-968849.jpeg"></p><h3 id="阶段1-第二心脏【Secondary-Heart】"><a href="#阶段1-第二心脏【Secondary-Heart】" class="headerlink" title="阶段1-第二心脏【Secondary Heart】"></a>阶段1-第二心脏【Secondary Heart】</h3><p>最为简单和完全自持的植入器官。第二心脏不仅能够加快血液供应，也在受体原有心脏损毁时维持完整的生理机能。第一阶段的植入能让星际战士在氧气浓度不足或身受外伤的情况下存活。</p><h3 id="阶段2-骨强化器官【Ossmodula】"><a href="#阶段2-骨强化器官【Ossmodula】" class="headerlink" title="阶段2-骨强化器官【Ossmodula】"></a>阶段2-骨强化器官【Ossmodula】</h3><p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/otiDBat.jpeg"><br>这是一个小型管状器官，容纳了复杂的结构。骨强化器官监控并分泌影响骨骼生长的激素。同时，特殊的激素能促进骨骼组织吸收星际战士口粮中添加的陶瓷类化合物使得原本的骨骼变粗变硬。最终将会使星际战士的骨骼交织生长，使胸骨生长成为一块紧密的骨骼板，从而保护内脏。</p><h3 id="阶段3――肌肉强化器官【Biscopea】"><a href="#阶段3――肌肉强化器官【Biscopea】" class="headerlink" title="阶段3――肌肉强化器官【Biscopea】"></a>阶段3――肌肉强化器官【Biscopea】</h3><p>此器官植入胸腔。它体积小巧，近似球体，其主要功能在于激素调节，这与骨化强化模块类似。肌肉强化组织能够刺激人体肌肉的发育。<br><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/c602029367b84d45aae8df23b861f80.jpeg"></p><h3 id="阶段4――血液再造器官【Haemastamen】"><a href="#阶段4――血液再造器官【Haemastamen】" class="headerlink" title="阶段4――血液再造器官【Haemastamen】"></a>阶段4――血液再造器官【Haemastamen】</h3><p>这个不起眼的器官被植入一条大动脉之中。血液再造器官的作用有二。其一是监视，或者说是在某种程度上控制第2、第3阶段的植入器官。（要想长得快配套器官要跟上）其二，此器官也将改变受体的血液组分。结果是，星际战士的血液比正常人的血液更为高效，同时超人般的血液也能为星际战士的战甲提供一定程度的支持。</p><h3 id="阶段5――拉瑞曼器官【Larraman’s-Organ】"><a href="#阶段5――拉瑞曼器官【Larraman’s-Organ】" class="headerlink" title="阶段5――拉瑞曼器官【Larraman’s Organ】"></a>阶段5――拉瑞曼器官【Larraman’s Organ】</h3><p>这是个暗色肉质器官，形似肝脏，约有高尔夫球那么大。它和一组复杂的血管一起植入胸腔。这个组织生成和存储特殊的“拉瑞曼细胞【Larraman’s Cell】”。如果受体受伤，这些细胞会被释放到血液里。然后被输送到伤处。一旦接触空气，拉瑞曼细胞生成皮肤替代组织，迅速形成疤痕，从而止血并保护暴露的伤处。即使在战斗中受到重伤也能保证星际战士不会因失血过多而死。</p><h3 id="阶段6――Catalepsean神经结【Catalepsean-Node】"><a href="#阶段6――Catalepsean神经结【Catalepsean-Node】" class="headerlink" title="阶段6――Catalepsean神经结【Catalepsean Node】"></a>阶段6――Catalepsean神经结【Catalepsean Node】</h3><p>此器官通常经由头颅后面枕骨上的一个钻孔植入脑部。这个豆粒大小的组织能影响睡眠的生理节律，可以自由地控制睡眠。平时，星际战士的睡眠方式和常人相同，但出现睡眠剥夺现象时，Catalepsean神经结开始“介入”。植入此神经结的人能够按序“关闭”大脑的不同区域，从而在睡眠时保持警觉。能让星际战士在休息时对周围环境保持警惕。</p><h3 id="阶段7――预置胃【preomnor】"><a href="#阶段7――预置胃【preomnor】" class="headerlink" title="阶段7――预置胃【preomnor】"></a>阶段7――预置胃【preomnor】</h3><p>预置胃是契合胸腔的一个大型植入器官。这是一个进行预先消化的胃，能让星际战士食用多种有毒或几乎无法消化的物质。真正的消化并不在预置管胃内进行。一个个独立的检测管侦测潜在的毒素并加以中和，此外，在必要时，预置胃将和其他消化道隔离。</p><h3 id="阶段8――基因侦测神经【Omophage】"><a href="#阶段8――基因侦测神经【Omophage】" class="headerlink" title="阶段8――基因侦测神经【Omophage】"></a>阶段8――基因侦测神经【Omophage】</h3><p>这是一项复杂的植入手术。它实际上是大脑的一部分，但是位于颈椎和胸椎间的脊髓里。四个称作neuroclea的神经鞘被接入脊柱和预置胃的胃壁之间。Omophagea被设计用于吸收动物体内管理记忆、经验和天赋能力的组织生成的遗传物质。这赋予了星际战士非凡的求生天赋。他实际上能通过进食学习。如果星际战士吃了某个动物的一个部分，他将吸收那种动物的一些记忆。</p><h3 id="阶段9――多肺【Multi-lung】"><a href="#阶段9――多肺【Multi-lung】" class="headerlink" title="阶段9――多肺【Multi-lung】"></a>阶段9――多肺【Multi-lung】</h3><p>这是另一项大型器官植入。多肺，或“第三肺”,是一个灰色的管状器官。血液从嫁接到受体肺系统的血管流过这个器官。空气由此器官上的扩约肌吸入。在有毒空气中，一个伴生括约肌关闭气管，阻止普通呼吸以保护肺部。多肺能从缺氧或有毒的空气中吸收氧气。更重要的是，由于其有效的毒素分解和中和能力以及再生系统，它不会因呼吸毒气而受损。</p><h3 id="阶段10――视觉控制器官【Occulobe】"><a href="#阶段10――视觉控制器官【Occulobe】" class="headerlink" title="阶段10――视觉控制器官【Occulobe】"></a>阶段10――视觉控制器官【Occulobe】</h3><p>这个形似弹头的细小器官位于大脑底部。它提供激素和遗传刺激，能使星际战士的眼响应光学治疗。仅靠视觉控制器官不能增强星际战士的视力，但是它使得技师能够对眼的生长模式和视网膜感光细胞进行调节。一个成年星际战士拥有远胜凡人的视力，而且能在微光环境下正常视物，如同白昼。</p><h3 id="阶段11――莱曼之耳【Lyman’s-Ear】"><a href="#阶段11――莱曼之耳【Lyman’s-Ear】" class="headerlink" title="阶段11――莱曼之耳【Lyman’s Ear】"></a>阶段11――莱曼之耳【Lyman’s Ear】</h3><p>这个组织让星际战士能有意识地增强或过滤特定的背景噪音。不仅是听觉增强了，星际战士也不会因极度方向感缺失而感到晕眩或恶心。莱曼之耳的外形与普通人类耳朵无任何差别。</p><h3 id="阶段12――Sus-an脑膜【Sus-an-Membrane】"><a href="#阶段12――Sus-an脑膜【Sus-an-Membrane】" class="headerlink" title="阶段12――Sus-an脑膜【Sus-an Membrane】"></a>阶段12――Sus-an脑膜【Sus-an Membrane】</h3><p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/parte-cientifica-w40k-ii-L-id8No5.jpeg"><br>这个扁平的圆形器官植入大脑皮层顶部。它完全融合之前在脑部生长。如果没有对应的化学治疗和训练，该器官是无用的。然而，一个接受正确指导的星际战士能够进入一种假死状态。这可能是一个有意识动作，也可能在遭受极度身体创伤时自动启动。在这种状况下，星际战士能继续生存多年，即使已受到几乎致命的伤害。只有药剂师的化学治疗和自我暗示能将星际战士从此状态唤醒――星际战士无法自己唤醒自己。<br>已知被成功唤醒的最长休眠可达567年：他是来自黑暗天使战团的brother Silas Err</p><h3 id="阶段13――色素控制球【Melanochromic】，或色素控制器官【Melanochromic-Organ】"><a href="#阶段13――色素控制球【Melanochromic】，或色素控制器官【Melanochromic-Organ】" class="headerlink" title="阶段13――色素控制球【Melanochromic】，或色素控制器官【Melanochromic Organ】"></a>阶段13――色素控制球【Melanochromic】，或色素控制器官【Melanochromic Organ】</h3><p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/space_marine_melanochrome_by_the_first_magelord-d4beby3.jpg"><br>此器官呈黑色半球状。它以间接而极端复杂的方式工作。它侦测轰击皮肤的辐射水平和种类，并在必要时开始进行化学反应，将皮肤颜色变暗，以免被紫外线灼伤。它也对其他形式的辐射提供有限的保护。不同战团的不同色素控制器官的基因种子造成不同的肤色和发色，在一些战团所有的星际战士都有相同的颜色，例如亡魂战团皮肤白化的战士。</p><h3 id="阶段14――卵石肾脏【Oolitic-Kidney】"><a href="#阶段14――卵石肾脏【Oolitic-Kidney】" class="headerlink" title="阶段14――卵石肾脏【Oolitic Kidney】"></a>阶段14――卵石肾脏【Oolitic Kidney】</h3><p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/space_marine_oolitic_kidney_by_the_first_magelord-d4bebby.jpg"><br>这个棕红色的心形器官改善和调节星际战士的循环系统，使其他的植入器官有效发挥功能。鲕粒岩肾脏还能极其快速有效的过滤血液。第二心脏和卵石肾脏能够协同工作，在星际战士昏迷时，血液高速循环并紧急解毒系统。这能让星际战士在多肺无法处理的毒气中存活下来。</p><h3 id="阶段15――味觉监测神经【Neuroglottis】"><a href="#阶段15――味觉监测神经【Neuroglottis】" class="headerlink" title="阶段15――味觉监测神经【Neuroglottis】"></a>阶段15――味觉监测神经【Neuroglottis】</h3><p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/8fd7917ded45f6c1d8f6e2124bf410ad.jpg"><br>预置胃能消化致命物质，保护星际战士，而味觉监测神经能让他尝出潜在的食物。这个器官被植入口腔后部。通过咀嚼或浅尝，星际战士能发现出多种天然毒素，一些化学物质，甚至某些生物的独特气味。星际战士可以仅凭味觉追踪目标。</p><h3 id="阶段16――汗腺改进器官【Mucranoid】"><a href="#阶段16――汗腺改进器官【Mucranoid】" class="headerlink" title="阶段16――汗腺改进器官【Mucranoid】"></a>阶段16――汗腺改进器官【Mucranoid】</h3><p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/21d17ba9be7045938d62dbc7a5e008b.jpeg"><br>这个小型器官被植入肠组织下部，分泌的激素被结肠吸收。这种分泌物造成汗腺的变化。被药剂师的化学处理激活前，这种变化不会造成星际战士的任何改变。此手术的结果是：星际战士的汗成为覆盖皮肤表面的自然清洁剂。此物质也能在极端温度下保护星际战士，并提供一些对真空环境的防护。对Mucranoid进行的化学处理是远航和真空或近乎真空环境下作战的标准流程。</p><h3 id="阶段17――唾液腺体【Betcher’s-Gland】"><a href="#阶段17――唾液腺体【Betcher’s-Gland】" class="headerlink" title="阶段17――唾液腺体【Betcher’s Gland】"></a>阶段17――唾液腺体【Betcher’s Gland】</h3><p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/space_marine_betcher_s_gland_by_the_first_magelord-d4be9qa.jpg"><br>两个相同腺体分别植入位于下唇处的唾液腺旁边，或硬腭内。Betcher腺体的工作方式和其他毒虫的相似：合成并储存致命毒液。星际战士因为有腺体，对此毒素免疫。这种毒素还具有腐蚀性。一个置身铁牢的星际战士只用几分钟就能咬开铁条逃出。</p><h3 id="阶段18――基因存收腺【Progenoids】"><a href="#阶段18――基因存收腺【Progenoids】" class="headerlink" title="阶段18――基因存收腺【Progenoids】"></a>阶段18――基因存收腺【Progenoids】</h3><p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/space_marine_progenoids_by_the_first_magelord-d4be98h.jpg"><br>此腺体共两个，一个置于颈部，一个在胸腔深处。这个腺体对星际战士战团的存续十分重要。两个器官在星际战士体内成长，吸收其他器官产生的激素和基因物质。五年后，颈部腺体成熟，可以摘除。十年后，胸腔内腺体成熟，也可摘除。腺体只要发育成熟，便可随时摘除。这些腺体是战团基因种子的唯 一来源。成熟时，两个腺体都含有分别对应受体星际战士的每个植入器官的基因种子。一旦手术摘除后，基因存收腺必须小心保管，他的每个基因种子都对变异程度进行检查，健全的基因种子被储存。基因种子在合适环境下被小心保存。</p><h3 id="阶段19――黑色甲壳【Black-Carapace】"><a href="#阶段19――黑色甲壳【Black-Carapace】" class="headerlink" title="阶段19――黑色甲壳【Black Carapace】"></a>阶段19――黑色甲壳【Black Carapace】</h3><p><img src="https://boye-blog-images.oss-cn-beijing.aliyuncs.com/blog/hby/images/8aC2P.jpg"><br>这是最后和最特别的植入。它在培养槽里生长时看起来像黑色的塑料胶片。它在移出培养液后被切成大片，直接植入星际战士躯干部分的皮下。几个小时内此组织扩张，外部变硬，并向星际战士身体深处伸出神经束。几个月后，甲壳完全成熟，受体便能和切入硬化甲壳的神经传感器和注入点结合。这些人造“插入点”连接着动力装甲的各个部分，比如监视，医疗和生命维持单元。没有黑色甲壳的辅助，星际战士的动力装甲几乎完全无用。</p><h1 id="原铸星际战士（Primaris-Space-Marines）"><a href="#原铸星际战士（Primaris-Space-Marines）" class="headerlink" title="原铸星际战士（Primaris Space Marines）"></a>原铸星际战士（Primaris Space Marines）</h1><p>原铸星际战士植入了增强型基因种子，允许原铸星际战士比“旧版产品”多负载三种强化器官。“标准”星际战士也可以转化为原铸星际战士，转化手术被形容为破釜沉舟（crossing the Rubicon），过程非常痛苦，而且根据考尔的说法，在他获得足够的数据来完善改造过程之前转化手术的死亡率达到了61.6%。</p><h3 id="肌腱线圈（也有翻译叫做“钢化皮层”）【Sinew-Coils】"><a href="#肌腱线圈（也有翻译叫做“钢化皮层”）【Sinew-Coils】" class="headerlink" title="肌腱线圈（也有翻译叫做“钢化皮层”）【Sinew Coils】"></a>肌腱线圈（也有翻译叫做“钢化皮层”）【Sinew Coils】</h3><p>即使有着远超普通凡人的体质，一名普通星际战士在缺少动力甲和武器的情况下赤手空拳进行战斗仍然会有不小的风险。而肌腱线圈能大幅度增强一名原铸星际战士的体表肌肤和肌肉强度，一名未经改造的凡人在极端愤怒的情况下可能都无法打穿战车的金属外壳或是加固的混泥土墙，但是原铸星际战士可以在平常的状态下就能做到。除此以外，强化的肌肉和皮肤也能更好的保护他们体内的器官和植入物，尤其是与动力甲连接的黑色甲壳。</p><h3 id="增幅垂体（也有翻译叫做“圣颂垂体”）【Magnificat】"><a href="#增幅垂体（也有翻译叫做“圣颂垂体”）【Magnificat】" class="headerlink" title="增幅垂体（也有翻译叫做“圣颂垂体”）【Magnificat】"></a>增幅垂体（也有翻译叫做“圣颂垂体”）【Magnificat】</h3><p>这个只有拇指指甲大小的叶状植入物将被植入大脑的核心部分。它最大的效果是增幅原铸星际战士体内已有的器官，特别是对骨骼和肌肉的强化，这也是为什么原铸星际战士的个头普遍高于普通星际战士的原因。值得一提的是，这个植入器官原本是帝皇本人设计出来用于制造原体的，考尔本人只保有植入右半脑的部分，至于关于左半脑部分的图纸早已无迹可寻。</p><h3 id="贝利撒留熔炉【Belisarian-Furnace】"><a href="#贝利撒留熔炉【Belisarian-Furnace】" class="headerlink" title="贝利撒留熔炉【Belisarian Furnace】"></a>贝利撒留熔炉【Belisarian Furnace】</h3><p>这个器官位于胸腔，平时处于休眠状态。在极度紧张或者身体遭受破坏性创伤时会排出大量战斗响应激素混合物，帮助组织、骨骼和肌肉的快速修复，然后这个技能会冷却一阵。该器官能否正常运转是原铸化改造是否成功的重要指标，它决定了病人是否能在术后康复。前提是他们没死在改造过程中。包括原铸化后的极限战士战团长卡尔加在内的不少原铸星际战士都因为这个器官逃离了死神的魔爪。</p><h3 id="参考文献："><a href="#参考文献：" class="headerlink" title="参考文献："></a>参考文献：</h3><ol><li>维基百科</li><li><a href="https://forum.gamer.com.tw/G2.php?bsn=7506&sn=55">https://forum.gamer.com.tw/G2.php?bsn=7506&amp;sn=55</a></li><li><a href="https://www.toutiao.com/article/7081931400936505895/">https://www.toutiao.com/article/7081931400936505895/</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 星际战士 </tag>
            
            <tag> 战锤 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>about</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<h1 id="个人简介"><a href="#个人简介" class="headerlink" title="个人简介"></a>个人简介</h1><p>我是一名软件开发工程师，热爱游戏、电影、美剧和骑车，享受代码与生活的完美融合。</p><h1 id="我的爱好"><a href="#我的爱好" class="headerlink" title="我的爱好"></a>我的爱好</h1><ul><li>游戏（<strong>大家可以从首页的steam链接找到我！</strong>）</li><li>骑车</li><li>电影</li><li>美剧</li><li>健身</li></ul><h1 id="微信公众号"><a href="#微信公众号" class="headerlink" title="微信公众号"></a>微信公众号</h1><div align=center><img src="/image/hby_qr_code.jpg" width="500" height="500" /></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>link</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>Search</title>
      <link href="/search/index.html"/>
      <url>/search/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
